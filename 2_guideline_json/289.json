{
    "number": 289,
    "label": 2,
    "source": "ENSIA",
    "subject": "Post-Quantum Cryptography: Current state and quantum mitigation",
    "document(english)": "POST-QUANTUMCRYPTOGRAPHY Current state and quantum mitigation  MAY 2021, v2  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  ABOUT ENISA The European Union Agency for Cybersecurity, ENISA, is the Union’s agency ded-icated to achieving a high common level of cybersecurity across Europe. Estab-lished in 2004 and strengthened by the EU Cybersecurity Act, the European UnionAgency for Cybersecurity contributes to EU cyber policy, enhances the trustwor-thiness of ICT products, services and processes with cybersecurity certificationschemes, cooperates with Member States and EU bodies, and helps Europe pre-pare for the cyber challenges of tomorrow. Through knowledge sharing, capac-ity building and awareness raising, the Agency works together with its key stake-holders to strengthen trust in the connected economy, to boost resilience of theUnion’s infrastructure, and, ultimately, to keep Europe’s society and citizens digi-tally secure. For more information, visit www.enisa.europa.eu. CONTACT  For contacting the authors please use evangelos.rekleitis@enisa.europa.euFor media enquiries about this paper, please use press@enisa.europa.eu AUTHORS  Ward Beullens,Jan-Pieter D’Anvers,Andreas Hülsing,Tanja Lange,Lorenz Panny,Cyprien de Saint Guilhem,Nigel P. Smart. FOR ENISA  Evangelos Rekleitis,Angeliki Aktypi,Athanasios-Vasileios Grammatopoulos. LEGAL NOTICE  Notice must be taken that this publication represents the views and interpreta-tions of ENISA, unless stated otherwise. This publication should not be construedto be a legal action of ENISA or the ENISA bodies unless adopted pursuant to theRegulation (EU) No 2019/881. This publication does not necessarily representstate-of the-art and ENISA may update it from time to time. Third-party sourcesare quoted as appropriate. ENISA is not responsible for the content of the exter-nal sources including external websites referenced in this publication. This pub-lication is intended for information purposes only. It must be accessible free ofcharge. Neither ENISA nor any person acting on its behalf is responsible for theuse that might be made of the information contained in this publication.  i  www.enisa.europa.eu evangelos.rekleitis@enisa.europa.eu press@enisa.europa.eu  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  COPYRIGHT NOTICE  © European Union Agency for Cybersecurity (ENISA), 2021Reproduction is authorised provided the source is acknowledged. Copyright for the image on the cover: © ShutterstockFor any use or reproduction of photos or other material that is not under theENISA copyright, permission must be sought directly from the copyright holders.ISBN: 978-92-9204-468-8, DOI: 10.2824/92307  ii  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  EXECUTIVE SUMMARY Quantum Technology is an emerging field of physics and engineering, which ex-ploits the principles of quantum physics, like quantum entanglement, quantumsuperposition and quantum tunnelling, to provide new paradigms and novel ap-plications. From computing and communications to metrology and imaging, re-search in the last 2 decades has bear tangible and not so tangible results. It is acritical technology that policy makers believe it will generate a multi-billion euromarket in new technological solutions for business and citizens. Since the beginning, the EU has been a key player in this area and with a plannedinvestment of €1 billion over 10 years, the EU Quantum Flagship 1 is mobilisingaround 2000 scientists and industrialists, in a collaborative initiative on an un-precedented scale to position Europe as leader in the industrial landscape. Ofcourse, Europe is not alone; the USA, China, Canada, and Japan have also set thisas a top strategic priority. Quantum Technology and in particular Quantum Computing is seen as a disrup-tive innovation. In the mid ’90s, scientists theorized of quantum computer algo-rithms that, given the existence of a sufficiently powerful quantum computer,can break widely used public-key cryptography schemes, such as RSA and ECCor weaken standardised symmetric encryption algorithms. And while we do notknow when and if such a quantum machine will [ever] become available, researchersand national authorities have been working on solutions. As a result, the US Na-tional Institute of Standards and Technology (NIST) launched in 2017 a, still on-going, process to standardise one or more quantum-resistant public-key crypto-graphic algorithms, soliciting proposals from cryptographers around the world 2. It is important to make a distinction between Post-Quantum Cryptography (PQC)and Quantum Cryptography. PQC is about designing cryptographic solutions thatcan be used by today’s [non-quantum] computers and that we believe are resis-tant to both conventional and quantum cryptanalysis. On the other hand, Quan-tum Cryptography is about cryptographic solutions that take advantage of quan-tum physics to provide certain security services. Quantum Key Distribution (QKD)is a good example of the latter. The EU Cybersecurity Strategy 3 , presented by the European Commission andthe High Representative of the Union for Foreign Affairs and Security in Policyon December 2020, explicitly singles out quantum computing and encryptionas a key technologies (along with AI) for achieving (1) resilience, technologicalsovereignty and leadership, (2) building operational capacity to prevent, deterand respond, and (3) advancing a global and open cyberspace. The Strategy cov-ers the security of essential services such as hospitals, energy grids and railwaysand ever-increasing number of connected objects in our homes, offices and facto-ries, building collective capabilities to respond to major cyberattacks and workingwith partners around the world to ensure international security and stability incyberspace4.  1https://qt.eu/. Last accessed May 2021.2https://csrc.nist.gov/projects/post-quantum-cryptography. Last accessed May 2021.3https://ec.europa.eu/digital-single-market/en/cybersecurity-strategy. Last accessed May2021.4https://ec.europa.eu/digital-single-market/en/cybersecurity. Last accessed May 2021.  iii  https://qt.eu/ https://csrc.nist.gov/projects/post-quantum-cryptography https://ec.europa.eu/digital-single-market/en/cybersecurity-strategy https://ec.europa.eu/digital-single-market/en/cybersecurity  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Given recent developments in the Quantum Computing race among industriesand nation states, it seems prudent for Europe to start considering mitigationstrategies now. The European Union Agency for Cybersecurity is not alone in thisline of thought. Other authorities and EU Institutions have also raised concerns;for instance, the European Data Protection Supervisor has highlighted the dan-gers against data protection 5 , national authorities have been investigating andpreparing; e.g., the German Federal Office for Information Security has been eval-uating Post-Quantum alternatives since before the launch of NIST’s standardisa-tion process 6. This study provides an overview of the current state of play on the standardisa-tion process of Post-Quantum Cryptography (PQC). It introduces a framework toanalyse existing proposals, considering five (5) main families of PQC algorithms;viz. code-based, isogeny-based, hash-based, lattice-based and multivariate-based.It then goes on to describe the NIST Round 3 finalists for encryption and signatureschemes, as well as the alternative candidate schemes. For which, key informationon cryptodesign, implementation considerations, known cryptanalysis efforts, andadvantages & disadvantage is provided. Since the NIST standardisation process is going 7 , the report makes no claim onthe superiority of one proposal against another. In most cases the safest tran-sition strategy involves waiting for national authorities to standardise PQC algo-rithms and provide a transition path. There might be cases though, where thequantum risk in not tolerated, in which case the last chapter offers 2 proposalsthat system owners can implement now in order to protect the confidentiality oftheir data against a quantum capable attacker; namely hybrid implementationsthat use a combination of pre-quantum and post-quantum schemes, and the mix-ing of pre-shared keys into all keys established via public-key cryptography. Thesesolutions come at a cost and as such system designers are well advised to per-form a thorough risk and cost-benefit analysis. The first version of this report was published in February 2021. The second ver-sion was released in May 2021 including a new chapter - Chapter 3 \"Security No-tions and Generic Transforms\". The added material introduce key concepts ofPQC cryptography, in order to make the report more self-contained.  5EDPS, ”TechDispatch #2/2020: Quantum Computing and Cryptography”, https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en. Last accessed May 2021.6https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html. Last accessed May 2021.7tentative deadline for Draft Standards is 2022/2024, as of 2021 https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline. Last accessed May 2021.  iv  https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  CONTENTS 1 Introduction 1  2 Families of Post-Quantum Algorithms 32.1 Code-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32.2 Isogeny-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32.3 Hash-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42.4 Lattice-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42.5 Multivariate-system based . . . . . . . . . . . . . . . . . . . . . . . . . . . 52.6 The NIST Round 3 Candidates . . . . . . . . . . . . . . . . . . . . . . . . . 5 3 Security Notions and Generic Transforms 73.1 PKE and KEMs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73.1.1 Security Notions, and Transforms . . . . . . . . . . . . . . . . . . 83.1.2 FO-transform . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93.2 Digital Signatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103.2.1 Identification schemes . . . . . . . . . . . . . . . . . . . . . . . . . 103.2.2 Trapdoor Functions . . . . . . . . . . . . . . . . . . . . . . . . . . 113.2.3 One- and few-time signatures . . . . . . . . . . . . . . . . . . . . 123.3 Quantum adversaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133.3.1 The quantum-accessible random oracle model . . . . . . . . . . 13 4 NIST Round 3 Finalists 144.1 Encryption Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144.1.1 Classic McEliece . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144.1.2 Crystals-Kyber . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154.1.3 NTRU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164.1.4 Saber . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174.2 Signature Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184.2.1 Crystals-Dilithium . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184.2.2 Falcon . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 194.2.3 Rainbow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 5 Alternate Candidates 225.1 Encryption Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 225.2 Signature Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 6 Quantum Mitigation 256.1 Hybrid schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 256.2 Protective measures for pre-quantum cryptography . . . . . . . . . . . 26 7 Conclusions 28  Bibliography 29  v  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  1 INTRODUCTION Post-quantum cryptography is an area of cryptography in which systems are stud-ied under the security assumption that the attacker has a quantum computer.This attack model is interesting because Peter Shor has shown, since 1994, a quan-tum algorithm that breaks RSA, ECC, and finite field discrete logarithms in polyno-mial time. This means that, in this model, all commonly used public-key systemsare no longer secure. Symmetric cryptography is also affected, but significantly less. For systems thatdo not rely on mathematical structures the main effect is that an algorithm due toLov Grover, from 1996, which halves the security level. This means that breakingAES-128 takes 264 quantum operations, while current attacks take 2128 steps. Whilethis is a big change, it can be managed quite easily by doubling the key sizes, e.g.,by deploying AES-256. The operations needed in Grover’s algorithm are inherentlysequential which has led some to doubt that even 264 quantum operations arefeasible, but since the remedy of changing to larger key sizes is very inexpensive itis generally recommended to do so. At this moment, the quantum computers that exist are not large enough to pose athreat against current cryptography. However, rolling out new cryptographic sys-tems takes a lot of time and effort, and it is thus important to have replacementsin place well before large, powerful quantum computers exist. What makes matters worse is that any ciphertext intercepted by an attacker to-day can be decrypted by the attacker as soon as he has access to a large quan-tum computer (Retrospective decryption). Analysis of Advanced Persistent Threats(APT) and Nation State capabilities, along with whistle-blowers’ revelations haveshown that threat actors can and are casually recording all Internet traffic in theirdatacentres and that they select encrypted traffic as interesting and worth storing.This means that any data encrypted using any of the standard public-key systemstoday will need to be considered compromised once a quantum computer existsand there is no way to protect it retroactively, because a copy of the ciphertext isin the hands of the attacker. This means that data that needs to remain confiden-tial after the arrival of quantum computers need to be encrypted with alternativemeans. Signatures can be updated and old keys can be revoked when a signature systemis broken; however, not all development in the area of building quantum com-puters is public and it is fairly likely that the first fully-functional large quantumcomputer will not be publicly announced, but rather sit in the basement of somegovernment agency. Timing the roll-over of signature keys thus remains guess-work. On top of that, one important use case for signatures is operating-systemupgrades. If a post-quantum signature system is not in place by the time an at-tacker has a quantum computer, then the attacker can take control of the operat-ing system through a fake upgrade and prevent any future upgrades from fixingthe problem. In 2017, the United States National Institute for Standards and Technology so-licited submissions for potential public key encryption and signature algorithmsthat would be secure in a world in which quantum computer existed. Althoughnot officially a ‘competition’ as the AES and SHA-3 efforts were, it has been treatedin much the same way as the AES and SHA-3 efforts. Over the last few years, the  1  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  number of submissions has been whittled down, and in July 2020 the Round 3candidates were published. This report is a much extended update to the ECRYPT-CSA “Whitepaper on Post-Quantum Cryptography” [47]. It provides a short summary of the underlying hard-ness assumptions in Section 2 and summarizes the Round 3 candidates in Section4. It also details the so-called ‘Alternate Candidates’ in Section 5. The Round 3 can-didates are algorithms that the National Institute of Standards and Technology(NIST) “considers to be the most promising to fit the majority of use cases and most likely to be ready for standardisation soon after the end of the third round”, whilst theAlternate Candidates are ones which NIST regards as “potential candidates for fu- ture standardisation, most likely after another round of evaluation”. See [95] for moredetails. Finally, this report covers mitigation strategies in Section 6.  2  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  2 FAMILIES OF POST-QUANTUMALGORITHMS There would not be much point speaking about post-quantum systems, if therewere none able to survive attacks by quantum computers. The usual disclaimersapply as with all of cryptography: It might be possible that more powerful attacks(quantum or not) exist that have not yet been found. Apart from that possibility,research over the last 15–20 years has built confidence in the following four areasthat lead to secure systems in a post-quantum world. In this section, we summa-rize the mathematical basis of post-quantum proposals.  2.1 CODE-BASED Code-based cryptography uses the theory of error-correcting codes. For somespecially constructed codes it is possible to correct many errors, while for randomlinear codes this is a difficult problem. Code-based encryption systems go backto a proposal by McEliece from 1978 [86] and are among the most studied post-quantum schemes. Some code-based signature systems have been designed tooffer short signatures at the expense of very large key sizes. Systems based onbinary Goppa codes are generally considered secure; systems based on quasi-cyclic medium-density parity checks have held up to analysis for about a decadeand are gaining confidence. For more background on code-based cryptographysee [75]. All code-based signature systems submitted to NIST were based on new assump-tions and have since been broken. Six code-based encryption systems made itto Round 2, but rank-metric codes (Rollo and RQC), as well as low-density parity-check (LDPC) codes (LEDAkem and LEDAcrypt) had serious cryptanalysis duringRound 2 and were thus deselected by NIST. The remaining code-based candidates are Classic McEliece, BIKE and HQC. ClassicMcEliece was the finalist selected first, for encryption systems; whereas BIKE andHQC were selected as alternate candidates. The latter two are using ’more’ specialcodes in order to reduce the key size of the public key, which is seen as the maindrawback of code-based systems.  2.2 ISOGENY-BASED An isogeny between elliptic curves is a non-constant map that can be writtenas a fraction of polynomials and is compatible with addition on both curves, sothat the image of the sum of two points on the first curve is equal to the sum ofthe images, when computed on the second curve. Isogeny-based cryptographyuses isogenies between elliptic curves over finite fields. The isogeny problem isto find an isogeny between two elliptic curves that are known to be isogenous.The problem was introduced in 2005 in [30] and is thus the most recent basis forany post-quantum candidates. Usage in protocols differs in whether the degree ofthe isogeny is known or secret and whether additional information is known. Formore background on isogeny-based cryptography see [76].  3  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Only one isogeny-based candidate, SIKE, was submitted to the NIST competitionand SIKE is in the third round as an alternate candidate.  2.3 HASH-BASED Hash functions are functions that map strings of arbitrary length to strings of fixedlength. From cryptographic hash-functions we expect that they are one-way (itis hard to find an element in the preimage of a given image) and collision resis-tant (it is hard to find two inputs that map to the same output). Hash functionsare one of the most widely deployed cryptographic tools we got, with applicationsranging from password hashing to file checksums, and are used in virtually anycryptographic construction in practice. While hash functions are used in all practi-cal signature schemes to handle arbitrary length messages, it is known, since thebeginning of public key cryptography, that they can also be used as the sole build-ing block for this. In the simplest version, a hash-based signature on one bit is asfollows. Pick two random strings, hash each of them, and publish the outputs. Re-veal the first preimage to sign 0 and the second to sign 1. This signature scheme,due to Lamport from 1979 [74], is a one-time signature scheme – once the secretis revealed it cannot be used a second time. Starting from this basic idea hash-based signatures on longer strings and on multiple messages have been built. Thedesigns fall into stateless and stateful versions. The former work as normal signa-tures, while for the latter the signer needs to keep track of some information, e.g.,the number of signatures generated using a given key. With SPHINCS+ a statelesshash-based signature scheme is in the third round of the competition as runner-up. For the stateful schemes, NIST already published SP 800-208 [32] standardiz-ing LMS [87] and XMSS [59] two stateful hash-based signature schemes. However,it has to be noted that the stateful character limits the applications these schemesare suitable for. Due to their ubiquity, the security of practical hash functions is well understood.More importantly in the given context, it is known that even quantum comput-ers cannot significantly improve the complexity of generic attacks against crypto-graphic hash functions. A square-root factor speed-up is the (in practice unreach-able) upper limit for improvements.  2.4 LATTICE-BASED On a high level, the descriptions of lattices look much like those of codes – ele-ments are length-n vectors in some space and get error vectors added to them –but where codes typically have entries 0 or 1, lattices work with much larger num-bers in each entry and errors can move away further. The problems underlyingthe cryptographic constructions are to find the original vector given a disturbedone. Lattices offer more parameters than codes, which means that they mightoffer solutions better adapted to a given situation, but also offer more attack sur-face. Lattice-based cryptography goes back to 1996 and the designs of Ajtai [1]and of Hoffstein, Pipher, and Silverman [55]. Both encryption and signature sys-tems exist. The lattice based schemes submitted to NIST mainly make use of the followingtwo basic hard problems; called Module-Learning-with-Errors (Module-LWE) andModule-Learning-with-Rounding (Module-LWR). In these schemes one selects apolynomial ring R = Z[X]/f , where the degree of f is equal to n, and considers itmodulo q (giving Rq). In addition, there is another integer parameter d, called themodule degree. For Ring-LWE and Ring-LWR one sets d = 1, and for standard LWEand LWR one has d = n = 1. The Module-LWE problem is the problem of finding s ∈ Rdq given a number of  4  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  samples of the form (a, a · s + e) where a is chosen uniformly at random in Rdq and e ∈ Rq is chosen to have ‘small’ coefficients. The Module-LWR problem is the problem of finding s ∈ Rdq given a number of sam-ples of the form (a, ba · sep) where a is chosen uniformly at random in Rdq , and thefunction bgep takes the coefficients of the polynomial g and applies the function x 7−→ round− to− int(x · p/q) (mod p), for some fixed integer p. A related hard problem is that of the NTRU problem. NTRU-based cryptosystems,also called Quotient NTRU cryptosystems, assume that the NTRU problem is hardand that the n-sample Ring-LWE problem is hard, while Ring-LWE-based cryp-tosystems assume that the 2n-sample Ring-LWE problem is hard. The NTRU prob-lem and the 2n-sample Ring-LWE problem could be weaker than the n-sampleRing-LWE problem. For large parameter sets (not proposed in practice), the NTRUproblem is proven to be hard, so NTRU-based cryptosystems are based on the n-sample Ring-LWE problem. Another related hard problem is the Ring Short Integer Solution (Ring-SIS) prob-lem which asks if there is a short integer solution x ∈ Zm to the equation A · x = 0 (mod q), for a matrix A ∈ Rn×mq .  2.5 MULTIVARIATE-SYSTEM BASED Multivariate cryptography goes back to the late eighties and is based on the hard-ness of finding a solution to a system of multivariate quadratic equations overfinite fields. It is possible to build signature schemes from systems of equationswith uniformly random coefficients [108], and these are considered to be the mostsecure multivariate systems. However, the more efficient schemes use trapdooredsystems of equations, which appear random to outsiders, but which have somehidden structure that is only known to the person that constructed the system.Thanks to these structures it is possible to find solutions efficiently. These are of-ten called Oil-and-Vinegar schemes. Currently, the multivariate encryption schemes are not very efficient, often withvery large public keys and long decryption times. On the signatures front how-ever, things look a bit better. Out of the nineteen signature schemes submittedto the NIST Post-Quantum Cryptography (PQC) project, seven were multivariatesignature schemes. Two of these seven schemes proceeded to the third round ofthe NIST PQC process. The Rainbow scheme [41] was selected as one of the threefinalists, and the GeMMS scheme [29] was selected as an “alternate candidate”.These schemes enjoy very short signature sizes (as small as 33 Bytes), but sufferfrom rather large public keys (160 KB or more).  2.6 THE NIST ROUND 3 CANDIDATES In the table 2.1, we describe the NIST Round 3 candidates (both the finalists andthe alternate candidates) and splitting them into the two groups of encryptionand signature scheme, whilst also detailing the hard problems on which they arebased.  5  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Table 2.1: NIST Round 3 candidates  Scheme Enc/Sig Family Hard Problem  Round 3 Finalists  Classic McEliece Enc Code-Based Decoding random binary Goppa codes Crytals-Kyber Enc Lattice-Based Cyclotomic Module-LWE NTRU Enc Lattice-Based Cyclotomic NTRU Problem Saber Enc Lattice-Based Cyclotomic Module-LWR Crystals-Dilithium Sig Lattice-Based Cyclotomic Module-LWE and Module-SIS Falcon Sig Lattice-Based Cyclotomic Ring-SIS Rainbow Sig Multivariate-Based Oil-and-Vinegar Trapdoor  Round 3 Alternate Candidates  BIKE Enc Code-Based Decoding quasi-cyclic codes HQC Enc Code-Based Coding variant of Ring-LWE Frodo-KEM Enc Lattice-Based LWE NTRU-Prime Enc Lattice-Based Non-cyclotomic NTRU Problem or Ring-LWE SIKE Enc Isogeny-Based Isogeny problem with extra points GeMSS Sig Multivariate-Based ‘Big-Field’ trapdoor Picnic Sig Symmetric Crypto Preimage resistance of a block cipher SPHINCS+ Sig Hash-Based Preimage resistance of a hash function  6  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3 SECURITY NOTIONS AND GENERICTRANSFORMS In this chapter we provide some general background on the objects considered inthe NIST competition, the used security notions, and the most common ways toconstruct them. We start with a focus on PKE and KEMs. Afterwards, we move onto signatures. We conclude with a discussion of different security models consid-ered in proofs. Naturally, our exposition remains on a rather informal level. Fora more detailed, formal definition of the discussed primitives and notions see forexample [70].  3.1 PKE AND KEMS The NIST competition was initiated to find replacements for the public key prim-itives widely used in practice. With regard to primitives that provide authenticitythis clearly means digital signature schemes. For primitives that provide secrecy,the answer is not that clear. The discussed options were as follows: Key exchange (KEX): A protocol run between two parties. At the end of an execu-tion, a key exchange protocol outputs the same session key at both parties(at least with high probability). Public Key Encryption (PKE): A public key encryption scheme consists of threealgorithms. The key generation algorithm generates a key pair consisting ofa public and a private key. The encryption algorithm takes a message anda public key to compute a ciphertext. The decryption algorithm takes a ci-phertext and a private key to compute a plaintext. We require that (at leastwith high probability) the decryption of an encryption returns the originalmessage if the correct private key is used. Key Encapsulation Mechanism (KEM): A key encapsulation mechanism consistsof three algorithms, similar to PKE. Like for PKE, the key generation algo-rithm generates a key pair consisting of a public and a private key. In con-trast to PKE, the encapsulation algorithm takes a public key to compute asession key and a ciphertext. The decapsulation algorithm takes a ciphertextand a private key to compute a session key. We require that (at least withhigh probability) the decapsulation of a ciphertext returns the same sessionkey as the encapsulation that generated it if the correct private key is used. These primitives are linked insofar as we know how to build KEMs from PKE andwe know how to construct KEX from KEMs (and thereby also from PKE). After along discussion process NIST decided that they will standardize KEMs. KEX was de-cided against, as all the available candidate KEX required interaction and therebyare less general than PKE and KEMs. KEMs were chosen over PKE as in most ap-plications, the main purpose of PKE is to encrypt session keys. A KEM does es-sentially that, with the difference that the scheme has control over choosing thesession key. This small difference makes it easier to construct secure schemes.  7  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.1.1 Security Notions, and Transforms The general approach to construct public key cryptography is as follows. We startwith a mathematically hard problem, like Learning-with-Errors (LWE). From this weconstruct a very basic primitive that usually fulfills a weak security notion, for ex-ample a weakly secure PKE scheme. We then “transform” this basic primitive intothe primitive we are actually interested in, in this example a strongly-secure KEM.Security is then argued cryptanalyzing the mathematical problem and providingreductionist proofs for the constructions and transforms. These proofs relate thecomplexity of attacking one primitive to the complexity of attacking another prim-itive, or solving the mathematical problem. In the running example, we would re-late the complexity of attacking the KEM to the complexity of attacking the PKEscheme, which we in turn would relate to the complexity of solving the mathemat-ical problem. If these relations are tight, establishing that solving the mathemati-cal problem is hard, implies that attacking the KEM is hard. The mathematical problems are what distinguishes the different areas of post-quantum cryptography listed in the previous section. The intermediate primitives,security notions, and transforms are the same and will be discussed below. We start with the notions and transforms used in the construction of KEMs. Thesecurity notion that we expect from a KEM is IND-CCA security, often also calledactive security as it models active attackers. The way to get there is via the in-termediate step of constructing a weakly secure PKE scheme and then apply-ing a generic transform. All third round candidates use a variant of the so-calledFujisaki-Okamoto (FO) [51] transform for this (for the variants see e.g. [56]). Be-fore we outline the transform, we briefly recall the used security notions. While allthree notions can be given for PKE and KEMs, we give the first two for PKE and thelast for KEMs as this is how we use them later. IND-CPA: Ciphertext-indistinguishability under chosen plaintext attacks is whatis sometimes called passive security. It describes a setup in which an adver-sary can encrypt messages themselves (for PKE this only means the adver-sary knows the public key). The security notion says that given a ciphertextof an unknown message, any information about the corresponding plaintext(except its length) should be hidden from the adversary. This is modelledby allowing the adversary to choose two messages. At random one of thesetwo messages gets encrypted and the ciphertext is given to the adversary.The adversary then has to decide which message was encrypted. IND-CPAsecurity is only achievable by randomized PKE where the encryption algo-rithm is randomized (i.e., the same message is never encrypted to the sameciphertext). OW-CPA: One-wayness under chosen plaintext attacks describes the same setupin which an adversary can encrypt messages themselves. However, securityin this case only says that given the encryption of a random message (notchosen by the adversary) the adversary cannot recover the original mes-sage. This is clearly a weaker security notion than IND-CPA. However, thisnotion is achievable by deterministic PKE (dPKE) where the encryption of amessage under a fixed public key always results in the same ciphertext. IND-CCA: Key-indistinguishability under chosen ciphertext attacks is what is some-times called active security. It describes a setup in which an adversary cannot only generate encapsulations themselves but also has a way to learn thedecapsulation of ciphertexts of their choosing. The security is then definedas follows. Given a ciphertext, any information about the key it encapsulates(except that it is a session key of a certain length) should be hidden fromthe adversary. This is modelled by giving the adversary a ciphertext and asession key. The session key is either the session key returned by the encap-sulation when the ciphertext was generated or a randomly sampled session  8  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key that is independent of the ciphertext. The adversary then has to decidewhich was the case. Note that IND-CCA security is necessary whenever a keypair is used for more thana single encapsulation. The reason is that the adversary might be able to send avictim a manipulated ciphertext. While it is usually not the case that the victim willleak the decapsulated key afterwards, the adversary might still gain informationabout this key from the behavior of the victim after decapsulation (e.g., in caseof TLS if the victim continues to establish a session or if it aborts and how longthat takes). This is not covered by IND-CPA security and indeed, we know attacksagainst several schemes that were submitted to the NIST competition based onfinding valid ciphertexts for which decapsulation fails. 3.1.2 FO-transform We now have everything to outline the FO-transform. Most proposals in the NISTcompetition start off with constructing an IND-CPA secure PKE scheme. The math-ematical problem used and the way this is done is exactly where the proposalsdiffer. Step 1: IND-CPA PKE to OW-CPA dPKE. The first step of the FO-transform is thento de-randomize the PKE scheme. For this we note that a randomized algorithm issimply a deterministic algorithm that additionally takes randomness in form of abit string as input. De-randomization is done by replacing the randomness inputby the hash of the message. It can be shown that the result is a OW-CPA securedPKE scheme. Step 1: OW-CPA dPKE to IND-CCA KEM. The reason to de-randomize the PKEscheme is that this allows to add a re-encryption check in the decryption routine.I.e., given a ciphertext (and the right private key) the receiver can decrypt the ci-phertext, then encrypt the result again and see if the same ciphertext is obtained.It can be shown that this has as a consequence that any ciphertext that is not cho-sen by encrypting a message (and without the knowledge of the private key) willbe rejected because it fails the re-encryption check. The dPKE scheme is thentransformed into a KEM as follows. Key generation remains the same. The en-capsulation algorithm chooses a random message to be encrypted with the dPKEscheme. The ciphertext under the dPKE scheme is the KEM ciphertext. The ses-sion key is the hash of the concatenation of the message and ciphertext. The de-capsulation algorithm decrypts the ciphertext and runs the re-encryption check. Ifthe check fails, the algorithm returns a random session key. If the check succeeds,the algorithm returns the hash of the decrypted message and the ciphertext assession key. Variations. There exist several variations. Some proposals directly construct anOW-CPA dPKE scheme and skip step 1. Beyond that, step 2 is slightly modified insome proposals. Some schemes allow to verify a ciphertext without doing a fullre-encryption which can improve speed. Some proposals include the public key(or a hash thereof) into the hash function call that derives the session key. Thisallows to increase the cost of multi-user attacks where an adversary attacks mul-tiple users at once. Another variation is explicit rejection where the decapsulationaborts with a clear failure code instead of terminating normally and returning arandom key. This option is not widely used as it complicates the security proofs.Finally, some schemes add a so-called key confirmation hash. This is another hashof the message that gets encrypted (and possibly the PKE ciphertext) under a dif-ferent hash function than the one used to compute the session key. This addi-tional hash is then sent as part of the KEM ciphertext. This allows to replace there-encryption by a hash function call at the cost of increased KEM ciphertext size.  9  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.2 DIGITAL SIGNATURES As explained above, the situation for signatures is a bit more straight-forwardthan that for KEMs / PKE. There were no alternative notions to consider. A digitalsignature scheme is defined as follows. Digital Signature Scheme (DSS): A DSS consists of three algorithms. The keygeneration algorithm generates a key pair consisting of a public and a pri-vate key. The signature algorithm takes a message and a private key andreturns a signature. The verification algorithm takes a message, a signature,and a public key and returns true or false. For correctness we expect that acorrectly generated signature verifies under the right public key (i.e., verifica-tion returns true). The common notion of security for DSSs is the following notion which may be con-sidered security against active attackers. EUF-CMA: Existential Unforgeability under Chosen Message Attacks states thatit is hard for an adversary to forge a signature on any message that wasnot signed by the holder of the secret key. This is modeled by a game inwhich the adversary is allowed to ask a signer for signatures on arbitrarymessages. The adversaries goal is come up with a valid signature on a freshmessage, i.e., a message that the signer was not asked to sign. As for KEMs, we do not construct EUF-CMA-secure DSSs from scratch. Instead, weconstruct an intermediate building block and then use a generic transform. Whilefor KEMs there is essentially one transform used by all proposals, this is differentfor DSSs. The different proposals can be split into at least three approaches1. Tonot turn this section into a book, we stick to outlines and simplify things whereappropriate. We would like to refer the interested reader to the literature for theprecise definitions used for the different NIST proposals. 3.2.1 Identification schemes The most common approach in the competition is to construct an identificationscheme as intermediate building block. This approach is know from (EC)DSA forexample. Identification Scheme (IDS): An identification scheme is a protocol betweena prover and verifier. An IDS implicitly contains a key generation step2 inwhich the prover generates a keypair consisting of a public and a privatekey. In the IDS protocol a prover then tries to convince a verifier that it knowsthe private key to a given public key. The relevant IDS protocols in this con-text start with the prover sending a commitment message followed by achallenge (possibly a sequence of challenges) by the verifier that is then an-swered by the prover. In the end, the verfier takes the public key and the fulltranscript of exchanged messages and runs a verification algorithm. The security notions required from an IDS such that we can transform it into anEUF-CMA DSS are twofold.  1Considering more details, further distinction is possible but that goes beyond thescope of this report.2IDS are often described with respect to a witness relation due to historical reasons. Inthat case the instance generation of sampling a statement with a witness can be consid-ered the key generation.  10  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  HVZK: Honest-Verifier Zero-Knowledge says that a verifier that correctly followsthe protocol cannot learn anything about the used secret key. This is mod-elled by requesting that we can build an algorithm that without knowledgeof the secret key can generate valid transcripts of protocol runs that are in-distinguishable from real transcripts. Soundness: Soundness states that a verifier catches a prover that does not knowthe secret key with at least constant probability. The precise definition ofthis property depends on the kind of IDS that is used. For the easiest caseof a single commit message followed by one binary challenge and responsethis is defined as the ability to compute the secret key from two protocoltranscripts that contain the same commit message but a different challenge.This demonstrates that an adversary that can respond to both challengesfor a given commitment must know the secret key. Note that the probability to catch a cheating prover can be amplified to be arbi-trarily close to one by running the scheme multiple times. FS-transform. The common way to turn an IDS into a signature scheme is theFiat-Shamir (FS) transform [49]. It uses a cryptographic hash function to replacethe verifier in computing the challenges3. More precisely, the challenges are com-puted as hash of the message to be signed, the public key, and all previous pro-tocol messages. The protocol transcript is then sent as signature. The verificationalgorithm consists of the final verification algorithm executed by the verifier in theIDS protocol and verifying that the challenges are correctly computed from themessage, public key, and transcript data. For this to be secure, the IDS must havesoundness that catches a cheating prover with overwhelming probability. Hence,the transformation has to be applied to the IDS obtained by running the originalIDS a sufficient number of times. 3.2.2 Trapdoor Functions The second approach, which was also used for RSA signatures, is the use of a trap-door function. While RSA provides us with a trapdoor permutation, in the post-quantum setting the notion of trapdoor functions was generalized as follows [52]: (Preimage-Sampleable) Trapdoor Function (TDF): A trapdoor function is a tripleof algorithms. The key generation algorithm generates a key pair consistingof a public and a private key. The evaluation algorithm takes the public key(which in this case works as a function description) and a domain elementand outputs an image of that element. The preimage sampling algorithmtakes the private key and an element in the image, and computes a match-ing preimage, i.e., a domain element that is mapped to this image under thefunction described by the public key. The basic security notion that a TDF has to fulfill to be suitable for the use in a sig-nature scheme is one-wayness. In addition, the preimages generated using theprivate key must not leak information about the key. One-wayness with private key: A TDF is one-way if given a random elementfrom its image, it is hard to find a matching preimage i.e., a domain elementthat the evaluation algorithm maps to this image given the public key. Indistinguishable Preimage-Sampling: A TDF has indistinguishable preimage-sampling if the distribution generated by the preimage sampling algorithm  3For this to work, the IDS has to be “public coin”, i.e., the challenges must be chosenusing the uniform distribution over some set.  11  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  using the secret key is indistinguishable from an (efficiently sampleable) dis-tribution on the preimage space that is independent of the private key4. For RSA we are in the special case that we even have a trapdoor permutation. Inthat case the preimage sampling is always indistinguishable as there is only onepreimage per image. FDH-transform. The transformation that is used for this case is called Full-DomainHash (FDH) and is the same as for RSA signatures 5 . The transform uses a crypto-graphic hash function that maps arbitrary-length messages to the domain of theTDF. For security it is important that the whole domain is in the image of the hashfunction (hence the name). To generate a signature, the signer hashes the mes-sage, treats the hash as an image of the TDF, and uses the preimage samplingalgorithm to sample a preimage. The preimage becomes the signature. 3.2.3 One- and few-time signatures The last approach is again following the generic idea of constructing a weakerprimitive and then strengthening the security via the use of a generic transformor construction. In this case, the weaker security is defined in terms of the numberof signatures that can safely be created using a key pair: One-time Signature Scheme (OTS): A one-time signature scheme [74] is a digitalsignature scheme where a key pair may only be used to sign one message.The corresponding security notion is One-Time EUF-CMA. In this variant ofEUF-CMA the adversary is only allowed to ask the signer for a signature onone message of its choice before coming up with a forgery. Few-time Signature Scheme (FTS): A few-time signature scheme is a digital sig-nature scheme where a key pair may only be used to sign a few messages(the precise number usually depends on the used parameters). The corre-sponding security notion is q-Time EUF-CMA. In this variant of EUF-CMA theadversary is only allowed to ask the signer for signatures on q messages ofits choice before coming up with a forgery. Actually, every signature scheme is a few-time signature scheme. However, for afull-fledged signature scheme NIST for example requires the number of signatures q to be 264. For an FTS the number of signatures is usually clearly below 100. Merkle Signature Scheme (MSS). The generic transform to turn a one-time sig-nature scheme into a stateful signature scheme is using Merkle trees [90]. Theidea is to use a huge number of key pairs and authenticate the public keys ofthese key pairs using a binary hash tree called a Merkle tree. The limiting propertyof the resulting signature scheme is that it is stateful. The signer has to rememberwhich OTS key pairs it already used, in order not to use one twice. SPHINCS. The SPHINCS construction [15] turns an MSS into a stateless, i.e., gen-eral purpose, signature scheme via the use of an FTS. The fundamental idea is thatan MSS is used to authenticate FTS public keys. Every OTS key pair (which are theleaves of the Merkle tree) is used to sign an FTS public key. For every message arandom FTS public key is picked to sign. The SPHINCS construction is described ina bit more detail on the page for SPHINCS+ in Chapter 5.  4Mathematically, it is required that there exists an efficiently sampleable distribution Don the domain such that the distribution of using the preimage sampling algorithm with asecret key for some image y is indistinguishable from the distribution obtained by samplingfrom D and accepting if the resulting value is a preimage of y.5In practice we use the probabilistic version PFDH, which is used in RSA-PSS, which ran-domizes the hash in a certain way.  12  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.3 QUANTUM ADVERSARIES In the post-quantum setting we are concerned with a world where an adversaryhas a quantum computer at its disposition while honest users still work on con-ventional computers. For the security notions above, this means that we have toassume that the adversary is a quantum algorithm. While this of course has animpact on the complexity of solving the mathematical problems used, many secu-rity proofs remain unaffected by this change. However, there are two notable ex-ceptions. First, quantum algorithms are inherently probabilistic. This means thatarguments that use techniques like rewinding, which try to run an algorithm withthe same random coins twice, do not trivially translate to the post-quantum set-ting. The second exception is the random oracle model discussed in the followingchapter. 3.3.1 The quantum-accessible random oracle model The security proofs that are usually given for practical systems (e.g., RSA-PSS, RSA-OAEP, ECDSA, etc.) belong to a heuristic proof model called the random oraclemodel (ROM). In this model, the cryptographic hash function used is modeled asan ideal random function for the security proof. This random function is calleda random oracle. It is modeled as an oracle that every participant in the systemhas access to and that behaves like a random function; specifically its answers areconsistent, and answers to new queries are uniformly distributed. While there ex-ist artificial counterexamples of schemes that are secure in the ROM, but cannotbe secure for any cryptographic hash function, the ROM has proven to be a reli-able tool for the analysis of real world systems. In the post-quantum setting we consider adversaries to have access to a quantumcomputer. As hash functions are public functions, this means that an adversarycan run these on its quantum computer and, consequently, can query these onsuperpositions of inputs or even on entangled quantum states. This ability can-not be reflected in the conventional ROM. Hence, the QROM (quantum-accessibleROM) was proposed [22]. In the QROM, adversaries are given exactly this addi-tional ability. By now we know separations between the ROM and the QROM, i.e.,cryptographic schemes that can be proven secure in the ROM but that are inher-ently insecure in the QROM. This demonstrates that a security proof in the ROM isonly of limited value when aiming for post-quantum security. For most of the transforms above, proofs are only known in the ROM and or QROM(cf., [19, 43, 64, 107]) but not in the standard model (i.e., without making idealizing,heuristic assumptions).  13  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  4 NIST ROUND 3 FINALISTS 4.1 ENCRYPTION SCHEMES  4.1.1 Classic McEliece  Design:  Classic McEliece [3] is a code-based scheme using binary Goppa codes, the samecodes that McEliece originally proposed when he introduced code-based cryptog-raphy [86] in 1978. Code-based cryptography is the oldest public-key encryptionsystem that is expected to resist attacks by quantum computers and is one of theoldest public-key encryption systems overall. During Round 2 the scheme mergedwith NTS-KEM, which was using the same codes. The assumption underlying One-Wayness against Chosen-Plaintext Attacks (OW-CPA) PKE security is that decoding a random binary Goppa code is hard – McElieceencodes messages into code words and encrypts them by adding random errors.The Classic McEliece scheme uses the dual of McEliece’s scheme, as proposed byNiederreiter [93], and tightly turns this OW-CPA PKE into an IND-CCA2 KEM using avariant of the FO-transform (cf. Sect. 3.1.2), specifically Theorem 8 in Dent [40]. Aproof in the QROM (Quantum Random-Oracle Model) is given in [19] which provesa bound ε on the probability of a QROM IND-CCA2 attack, assuming a bound onthe scale of ε2 on the probability of an OW-CPA attack against the underlying de-terministic PKE. Implementation:  A full KEM was specified and implemented in [13] with improvements in [31].The software is available on the submitters’ page, see [3], and includes referenceand optimized implementation. All implementations of Classic McEliece are con-stant time. An implementation for the ARM Cortex-M4 is finished, but not yet pub-licly available. FPGA implementations are covered in [115] and [116] and are alsofreely available and constant time. Classic McEliece has been integrated into the network protocols McTiny [17] andPost-quantum WireGuard [61]. Cryptanalysis:  There are two main avenues of attack against code-based cryptography: information-set decoding (ISD) and structural attacks. ISD goes back to a general decoding technique from 1962 due to Prange [102].There is a long history of research on this problem, especially for cryptographicapplications, with the most recent papers being [25, 26, 71]. These attacks showtheir biggest effect for high-rate codes while the binary Goppa codes used in Clas-sic McEliece are only marginally affected. More precisely, achieving 2λ securityagainst Prange’s attack requires keys of size (0.741186 . . . + o(1))λ2(log2 λ)  2 bits as λ → ∞. To achieve the same level of security against all the later attacks requireskeys of size (0.741186 . . .+ o(1))λ2(log2 λ)  2 bits as λ→∞, i.e., the improvements af-  14  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  fect only the o(1) term. All these attacks involve huge searches, like attacking AES.The quantum attacks (Grover etc.) leave at least half of the bits of security. Structural attacks attempt to find a good decoding algorithm for the code in thepublic key by identifying structures of the private key in the public one. Such at-tacks have been successful against code-based systems based on other codes,e.g., identifying Reed-Solomon codes as used by Niederreiter [93] or Gabidulincodes used in early rank-metric codes. However, for binary Goppa codes the onlyattacks known are distinguishing attacks and even those are successful only forvery high-rate codes, larger than proposed for any cryptosystems [48]. Advantages and Disadvantages:  The advantages for Classic McEliece are that it has a very long history of analysiswith no significant impact on the security and that the ciphertext size is small. Theciphertexts are the smallest of all Round-2 candidates and thus also of all Round-3candidates. No other public-key encryption system can look back at more than 40years of cryptanalysis – quantum or not – without taking a hit. The disadvantage is the size of the public key, which for the highest security leveltakes more than 1MB. This poses a problem for applications that request freshpublic keys for each execution; the McTiny protocol [17] shows how to make thiswork nevertheless without causing denial-of-service attack on the servers. Post-quantum WireGuard [61] and PGP are applications where the system can be usedas a long-term identity key. 4.1.2 Crystals-Kyber  Design:  Kyber is an Indistinguishability under Chosen Plaintext Attack (IND-CCA) secureKEM originally presented in [23]. It has seen some significant changes since thenand the latest description can be found in [111]. The security of Kyber can beprovably reduced to the Module-Learning-with-Errors problem (Module-LWE),but the parameter set for the lowest security level bases its security estimate ona combination of Module Learning with Errors and Module Learning with Round-ing (MLWR). Kyber is based on LPR [81] encryption, but uses vectors of polyno-mials as elements, performs additional compression on the ciphertext and is de-signed to accommodate fast multiplications using the Number Theoretic Trans-form (NTT). IND-CCA security is obtained through a variant of the FO transforma-tion (cf. Sect. 3.1.2). The public key sizes of Kyber are 800, 1184 and 1568 bytes forsecurity levels 1, 3 and 5 respectively, and the ciphertext sizes are 768, 1088, 1568bytes. Implementation:  After an initial implementation on general purpose processors in [23], Kyber hasbeen implemented on Cortex-M4 [27] and a software hardware codesign hasbeen described in [36]. An implementation using an RSA-coprocessor was givenin [5]. Moreover, implementations of Kyber can reuse existing designs for Ring-LWE (aka RLWE) encryption schemes that support NTT multiplication, for exampleimplementations of NewHope or early Ring-LWE schemes. No side-channel secureimplementation is available for Kyber, but an idea of the challenges and the costcan be gained from a masked Ring-LWE implementation as presented in [96]. Cryptanalysis:  The security of Kyber is provably reducible to the security of the underlying Module-LWE problem (aka Mod-LWE). As there is currently no efficient way to exploit the  15  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  modular structure security is typically estimated based on the corresponding LWEproblem. Such attack typically transforms the LWE problem into a shortest vec-tor lattice problem that can then be solved using lattice reduction techniques. Anindependent security estimate of Kyber was given in [4]. Kyber has a very small probability of decryption failures in which valid cipher-texts fail to decrypt properly. This paves the road for decryption failure attacksas proposed in [21, 37, 39]. However, when limiting the number of queries to 264as recommended in the NIST call for proposals [94], these attacks are less efficientthan direct lattice attacks. A practical fault injection attack on Kyber was presentedin [105]. Advantages and Disadvantages:  Kyber is designed with NTT multiplications in mind, which allows for efficient im-plementations of Kyber on a variety of platforms. It is notable that some elementsare generated and compressed in the NTT domain, which makes it impractical touse other multiplication algorithms for Kyber. Moreover, polynomial multiplica-tions are in the same ring for all security levels, which makes it easy to scale be-tween the security levels. Overall, the support for NTT multiplication makes Kyberefficient to implement. The security of Kyber enjoys strong reductions to underly-ing hard lattice problems. 4.1.3 NTRU  Design:  Nth Degree Truncated Polynomial Ring Units (NTRU) is one of the oldest encryp-tion schemes that makes use of structured lattices. It was developed by Hoffstein,Pipher, and Silverman in 1998 [55]. The round three submission to NIST [118] is amerger of the initial NTRU submission [117] and the NTRU-HRSS submission [110]implemented after the first round due to large overlaps in the design. The sub-mission specifies a perfectly correct, deterministic public key encryption scheme(dPKE). This dPKE is transformed into a CCA2-secure KEM using a variant of theFO-transform (cf. Sect. 3.1.2), specifically the U 6⊥m transform of [56]. For this trans-formation, a tight proof for CCA2-security in the ROM is given in [56]. A tight proofin the quantum-accessible ROM is known, but makes a less standard assump-tion [107]. Implementation:  The NTRU-HRSS part of the submission was based on [60] which already con-tained a high-speed constant-time implementation. NTRU-HRSS was among thefastest first round submissions. NTRU is also known for its speed on constraineddevices; implementations go back to at least 2001 [8], but also nowadays NTRU isone of the schemes with the fastest encapsulation and decapsulation routines inthe pqm4 project [67]. Also, implementation security of NTRU is well advanced. As mentioned above,for commodity hardware, the optimized implementations provided are constanttime [60]. On constrained devices, up-to-date masked implementations are known [109]that protect against side channel attacks like correlation power analysis attacks [78]. NTRU was chosen by Cloudflare and Google for their second PQC experiment [77]and used in connections from users running Chrome Canary to Google and Cloud-flare.  16  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Cryptanalysis:  The security of NTRU is supported by a long history of cryptanalysis (see e.g., [33,54, 58, 83, 84]). Up to parameter changes, NTRU successfully survived the last 20+years of cryptanalysis. The efforts of the last years suggest that the complexity ofthe best attacks against NTRU is determined by the complexity of lattice reduc-tion. The complexity of the best algorithms for lattice reduction in turn dependson the complexity of solving the shortest vector problem (SVP). See the specifica-tion for an extensive elaboration. An independent evaluation can be found in [4]. Advantages and Disadvantages:  NTRU has several advantages. As mentioned above, it is perfectly correct and theunderlying assumption is well studied. It is flexible, meaning that the underlyingdPKE can be parameterized for a variety of use cases with different size, security,and efficiency requirements. It is simple: The dPKE has only two parameters, nand q, and can be described entirely in terms of simple integer polynomial arith-metic. It is fast: ntruhrss701 was among the fastest submissions in the first round.It is compact: The ntruhps2048677 parameter set achieves NIST level L1 securitywith a wide security margin, level L3 security under a reasonable assumption, andhas public keys and ciphertexts of only 930 bytes. It is guaranteed patent free asthe relevant patents have expired. On the downside, NTRU is unlikely to be the fastest, most compact, or most se-cure submission. However, it is competitive on products of these measures. Asfor all other lattice-based schemes, the choice of optimal parameters for NTRU iscurrently limited by a poor understanding of the non-asymptotic behaviour of newalgorithms for SVP. Finally, there is structure in NTRU that is not strictly necessary,and this may also be seen as a limitation. 4.1.4 Saber  Design:  Saber is a family of cryptographic primitives that includes an IND-CPA secure en-cryption scheme and an IND-CCA secure KEM, with an initial design as describedin [38] and most recent update in [10]. Its security can be reduced to the securityof the Module Learning with Rounding (MLWR). As most LWE/LWR based schemes,Saber follows the general structure of LPR [81] encryption. The main differencesare power-of-two moduli, the use of vectors of polynomials and the adaptationof learning with rounding. To achieve IND-CCA security Saber relies on a post-quantum variant of the FO-transformatin (cf. Sect. 3.1.2). Saber boasts public keysizes of 672, 992 and 1312 bytes; and ciphertext sizes of 736, 1088, 1472 bytes forsecurity level 1, 3 and 5 respectively. Implementation:  An initial implementation of Saber on high end processors was presented in [38].Implementation efforts have since then extended to Cortex-M4 and Cortex-M0in [66, 68, 89, 98], ESP32 in [114], specific coprocessors in [82, 106], large integercoprocessors in [24], a software hardware codesign in [36] and a hardware imple-mentation in [119]. An implementation that batches multiple decapsulations toexploit vector instructions has been proposed in [112]. A first order masked imple-mentation of Saber was given in [11]. Saber has been integrated into the network protocol Post-quantum WireGuard [61]for exchanging ephemeral keys.  17  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Cryptanalysis:  The most straightforward attack on Saber is to break the underlying Mod-LWRproblem. Such an attack rewrites the Mod-LWR problem as a shortest vector lat-tice problem and uses lattice reduction algorithms to retrieve the secret key. Thesecurity of this problem is typically estimated as the security of the analogous LWEproblem as there is at the moment no efficient attack that exploits the module orrounding structure. An initial security estimate of Saber was given in [4] and wasfurther improved in [10] using the estimation tools of [2,35]. As Saber is subject to decryption failures with a small probability, there is the pos-sibility of decryption failure attacks. Attacks on the IND-CCA secured KEM werepresented in [21, 37, 39] but when limiting the number of queries that can be per-formed to 264 as proposed in the NIST call for proposals [94], these attacks do notoutperform standard lattice attacks. Advantages and Disadvantages:  The choice for power-of-two moduli avoids the need for explicit modular reduc-tions or rejection sampling that are typically present in prime moduli based schemes.The latter also reduces the number of hash function calls. The drawback of thischoice is that the NTT is not naturally supported. However, other multiplicationalgorithms (e.g., Karatsuba, Toom-Cook, schoolbook, Kronecker) have been shownto be efficient on a range of platforms and the design of Saber does not restrictimplementors to a specific multiplication algorithm. Moreover, in multiplicationsof Saber, one element will always have small coefficients, which could be exploitedfor optimizing implementations. Being based on learning with rounding, Saber introduced an error by roundingcoefficients. This naturally reduces the communication bandwidth and avoids thegeneration of the error term. The modular structure of Saber implies that multipli-cations of polynomials are always in the same ring, and as such the multiplicationalgorithm of these polynomials is the same for all security levels. Saber is efficient to mask, due to the power-of-two moduli and the absence of theerror term. The first order masked Saber implementation of [11] has an overheadfactor 2.5x, which can be compared to an overhead of factor 5.7x previously re-ported for prime-moduli schemes [96]. Saber also excels at anonymous commu-nication as it is naturally constant time, even over different public keys, due tothe avoidance of rejection sampling. Moreover, the power-of-two moduli ensurescommunication consists of a uniformly random bitstring without apparent struc-ture.  4.2 SIGNATURE SCHEMES  4.2.1 Crystals-Dilithium  Design:  Dilithium is a signature scheme introduced in [45] and with latest version de-scribed in [80]. It follows the concept of designing signature schemes from iden-tification schemes (cf. Sect. 3.2.1), using Fiat-Shamir with aborts.Its security can bereduced to the security of the Module-Learning With Errors (MLWE) and ModuleShort Integer Solution (MSIS) problems. It is designed to allow fast multiplicationsusing the NTT transformation and avoids generation of randomness from a dis-crete Gaussian distribution, instead opting for sampling from a uniform distribu-tion.  18  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Implementation:  The Dilithium team provided an implementation in their initial work [45]. Furtherwork has focused on improving the speed of the signing procedure [104]. An im-plementation of Dilithium on Cortex-M4 was presented in [53] and a masked im-plementation was introduced in [91]. Cryptanalysis:  The security of Dilithium is based on that of the underlying MLWE and MSIS prob-lems. Currently there is no efficient attack exploiting the module structure andas such the security of the equivalent LWE and SIS problems is considered. An in-dependent estimation effort [4] confirmed Dilithium’s security estimate. A faultattack on Dilithium was presented in [28]. Advantages and Disadvantages:  In contrast to other signature proposals, Dilitihium samples from a uniform dis-tribution avoiding the complex and inefficient sampling from a discrete Gaussiandistribution. The modular structure of Dilithium ensures that polynomial multi-plication is always performed in the same ring regardless of security level, whichmakes it easy to switch between these levels. Multiplication can be performed ef-ficiently due to its NTT friendly parameters. Applying a trick to compress the pub-lic key with a factor 2, Dilithium has the smallest public key plus signature size oflattice-based schemes that use uniform sampling. 4.2.2 Falcon  Design:  Falcon [103] is a signature scheme whose design is based on the Gentry–Peikert–Vaikuntanathan (GPV) blueprint [52] for lattice-based signatures using (preimage-sampleable) trapdoor functions (cf. Sect 3.2.2). It instantiates this constructionwith NTRU lattices and an efficient Gaussian sampler [46,57], which yields a schemethat is provably secure under the assumption that SIS is hard in the particular lat-tices used. Falcon has been designed so that all of the arithmetic operations canbe computed using efficient Fourier-transform techniques. Implementation:  An efficient constant-time implementation of Falcon is given by [101], using thesampler of [57]. It does not require (but can use) a floating-point unit and runsefficiently on various kinds of microprocessors including Intel x86 and ARM cores.See [97] for a more optimized implementation specific to the latter. The constant-time Gaussian sampler of [69] can be used in Falcon. Cryptanalysis:  The mathematical security of Falcon relies on the hardness of the SIS problemover NTRU rings, which benefits from the long history of cryptanalysis for theNTRU cryptosystem (cf. Section 4.1.3). The best known attacks are generic latticetechniques: there is no known way to effectively exploit the additional ring struc-ture present in NTRU lattices. To estimate the security against lattice-reductionalgorithms, Falcon employs the “Core-SVP” method which was also used by manyother lattice-based NIST submissions. A fault attack on Falcon is demonstrated (and countermeasures proposed) in [85],and the side-channel leakage of Falcon and similar schemes was analysed in [50].  19  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Advantages and Disadvantages:  In a nutshell, Falcon is a very compact (smallest combined size of public key andsignature among all NIST candidates) and efficient post-quantum signature schemewhose security reduces to well-established assumptions. The chosen ring struc-ture and error distribution allow for efficient FFT-based implementations, whichpartially cancels the adverse effects of using a Gaussian error distribution andleads to good performance in practice. Indeed, perhaps the biggest drawback ofFalcon appears to be the complexity of understanding all details of the construc-tion and implementing the scheme correctly. 4.2.3 Rainbow  Design:  Rainbow is a multivariate signature scheme, proposed by Ding and Schmidt [41,42] and based on the Oil and Vinegar (OV) scheme by Patarin [99]. Rainbow fol-lows the idea to construct signatures from trapdoor functions (cf. Sect. 3.2.2).Similar to RSA signatures, Rainbow uses a trapdoor function P , for which onlythe holder of the secret key can compute preimages. To sign a messageM , thesigner then publishes a preimage for H(M, salt), where H is a cryptographic hashfunction that outputs elements in the range of P , and where salt is a fixed-lengthbitstring, chosen uniformly at random for each signature. The Rainbow trapdoor function is best described as the composition of two ormore oil and vinegar trapdoors. The design philosophy is that by iterating the OVtrapdoor, it gets more resistant to attacks, which allows for more efficient param-eter choices. Unfortunately, the additional complexity also opens up some newattack strategies. Implementation:  The Rainbow team provided an optimized implementation for general purposeprocessors and for processors supporting AVX2 instructions. These implementa-tions are claimed to resist timing side-channel attacks. During the second roundof the NIST PQC process, the Rainbow team switched to a new key generation al-gorithm. This does not affect the security of the scheme, but made key-generationmore efficient. A fault attack against Rainbow is presented in [73]. Cryptanalysis:  Like most multivariate signature schemes, Rainbow does not have a security proofthat reduces a hard computational problem to the security of the scheme. There-fore, we can not rely on widely believed assumptions and it necessary to have adedicated cryptanalysis of Rainbow. After some initial cryptanalytic results in thefirst few years after the introduction of Rainbow, the cryptanalysis of Rainbow wasrelatively stable. However, since Rainbow entered the NIST PQC process, therehave been some works that slightly improved existing attacks [9, 113], and dur-ing the third round of the NIST PQC process two new attacks were published thatbroke the security claims. [18] The Rainbow team has announced that a new pa-rameter set will be proposed to address the new attacks. Advantages and Disadvantages:  Rainbow signatures are small (e.g. ∼ 66 Bytes at SL I) and the signing and verifi-cation algorithms are fast. Rainbow uses only linear algebra over very small finitefields, which makes it suitable for implementing the scheme on low-cost devices,without the need for a cryptographic coprocessor. On the other hand, the pub-lic keys are rather large (e.g. 158 KB at SL I). It is possible to compress the public  20  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key size by almost a factor 3 at the expense of slower signing times. The securityanalysis of Rainbow cannot be considered stable at the moment.  21  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  5 ALTERNATE CANDIDATES 5.1 ENCRYPTION SCHEMES BIKE  BIKE [7], Bit Flipping Key Encapsulation, is a Key Encapsulation Mechanism (KEM)based on quasi-cyclic codes with moderate-density parity-check matrices. Thepublic key specifies an error-correcting code, as in Classic McEliece, but in BIKEthe code has a public structure of being quasi-cyclic, allowing the public key to becompressed. The moderate-density parity-check matrices are secret, Bit flippingcorrects errors by repeatedly flipping the input bits that, given the secret paritychecks, seem most likely to be errors. HQC  HQC [88], Hamming Quasi-Cyclic, has the same noisy Diffie–Hellman structureas many lattice-based cryptosystems. The public key includes a random G and A = aG + e, where a, e are small secrets. The ciphertext includes B = bG + d and C = M + bA + c, where b, c, d are small secrets andM is a message encoded usingan error-correcting code. The receiver computes C − aB = M + be + c − ad, whichis close toM since a, b, c, d, e are small, and decodes the error-correcting code torecoverM . HQC uses polynomials modulo 2, rather than the larger integer moduliused in lattice-based cryptosystems, but uses polynomial modulus xn − 1 with rel-atively large n. HQC uses error-correcting codes built from Reed-Muller and Reed-Solomon codes. Public keys are between 2249 and 7245 bytes, and ciphertexts arebetween 4481 and 14469 bytes, depending on the security level. Frodo-KEM  FrodoKEM [92] is a key encapsulation mechanism whose security is based on thehardness of the standard Learning With Errors problem. The algorithm is a spe-cific instantiation of the construction of Lindner and Peikert from 2011 [79]. Itthus makes no use of so-called structured lattices (such as those based on Ring orModule LWE), this means that the performance is not as good as the lattice basedschemes selected to be the main candidates in Round 3. However, for those wor-ried about the structural properties of these latter candidates, Frodo-KEM may bean option. NTRU-Prime  NTRU Prime [12, 14] is a lattice-based key encapsulation mechanism (KEM) withtwo options: Streamlined NTRU Prime, which is similar to NTRU, and NTRU LPRime,which is similar to Kyber and SABER. NTRU Prime uses a polynomial xp − x− 1 witha maximum-size Galois group (superexponential in the degree) while NTRU, Ky-ber, and SABER use cyclotomic polynomials with a minimum-size Galois group(linear in the degree). The original STOC 2009 Gentry FHE system and the originalmultilinear-map system are broken for cyclotomics but not for xp − x − 1; NTRUPrime predates these attacks and is designed to protect lattice-based cryptosys-tems against the possibility of cyclotomic attacks. Compared to the performance  22  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  of NTRU, Kyber, and SABER, the performance of NTRU Prime is sometimes slightlyworse and sometimes slightly better, but is generally similar. SIKE  SIKE [63] is a key encapsulation mechanism based on the hard problem of pseudo-random walks in supersingular isogeny graphs. This is a relatively new problem inthe cryptographic arena, but the problem of studying isogenies of supersingularelliptic curves is an old mathematical problem. The main advantage of isogenybased schemes is their small public key and ciphertext size. The key problems as-sociated with SIKE is that the performance is currently not competitive with theother proposals. This may improve however over time.  5.2 SIGNATURE SCHEMES GeMSS  The GeMMS scheme [29] builds on a line of work that goes back to 1988; schemesin this line of work are called “Big Field” schemes. The public key for GeMMS is amultivariate quadratic system of equations over F2. The main idea behind “BigField” schemes is that there is a secret change of variables that turns the publickey into a (perturbed version of) a system that models a low-degree univariatepolynomial equation over an extension field F2n . Since it is possible to efficientlyfind the solutions to a low degree univariate polynomial, this allows someone whoknows the secret change of variables to sign messages. The size of GeMMS signa-tures is exceptionally small, with a size of only 258 bits at NIST security level I. Themain drawbacks, however, are that, with 350KB, the public keys are large, and thatsigning is slow, especially for the more conservative parameter choices. Picnic  The Picnic signature scheme 1 , currently on its third iteration [65], is unique amongthe other candidates due to its use of the “MPC-in-the-head” paradigm [62]. Inthis framework, a proving algorithm simulates a virtual MPC protocol which com-putes the circuit for an NP relation R, e.g. x ∼R y ⇐⇒ y = SHA-256(x). Byrevealing the views of a random subset of the MPC parties, this forms an interac-tive zero-knowledge proof of knowledge (ZKPoK) of a witness for R. In Picnic, thisZKPoK is made non-interactive and turned into a signature scheme using the tra-ditional Fiat-Shamir transform (cf. Sect. 3.2.1); furthermore, the design uses the LowMC block cipher for the relation R due to this cipher’s explicit design for efficientcomputation in MPC 2 After several iterations in the design, the current specifica-tion document for Picnic3 lists signature sizes of 12.6kB, 27.5kB and 48.7kB forthe L1, L3 and L5 NIST security levels, respectively [65]. SPHINCS+  SPHINCS+ [16] is a framework that describes a family of hash-based signatureschemes 3 . Using an arbitrary, secure cryptographic hash function, a signaturescheme can be obtained using the SPHINCS+ framework, a variant of the SPHINCSconstruction (cf. Sect. 3.2.3). This is in contrast to all other signature schemes 1See https://microsoft.github.io/Picnic/ for the project page and a list of design and specifica-  tion documents. Last accessed May 2021.2While producing efficient and short signatures, the use of the new LowMC has been commented onby NIST and other works have explored using more trusted ciphers as replacement.3See https://sphincs.org for the project page with the full submission package and a collection of relevant design documents. Last accessed May 2021.  23  https://microsoft.github.io/Picnic/ https://sphincs.org  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  mentioned in this document 4, which require a secure cryptographic hash functionand an additional mathematical problem to be computationally hard to solve. Thegeneral concept of building signature schemes from cryptographic hash functionsgoes back to the beginning of public key cryptography [74, 90]. For that reason,SPHINCS+ is widely considered the signature scheme with the most conservativesecurity guarantees in the competition. The rough concept of SPHINCS+ (as well as its predecessor SPHINCS and the firstround scheme Gravity-SPHINCS) is as follows. A key pair defines a huge virtualdata structure. Data objects required in a signature operation are generated onthe fly from a short secret seed using a pseudorandom generator. This virtualdata structure of a key pair contains a massive number of hash-based few-timesignature scheme (FTS) key pairs (e.g. 260). Such FTS become less secure with ev-ery signature and after a certain number T of signatures (e.g. T = 8) securitydrops below the targeted security level. To prevent using the same few-time keypair more than T times, for every signature a random FTS key pair is selected forevery new message. By using sufficiently many FTS key pairs, the probability of a T + 1 times collision can be made about as likely as successfully guessing the se-cret key. The public keys of all these FTS key pairs are authenticated by a singlehash value using certification trees (similar to a PKI) built of hash-based one-timesignature schemes and binary hash trees. The SPHINCS+ submission to the NIST process defines instances using SHA2,SHA3, or Haraka [72]. The SPHINCS+ design remained unchanged since the ini-tial submission. The changes introduced in the last iterations were an additionalconstruction for the internally used functions and parameters that offer betterperformance trade-offs. SPHINCS+ is a flexible design. For example, at NIST se-curity level L1, the specification contains parameters that lead signature sizes of7 856 bytes and 17088, while signing times are 2721 Mcycles and 138 Mcycles, re-spectively, using SHA2-256. Verification speed is generally fast with about 3 and 8Mcycles for above parameters, and keys for both parameter sets are 64 bytes forthe secret and 32 bytes for the public keys.  4While this is theoretically also true for Picnic, to be competitive, Picnic requires a function with lowmultiplicative depth, a property common hash functions do not provide.  24  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  6 QUANTUM MITIGATION If you encrypt data that needs to be kept confidential for more than 10 years andan attacker could gain access to the ciphertext you need to take action now toprotect your data. Otherwise, security will be compromised as soon as the at-tacker also gets access to a large quantum computer. Given that the NIST processwill still run for a few years, there are essentially two viable options to handle thisproblem. The first option is to already migrate to so called hybrid implementations that usea combination of pre-quantum and post-quantum schemes. The second option isto employ the conceptionally easy, but organizationally complicated measure ofmixing pre-shared keys into all keys established via public-key cryptography. Wewill detail these two options below. If you build devices that will be hard to reach or to upgrade later you should in-clude a post-quantum signature scheme now to ensure secure continuity of ser-vice when a quantum computer is available. Otherwise, you should start to pre-pare for migration by making a catalogue of where you currently use public-keycryptography and for what purpose. Make sure to include software updates andthird party products in your overview. Figure out whether you fit into one of theuse cases that NIST considers – even better, get involved in the NIST discussions tomake sure your use case is covered. Then wait for the outcome of the NIST com-petition (or quantum computers getting dangerously close, whichever comes first)to update your systems.  6.1 HYBRID SCHEMES A hybrid scheme in this context describes the combination of a pre-quantum pub-lic key cryptographic scheme, such as RSA or (EC)DH, with a post-quantum one ina way that guarantees security as long as at least one of the two schemes is se-cure. Hence, hybrid solutions might also be interesting for the migration to stan-dardized post-quantum schemes as they can be easier justified in cases wherecertification and compliance are an issue. We first look at public-key encryption (PKE) and key exchange (KEX). The mostgeneric way to combine two PKE or KEX schemes is to run both schemes to ob-tain one shared secret per scheme and to xor the two shared secrets to obtain acombined one. For protocols that derive a session key by means of feeding a pre-master secret, obtained via public-key cryptography, into a key derivation function(KDF), it is also possible to establish one pre-master secret per scheme and to feedthe concatenation of the two pre-master secrets into the KDF. This would for ex-ample be applicable in the context of TLS. An extensive case-study of combiningschemes for confidentiality that takes a rather applied angle can be found in [34]. When it comes to signature schemes, the combination of two schemes is generi-cally best handled by using them independently. This means, distributing two pub-lic keys (possibly in one certificate) and always sending two signatures, one perscheme. For specific schemes, more efficient combiners might be possible but thisis a topic of ongoing research. A more detailed discussion including a discussionof practical implementations of such combiners is presented in [20].  25  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  6.2 PROTECTIVE MEASURES FOR PRE-QUANTUM CRYP- TOGRAPHY  Users who do not want to embark on deploying post-quantum systems beforethey are standardised; yet are concerned about the long-term confidentiality oftheir transmitted data, can protect their systems by including retained shared se-cret data in the key derivation, in addition to the key material obtained by a publickey operation. This comes at the expense of keeping pairwise shared data and isthus only an option for systems which keep state and have a limited set of peers. ZRTP [120] includes such a mechanism called “key continuity” as a measure againstman-in-the-middle (MITM) attacks. The protocol – specified in 2006 – does notmention security against quantum adversaries as a motivation but is the first de-scription of this idea that we are aware of. It also goes further than other proto-cols in updating the shared secret data. The more recent Wireguard [44] protocoluses a pre-shared key (PSK) and includes it in the derivation of session keys butdoes not update the PSK; Wireguard is based on Noise PSK [100, Chapter 9]. Wire-guard explicitly mentions the PSK as a feature to protect against later compromiseby quantum attackers. (See also [6] for a small tweak to achieve better protectionin that scenario and [61] for a fully post-quantum version.) The following description follows the approach of ZRTP in that the retained sharedsecret gets updated with each public-key operation by hashing in new data. In-cluding secret data from public-key operations ensures forward secrecy and post-compromise security against pre-quantum attackers. Updating the retained sharedsecret during each iteration with a hash function ensures that a later compromiseof the system cannot recover previous session keys from the retained shared se-cret and recorded connection data, even if the attacker has a quantum computerand can thus break the pre-quantum public-key encryption. Let r denote the retained shared secret. Let s be the fresh shared data, obtainedfrom a public-key operation. The above-mentioned protocols are based on theDiffie-Hellman key exchange, but this approach can also be used for RSA-basedprotocols. Whenever the original protocol calls a KDF for generating the sessionkey k, the KDF’s inputs should be extended to include r:  k = KDF(s, ′′session key′′, r, ∗),  where ∗ is a placeholder for the context data (handshake messages, public keys,ID strings, etc.). This ensure that an attacker can recover k only if he has obtained r as well as s. After computing k, the retained secret should be updated to  r′ = KDF(k, ′′retained secret′′)  possibly including other context data in the KDF arguments. The protocol needs to be careful to verify that both parties have obtained s beforeoverwriting r. See ZRTP [120] for an instantiation using two variables for retainedsecret values in order to avoid desynchronization. The description above leaves open how the users have received the first PSK value r. Users concerned about long-term security should arrange to share such keysout of band (scanned QR code, password, . . . ). In scenarios with predefined com-munication patterns, such as a main server communicating with remote regis-tered devices, the PSK may be provisioned with the devices. Note that each deviceshould get a unique PSK known only to the device and the server. Users may also start with empty r if they achieve authenticity and protection againstMITM attacks in other ways, e.g., comparing fingerprints of the obtained data  26  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  through a different medium (a phone call etc.), or accept trust-on-first use. Notethat this helps against quantum attackers only if the attackers miss the first con-nection, which is unlikely for an attacker so dedicated that they can get a quan-tum computer. However, it is worth mentioning that, if an attacker ever missesthe communication leading to a key update, so that they do not know s, they alsocannot compute later values of r. Hence the system can achieve security at a laterstate. Note that the above approach is not suitable for systems that get restored frompreviously saved images, such as virtual machines. In that case a system with afixed PSK is more suitable, however it does not protect against attackers that laterget access to the system, and thus the PSK, and have recorded all messages ex-changed, thus all public-key operations.  27  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  7 CONCLUSIONS It is perhaps inevitable that as the technology sector advances drastically overtime, our infrastructures are exposed to new attacking vectors. However, Quan-tum Technology and in particular Quantum Computing are set to be a major dis-ruptor. We have known for more than 2 decades that the development of a suf-ficiently large and practical quantum computing machine will render most cryp-tographic systems insecure, radically transforming the existing threat model andendangering our infrastructure. Moreover, while current systems do not pose any threat, a working quantum com-puter (i.e., one having a sufficient number of Qubits that is resistant to quantumnoise and other quantum-decoherence, is economically viable and practically op-erational) is the objective of several ongoing large scale investments from bothindustry players and nation states. However, not all development in the area ispublic and it is fairly likely that the first fully functional large quantum computerwill not be publicly announced. As such, policy maker and system owner shouldmake preparations. Rolling out new cryptographic systems takes a lot of time and effort; it might evenbe infeasible for systems with restricted accessibility, like satellites. Moreover, sig-natures play a significant role in protecting modern operating-system upgrades.If a post-quantum signature system is not in place by the time an attacker has ac-cess to a quantum computer, then the attacker can take control of the operatingsystem through a fake upgrade and prevent any future upgrades from fixing theproblem. It is thus important to have replacements in place well in advance. What makesmatters worse is that any encrypted communication intercepted today can be de-crypted by the attacker as soon as he has access to a large quantum computer,whether in 5, 10 or 20 years from now; an attack known as retrospective decryp-tion. In this study we have provided a brief background of post quantum cryptography,in section 2 we present the 5 main families of quantum resistant cryptographicalgorithms that are proposed as potential candidates to provide post-quantumsecurity resilience; viz. code-based, isogeny-based, hash-based, lattice-based andmultivariate-based. Section 4 presents the finalist algorithms that are competingto be considered by NIST ready for standardisation, whereas section 5 refers tothe algorithms that NIST considers promising, but still not ready to be applied. The last section – section 6 – presents and briefly explains two possible mitigationmechanics; namely the so-called hybrid implementations that use a combinationof pre-quantum and post-quantum schemes, and the conceptionally easy, butorganizationally complicated measure ofmixing pre-shared keys into all keys es-tablished via public-key cryptography. Both methods have shortcomings, but forsystem owners requiring long term confidentiality of transmitted data are worthconsidering. Given that the NIST PQC standardisation process is scheduled to pub-lish a draft standard somewhere in 2022-2024, system owners with more relaxedsecurity requirements and/or with greater resource constraints might be betterserved waiting for the process conclusion. The presented algorithms, on sections 4 and 5, refer to asymmetric key (public-  28  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key) cryptographic systems – the area of cryptography that will be mostly affectedby the existence of quantum computers due to their high reliance on mathemat-ical structures (e.g., factoring, and discrete logarithm problem). Symmetric key(shared-key) cryptographic systems on the other hand present a higher resilienceto the new status-quo. In such systems, the adoption of larger key-sizes is consid-ered an effective mitigation technique that is easy to be adopted. The apt reader will have noticed the absence of mention of Quantum Key Distribu-tion (QKD) 1 or of Quantum Cryptography in this text. This has been a deliberatechoice. QKD is a quantum technology application that has been available for manyyears. It provides a guaranteed, by the laws of physics, secure way of distributingand sharing secret keys that are necessary for cryptographic protocols. It essen-tially offers key agreement services, but not authentication or message confiden-tiality; for these services we need to rely on math-based cryptography. In otherwords, QKD can complement a traditional cryptographic system and its setup re-lies on pre-established authenticated communications channels. However, the ex-istence of such an authenticated channel, presupposes that communicating par-ties either have managed to privately exchanged a symmetric key in the past (e.g.,by physically meeting) or are using public key cryptography. In the former case,authentication was achieved by direct interaction, which is not a scalable prac-tice. While, in the latter, we are forced to use the same cryptographic algorithmsthat, as we established, are insecure against quantum cryptanalysis. It is clear thatQKD is not a direct solution to the problems of quantum cryptanalysis, but rathera comparatively mature application of quantum technology. The term QuantumCryptography, on the other hand, is often used to denote QKD or erroneously tosignify Post-Quantum algorithms like the ones visited in this report. Nevertheless,it can also refer to more exotic cryptographic applications that exploit quantumproperties; like quantum [pseudo]random number generators (QRNG), programobfuscation etc. It is important to note that being a quantum cryptographic appli-cation does not equate being immune to quantum or traditional cryptanalysis andfor many quantum cryptographic application this remains an open question.  1https://qt.eu/discover-quantum/underlying-principles/quantum-key-distribution-qkd/.Last accessed May 2021.  29  https://qt.eu/discover-quantum/underlying-principles/quantum-key-distribution-qkd/  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  BIBLIOGRAPHY [1] Miklós Ajtai. The shortest vector problem in L2 is NP-hard for randomizedreductions (extended abstract). In 30th Annual ACM Symposium on Theory of  Computing, pages 10–19. ACM Press, May 1998. [2] Martin Albrecht, Rachel Player, and Sam Scott. On the concrete hardness oflearning with errors. Journal of Mathematical Cryptology, 9, 10 2015. [3] Martin R. Albrecht, Daniel J. Bernstein, Tung Chou, Carlos Cid, Jan Gilcher,Tanja Lange, Varun Maram, Ingo von Maurich, Rafael Misoczki, RubenNiederhagen, Kenneth G. Paterson, Edoardo Persichetti, Christiane Peters,Peter Schwabe, Nicolas Sendrier, Jakub Szefer, Cen Jung Tjhai, Martin Tom-linson, and Wen Wang. Classic McEliece. Round 3 submission to NIST post-quantum call for proposals, 2020. https://classic.mceliece.org/. [4] Martin R. Albrecht, Benjamin R. Curtis, Amit Deo, Alex Davidson, RachelPlayer, Eamonn W. Postlethwaite, Fernando Virdia, and Thomas Wunderer.Estimate all the LWE, NTRU schemes! In Dario Catalano and Roberto DePrisco, editors, SCN 18: 11th International Conference on Security in Commu-  nication Networks, volume 11035 of Lecture Notes in Computer Science, pages351–367. Springer, Heidelberg, September 2018. [5] Martin R. Albrecht, Christian Hanser, Andrea Hoeller, Thomas Pöppelmann,Fernando Virdia, and Andreas Wallner. Implementing RLWE-based schemesusing an RSA co-processor. IACR Transactions on Cryptographic Hardware and  Embedded Systems, 2019(1):169–208, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7338. [6] Jacob Appelbaum, Chloe Martindale, and Peter Wu. Tiny WireGuard tweak.In Johannes Buchmann, Abderrahmane Nitaj, and Tajje eddine Rachidi, ed-itors, AFRICACRYPT 19: 11th International Conference on Cryptology in Africa,volume 11627 of Lecture Notes in Computer Science, pages 3–20. Springer,Heidelberg, July 2019. [7] Nicolas Aragon, Paulo S. L. M. Barreto, Slim Bettaieb, Loïc Bidoux, OlivierBlazy, Jean-Christophe Deneuville, Philippe Gaborit, Santosh Ghosh, ShayGueron, Tim Güneysu, Carlos Aguilar Melchor, Rafael Misoczki, Edoardo Per-sichetti, Nicolas Sendrier, Jean-Pierre Tillich, Valentin Vasseur, and GillesZémor. BIKE - Bit Flipping Key Encapsulation. Round 3 submission to NISTpost-quantum call for proposals, 2020. https://bikesuite.org/. [8] Daniel V. Bailey, Daniel Coffin, Adam J. Elbirt, Joseph H. Silverman, andAdam D. Woodbury. NTRU in constrained devices. In Çetin Kaya Koç, DavidNaccache, and Christof Paar, editors, Cryptographic Hardware and Embed-  ded Systems – CHES 2001, volume 2162 of Lecture Notes in Computer Science,pages 262–272. Springer, Heidelberg, May 2001. [9] Magali Bardet, Maxime Bros, Daniel Cabarcas, Philippe Gaborit, Ray Perlner,Daniel Smith-Tone, Jean-Pierre Tillich, and Javier Verbel. Improvements ofalgebraic attacks for solving the rank decoding and MinRank problems. In  International Conference on the Theory and Application of Cryptology and Infor- mation Security, 2020.  30  https://classic.mceliece.org/ https://tches.iacr.org/index.php/TCHES/article/view/7338 https://tches.iacr.org/index.php/TCHES/article/view/7338 https://bikesuite.org/  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [10] Andrea Basso, Jose Maria Bermudo Mera, Jan-Pieter D’Anvers, Angshu-man Karmakar, Sujoy Sinha Roy, Michiel Van Beirendonck, and Fred-erik Vercauteren. SABER. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [11] Michiel Van Beirendonck, Jan-Pieter D’Anvers, Angshuman Karmakar, JosepBalasch, and Ingrid Verbauwhede. A side-channel resistant implementationof saber. Cryptology ePrint Archive, Report 2020/733, 2020. https://eprint.iacr.org/2020/733. [12] Daniel J. Bernstein, Billy Bob Brumley, Ming-Shing Chen, ChitchanokChuengsatiansup, Tanja Lange, Adrian Marotzke, Bo-Yuan Peng, Nicola Tu-veri, Christine van Vredendaal, and Bo-Yin Yang. NTRU Prime. Round 3 sub-mission to NIST post-quantum call for proposals, 2020. https://ntruprime.cr.yp.to/warnings.html. [13] Daniel J. Bernstein, Tung Chou, and Peter Schwabe. McBits: Fast constant-time code-based cryptography. In Guido Bertoni and Jean-Sébastien Coron,editors, Cryptographic Hardware and Embedded Systems – CHES 2013, volume8086 of Lecture Notes in Computer Science, pages 250–272. Springer, Heidel-berg, August 2013. [14] Daniel J. Bernstein, Chitchanok Chuengsatiansup, Tanja Lange, and Chris-tine van Vredendaal. NTRU prime: Reducing attack surface at low cost.In Carlisle Adams and Jan Camenisch, editors, SAC 2017: 24th Annual Inter-  national Workshop on Selected Areas in Cryptography, volume 10719 of Lec- ture Notes in Computer Science, pages 235–260. Springer, Heidelberg, August2017.  [15] Daniel J. Bernstein, Daira Hopwood, Andreas Hülsing, Tanja Lange, RubenNiederhagen, Louiza Papachristodoulou, Michael Schneider, Peter Schwabe,and Zooko Wilcox-O’Hearn. SPHINCS: Practical stateless hash-based signa-tures. In Elisabeth Oswald and Marc Fischlin, editors, Advances in Cryptology – EUROCRYPT 2015, Part I, volume 9056 of Lecture Notes in Computer Science,pages 368–397. Springer, Heidelberg, April 2015.  [16] Daniel J. Bernstein, Andreas Hülsing, Stefan Kölbl, Ruben Niederhagen, JoostRijneveld, and Peter Schwabe. The SPHINCS+ signature framework. InLorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz,editors, ACM CCS 2019: 26th Conference on Computer and Communications Security, pages 2129–2146. ACM Press, November 2019.  [17] Daniel J. Bernstein and Tanja Lange. McTiny: Fast high-confidence post-quantum key erasure for tiny network servers. In Srdjan Capkun andFranziska Roesner, editors, USENIX Security 2020: 29th USENIX Security Sym- posium, pages 1731–1748. USENIX Association, August 2020.  [18] Ward Beullens. Improved cryptanalysis of UOV and Rainbow. CryptologyePrint Archive, Report 2020/1343, 2020. https://eprint.iacr.org/2020/1343. [19] Nina Bindel, Mike Hamburg, Kathrin Hövelmanns, Andreas Hülsing, andEdoardo Persichetti. Tighter proofs of CCA security in the quantum randomoracle model. In Dennis Hofheinz and Alon Rosen, editors, TCC 2019: 17th  Theory of Cryptography Conference, Part II, volume 11892 of Lecture Notes in Computer Science, pages 61–90. Springer, Heidelberg, December 2019.  [20] Nina Bindel, Udyani Herath, Matthew McKague, and Douglas Stebila. Tran-sitioning to a quantum-resistant public key infrastructure. In Tanja Langeand Tsuyoshi Takagi, editors, Post-Quantum Cryptography - 8th International Workshop, PQCrypto 2017, pages 384–405. Springer, Heidelberg, 2017.  31  https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/733 https://eprint.iacr.org/2020/733 https://ntruprime.cr.yp.to/warnings.html https://ntruprime.cr.yp.to/warnings.html https://eprint.iacr.org/2020/1343  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [21] Nina Bindel and John M. Schanck. Decryption failure is more likely after suc-cess. In Jintai Ding and Jean-Pierre Tillich, editors, Post-Quantum Cryptogra- phy - 11th International Conference, PQCrypto 2020, pages 206–225. Springer,Heidelberg, 2020.  [22] Dan Boneh, Özgür Dagdelen, Marc Fischlin, Anja Lehmann, ChristianSchaffner, and Mark Zhandry. Random oracles in a quantum world. InDong Hoon Lee and Xiaoyun Wang, editors, Advances in Cryptology – ASI- ACRYPT 2011, volume 7073 of Lecture Notes in Computer Science, pages 41–69. Springer, Heidelberg, December 2011.  [23] J. Bos, L. Ducas, E. Kiltz, T. Lepoint, V. Lyubashevsky, J. M. Schanck,P. Schwabe, G. Seiler, and D. Stehle. CRYSTALS - Kyber: A CCA-SecureModule-Lattice-Based KEM. In 2018 IEEE European Symposium on Security and Privacy (EuroS P), pages 353–367, 2018.  [24] Joppe W. Bos, Joost Renes, and Christine van Vredendaal. Polynomial multi-plication with contemporary co-processors: Beyond kronecker, schönhage-strassen and nussbaumer. Cryptology ePrint Archive, Report 2020/1303,2020. https://eprint.iacr.org/2020/1303. [25] Leif Both and Alexander May. Optimizing BJMM with nearest neighbors: Fulldecoding in 22n/21 and McEliece security, 2017. International Workshop onCoding and Cryptography (WCC 2017), https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf. [26] Leif Both and Alexander May. Decoding linear codes with high error rateand its impact for LPN security. In Tanja Lange and Rainer Steinwandt, ed-itors, Post-Quantum Cryptography - 9th International Conference, PQCrypto  2018, pages 25–46. Springer, Heidelberg, 2018. [27] Leon Botros, Matthias J. Kannwischer, and Peter Schwabe. Memory-efficienthigh-speed implementation of Kyber on cortex-M4. In Johannes Buchmann,Abderrahmane Nitaj, and Tajje eddine Rachidi, editors, AFRICACRYPT 19:  11th International Conference on Cryptology in Africa, volume 11627 of Lecture Notes in Computer Science, pages 209–228. Springer, Heidelberg, July 2019.  [28] Leon Groot Bruinderink and Peter Pessl. Differential fault attacks on deter-ministic lattice signatures. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2018(3):21–43, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7267.  [29] A. Casanova, J.-C. Faugère, G. Macario-Rat, J. Patarin, L. Perret, andJ. Ryckeghem. GeMSS. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [30] Denis Xavier Charles, Kristin E. Lauter, and Eyal Z. Goren. Cryptographichash functions from expander graphs. Journal of Cryptology, 22(1):93–113,January 2009. [31] Tung Chou. McBits revisited. In Wieland Fischer and Naofumi Homma, ed-itors, Cryptographic Hardware and Embedded Systems – CHES 2017, volume10529 of Lecture Notes in Computer Science, pages 213–231. Springer, Heidel-berg, September 2017. [32] David Cooper, Daniel Apon, Quynh Dang, Michael Davidson, MorrisDworkin, and Carl Miller. NIST Special Publication 800-208: Recommenda-tion for Stateful Hash-Based Signature Schemes. Technical report, NationalInstitute of Standards and Technology, 2020. https://doi.org/10.6028/NIST.SP.800-208. [33] Don Coppersmith and Adi Shamir. Lattice attacks on NTRU. In Walter Fumy,editor, Advances in Cryptology – EUROCRYPT’97, volume 1233 of Lecture Notes  in Computer Science, pages 52–61. Springer, Heidelberg, May 1997.  32  https://eprint.iacr.org/2020/1303 https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf https://tches.iacr.org/index.php/TCHES/article/view/7267 https://tches.iacr.org/index.php/TCHES/article/view/7267 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://doi.org/10.6028/NIST.SP.800-208 https://doi.org/10.6028/NIST.SP.800-208  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [34] Eric Crockett, Christian Paquin, and Douglas Stebila. Prototyping post-quantum and hybrid key exchange and authentication in TLS and SSH. Cryp-tology ePrint Archive, Report 2019/858, 2019. https://eprint.iacr.org/2019/858. [35] Dana Dachman-Soled, Léo Ducas, Huijing Gong, and Mélissa Rossi. LWEwith side information: Attacks and concrete security estimation. InDaniele Micciancio and Thomas Ristenpart, editors, Advances in Cryptology  – CRYPTO 2020, Part II, volume 12171 of Lecture Notes in Computer Science,pages 329–358. Springer, Heidelberg, August 2020. [36] Viet Ba Dang, Farnoud Farahmand, Michal Andrzejczak, Kamyar Moha-jerani, Duc Tri Nguyen, and Kris Gaj. Implementation and Benchmark-ing of Round 2 Candidates in the NIST Post-Quantum Cryptography Stan-dardization Process Using Hardware and Software/Hardware Co-designApproaches. Cryptology ePrint Archive, Report 2020/795, 2020. https://eprint.iacr.org/2020/795. [37] Jan-Pieter D’Anvers, Qian Guo, Thomas Johansson, Alexander Nilsson, Fred-erik Vercauteren, and Ingrid Verbauwhede. Decryption failure attacks onIND-CCA secure lattice-based schemes. In Dongdai Lin and Kazue Sako, edi-tors, PKC 2019: 22nd International Conference on Theory and Practice of Public  Key Cryptography, Part II, volume 11443 of Lecture Notes in Computer Science,pages 565–598. Springer, Heidelberg, April 2019. [38] Jan-Pieter D’Anvers, Angshuman Karmakar, Sujoy Sinha Roy, and FrederikVercauteren. Saber: Module-LWR based key exchange, CPA-secure en-cryption and CCA-secure KEM. In Antoine Joux, Abderrahmane Nitaj, andTajjeeddine Rachidi, editors, AFRICACRYPT 18: 10th International Conference  on Cryptology in Africa, volume 10831 of Lecture Notes in Computer Science,pages 282–305. Springer, Heidelberg, May 2018. [39] Jan-Pieter D’Anvers, Mélissa Rossi, and Fernando Virdia. (One) failure is notan option: Bootstrapping the search for failures in lattice-based encryptionschemes. In Anne Canteaut and Yuval Ishai, editors, Advances in Cryptology –  EUROCRYPT 2020, Part III, volume 12107 of Lecture Notes in Computer Science,pages 3–33. Springer, Heidelberg, May 2020. [40] Alexander W. Dent. A designer’s guide to KEMs. In Kenneth G. Paterson,editor, 9th IMA International Conference on Cryptography and Coding, volume2898 of Lecture Notes in Computer Science, pages 133–151. Springer, Heidel-berg, December 2003. [41] Jintai Ding, Ming-Shing Chen, Albrecht Petzoldt, Dieter Schmidt, Bo-Yin Yang,Matthias Kannwischer, and Jacques Patarin. Rainbow. Technical report,National Institute of Standards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [42] Jintai Ding and Dieter Schmidt. Rainbow, a new multivariable polynomialsignature scheme. In John Ioannidis, Angelos Keromytis, and Moti Yung,editors, ACNS 05: 3rd International Conference on Applied Cryptography and  Network Security, volume 3531 of Lecture Notes in Computer Science, pages164–175. Springer, Heidelberg, June 2005. [43] Jelle Don, Serge Fehr, and Christian Majenz. The measure-and-reprogramtechnique 2.0: Multi-round fiat-shamir and more. In Daniele Micciancio andThomas Ristenpart, editors, Advances in Cryptology – CRYPTO 2020, Part III,volume 12172 of Lecture Notes in Computer Science, pages 602–631. Springer,Heidelberg, August 2020. [44] Jason A. Donenfeld. WireGuard: Next generation kernel network tunnel.In ISOC Network and Distributed System Security Symposium – NDSS 2017. TheInternet Society, February / March 2017.  33  https://eprint.iacr.org/2019/858 https://eprint.iacr.org/2019/858 https://eprint.iacr.org/2020/795 https://eprint.iacr.org/2020/795 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [45] Léo Ducas, Eike Kiltz, Tancrède Lepoint, Vadim Lyubashevsky, PeterSchwabe, Gregor Seiler, and Damien Stehlé. CRYSTALS-Dilithium: A lattice-based digital signature scheme. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2018(1):238–268, 2018. https://tches.iacr.org/index.php/TCHES/article/view/839.  [46] Léo Ducas and Thomas Prest. Fast fourier orthogonalization. In ISSAC, pages191–198. ACM, 2016. [47] ECRYPT-CSA. Whitepaper on Post-Quantum Cryptography. https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf, 2018. [48] Jean-Charles Faugère, Valérie Gauthier, Ayoub Otmani, Ludovic Perret, andJean-Pierre Tillich. A distinguisher for high rate McEliece cryptosystems.Cryptology ePrint Archive, Report 2010/331, 2010. http://eprint.iacr.org/2010/331. [49] Amos Fiat and Adi Shamir. How to prove yourself: Practical solutions toidentification and signature problems. In Andrew M. Odlyzko, editor, Ad-  vances in Cryptology – CRYPTO’86, volume 263 of Lecture Notes in Computer Science, pages 186–194. Springer, Heidelberg, August 1987.  [50] Pierre-Alain Fouque, Paul Kirchner, Mehdi Tibouchi, Alexandre Wallet, andYang Yu. Uprooting the Falcon tree? Cryptology ePrint Archive, Report2019/1180, 2019. https://eprint.iacr.org/2019/1180. [51] Eiichiro Fujisaki and Tatsuaki Okamoto. Secure integration of asymmetricand symmetric encryption schemes. In Michael J. Wiener, editor, Advances  in Cryptology – CRYPTO’99, volume 1666 of Lecture Notes in Computer Science,pages 537–554. Springer, Heidelberg, August 1999. [52] Craig Gentry, Chris Peikert, and Vinod Vaikuntanathan. Trapdoors for hardlattices and new cryptographic constructions. In Richard E. Ladner and Cyn-thia Dwork, editors, 40th Annual ACM Symposium on Theory of Computing,pages 197–206. ACM Press, May 2008. [53] T. Güneysu, M. Krausz, T. Oder, and J. Speith. Evaluation of lattice-basedsignature schemes in embedded systems. In 2018 25th IEEE International  Conference on Electronics, Circuits and Systems (ICECS), pages 385–388, 2018. [54] Jeffrey Hoffstein, Jill Pipher, and Joseph H. Silverman. NTRU: A new highspeed public key cryptosystem, 1996. draft from at CRYPTO ‘96 rump ses-sion. http://web.securityinnovation.com/hubfs/files/ntru-orig.pdf. [55] Jeffrey Hoffstein, Jill Pipher, and Joseph H. Silverman. NTRU: A ring-basedpublic key cryptosystem. In Joe P. Buhler, editor, Algorithmic Number Theory  – ANTS-III, volume 1423 of LNCS, pages 267–288. Springer, 1998. http://dx.doi.org/10.1007/BFb0054868. [56] Dennis Hofheinz, Kathrin Hövelmanns, and Eike Kiltz. A modular analysis ofthe Fujisaki-Okamoto transformation. In Yael Kalai and Leonid Reyzin, edi-tors, TCC 2017: 15th Theory of Cryptography Conference, Part I, volume 10677of Lecture Notes in Computer Science, pages 341–371. Springer, Heidelberg,November 2017. [57] James Howe, Thomas Prest, Thomas Ricosset, and Mélissa Rossi.Isochronous gaussian sampling: From inception to implementation. In Jin-tai Ding and Jean-Pierre Tillich, editors, Post-Quantum Cryptography - 11th  International Conference, PQCrypto 2020, pages 53–71. Springer, Heidelberg,2020. [58] Nick Howgrave-Graham. A hybrid lattice-reduction and meet-in-the-middleattack against NTRU. In Alfred Menezes, editor, Advances in Cryptology –  CRYPTO 2007, volume 4622 of Lecture Notes in Computer Science, pages 150–169. Springer, Heidelberg, August 2007.  34  https://tches.iacr.org/index.php/TCHES/article/view/839 https://tches.iacr.org/index.php/TCHES/article/view/839 https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf http://eprint.iacr.org/2010/331 http://eprint.iacr.org/2010/331 https://eprint.iacr.org/2019/1180 http://web.securityinnovation.com/hubfs/files/ntru-orig.pdf http://dx.doi.org/10.1007/BFb0054868 http://dx.doi.org/10.1007/BFb0054868  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [59] Andreas Hülsing, Denise Butin, Stefan-Lukas Gazdag, Joost Rijneveld, andAziz Mohaisen. XMSS: Extended Hash-Based Signatures. Internet Requestsfor Comments, 2018. [60] Andreas Hülsing, Joost Rijneveld, John M. Schanck, and Peter Schwabe.High-speed key encapsulation from NTRU. In Wieland Fischer and Nao-fumi Homma, editors, Cryptographic Hardware and Embedded Systems –  CHES 2017, volume 10529 of Lecture Notes in Computer Science, pages 232–252. Springer, Heidelberg, September 2017. [61] Andreas Hülsing, Kai-Chun Ning, Peter Schwabe, Florian Weber, andPhilip R. Zimmermann. Post-quantum WireGuard. Cryptology ePrintArchive, Report 2020/379, 2020. https://eprint.iacr.org/2020/379. [62] Yuval Ishai, Eyal Kushilevitz, Rafail Ostrovsky, and Amit Sahai. Zero-knowledge from secure multiparty computation. In David S. Johnson andUriel Feige, editors, 39th Annual ACM Symposium on Theory of Computing,pages 21–30. ACM Press, June 2007. [63] David Jao, Reza Azarderakhsh, Matthew Campagna, Craig Costello, Luca DeFeo, Basil Hess, Amir Jalali, Brian Koziel, Brian LaMacchia, Patrick Longa,Michael Naehrig, Joost Renes, Vladimir Soukharev, David Urbanik, andGeovandro Pereira. SIKE. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [64] Haodong Jiang, Zhenfeng Zhang, Long Chen, Hong Wang, and Zhi Ma. IND-CCA-secure key encapsulation mechanism in the quantum random oraclemodel, revisited. In Hovav Shacham and Alexandra Boldyreva, editors, Ad-  vances in Cryptology – CRYPTO 2018, Part III, volume 10993 of Lecture Notes in Computer Science, pages 96–125. Springer, Heidelberg, August 2018.  [65] Daniel Kales and Greg Zaverucha. Improving the Performance of the PicnicSignature Scheme. Cryptology ePrint Archive, Report 2020/427, 2020. https://eprint.iacr.org/2020/427. [66] Matthias J. Kannwischer, Joost Rijneveld, and Peter Schwabe. Faster mul-tiplication in Z2m [x] on cortex-M4 to speed up NIST PQC candidates. InRobert H. Deng, Valérie Gauthier-Umaña, Martín Ochoa, and Moti Yung,editors, ACNS 19: 17th International Conference on Applied Cryptography and  Network Security, volume 11464 of Lecture Notes in Computer Science, pages281–301. Springer, Heidelberg, June 2019. [67] Matthias J. Kannwischer, Joost Rijneveld, Peter Schwabe, and Ko Stoffelen.pqm4: Testing and benchmarking NIST PQC on ARM cortex-M4. CryptologyePrint Archive, Report 2019/844, 2019. https://eprint.iacr.org/2019/844. [68] Angshuman Karmakar, Jose Maria Bermudo Mera, Sujoy Sinha Roy, and In-grid Verbauwhede. Saber on ARM. IACR Transactions on Cryptographic Hard-  ware and Embedded Systems, 2018(3):243–266, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7275. [69] Angshuman Karmakar, Sujoy Sinha Roy, Frederik Vercauteren, and IngridVerbauwhede. Pushing the speed limit of constant-time discrete Gaussiansampling. A case study on the Falcon signature scheme. In DAC, page 88.ACM, 2019. [70] Jonathan Katz and Yehuda Lindell. Introduction to modern cryptography. CRCpress, 2020. [71] Elena Kirshanova. Improved quantum information set decoding. In TanjaLange and Rainer Steinwandt, editors, Post-Quantum Cryptography - 9th In-  ternational Conference, PQCrypto 2018, pages 507–527. Springer, Heidelberg,2018.  35  https://eprint.iacr.org/2020/379 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/427 https://eprint.iacr.org/2020/427 https://eprint.iacr.org/2019/844 https://tches.iacr.org/index.php/TCHES/article/view/7275 https://tches.iacr.org/index.php/TCHES/article/view/7275  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [72] Stefan Kölbl, Martin M. Lauridsen, Florian Mendel, and Christian Rech-berger. Haraka v2 - Efficient short-input hashing for post-quantum ap-plications. IACR Transactions on Symmetric Cryptology, 2016(2):1–29, 2016.http://tosc.iacr.org/index.php/ToSC/article/view/563. [73] Juliane Krämer and Mirjam Loiero. Fault attacks on UOV and Rainbow. In IliaPolian and Marc Stöttinger, editors, COSADE 2019: 10th International Work-  shop on Constructive Side-Channel Analysis and Secure Design, volume 11421of Lecture Notes in Computer Science, pages 193–214. Springer, Heidelberg,April 2019. [74] Leslie Lamport. Constructing digital signatures from a one-way function.Technical Report SRI-CSL-98, SRI International Computer Science Labora-tory, October 1979. [75] Tanja Lange. SD8 (Post-Quantum Cryptography) – Part 4: Code-Based Cryp-tography. Technical Report N 2276, ISO/IEC JTC 1/SC 27/WG 2, 2020. https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip. [76] Tanja Lange. Sd8 (post-quantum cryptography) – part 6: Isogeny-based cryptography. Technical Report N 2274, ISO/IEC JTC 1/SC27/WG 2, 2020. https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip. [77] Adam Langley. CECPQ2, 2018. https://www.imperialviolet.org/2018/12/12/cecpq2.html. [78] Mun-Kyu Lee, Jeong Eun Song, Dooho choi, and Dong-Guk Han. Counter-measures against power analysis attacks for the NTRU public key cryptosys-tem. IEICE Transactions on Fundamentals of Electronics, Communications and  Computer Sciences, E93.A(1):153–163, 2010. [79] Richard Lindner and Chris Peikert. Better key sizes (and attacks) for LWE-based encryption. In Aggelos Kiayias, editor, Topics in Cryptology – CT-  RSA 2011, volume 6558 of Lecture Notes in Computer Science, pages 319–339.Springer, Heidelberg, February 2011. [80] Vadim Lyubashevsky, Léo Ducas, Eike Kiltz, Tancrède Lepoint, PeterSchwabe, Gregor Seiler, and Damien Stehlé. CRYSTALS-DILITHIUM.Technical report, National Institute of Standards and Technology, 2020.available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [81] Vadim Lyubashevsky, Chris Peikert, and Oded Regev. On ideal lattices andlearning with errors over rings. In Henri Gilbert, editor, Advances in Cryp-  tology – EUROCRYPT 2010, volume 6110 of Lecture Notes in Computer Science,pages 1–23. Springer, Heidelberg, May / June 2010. [82] J. Maria Bermudo Mera, F. Turan, A. Karmakar, S. Sinha Roy, and I. Ver-bauwhede. Compact domain-specific co-processor for accelerating mod-ule lattice-based kem. In 2020 57th ACM/IEEE Design Automation Conference  (DAC), pages 1–6, 2020. [83] Alexander May. Cryptanalysis of NTRU, 1999. https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps. [84] Alexander May and Joseph H. Silverman. Dimension reduction methodsfor convolution modular lattices. In Joseph H. Silverman, editor, Cryptogra-  phy and Lattices: International Conference – CaLC 2001, volume 2146 of LNCS,pages 110–125. Springer, 2001. http://dx.doi.org/10.1007/3-540-44670-2_10.  36  http://tosc.iacr.org/index.php/ToSC/article/view/563 https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.imperialviolet.org/2018/12/12/cecpq2.html https://www.imperialviolet.org/2018/12/12/cecpq2.html https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps http://dx.doi.org/10.1007/3-540-44670-2_10 http://dx.doi.org/10.1007/3-540-44670-2_10  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [85] Sarah McCarthy, James Howe, Neil Smyth, Séamus Brannigan, and MáireO’Neill. BEARZ attack FALCON: implementation attacks with counter-measures on the FALCON signature scheme. In ICETE (2), pages 61–71.SciTePress, 2019. [86] Robert J. McEliece. A public-key cryptosystem based on algebraic codingtheory, 1978. JPL DSN Progress Report http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF. [87] David A. McGrew, Michael Curcio, and Scott R. Fluhrer. Hash-Based Signa-tures. RFC 8554, RFC Editor, 2019. [88] Carlos Aguilar Melchor, Nicolas Aragon, Slim Bettaieb, Loïc Bidoux, OlivierBlazy, Jurjen Bos, Jean-Christophe Deneuville, Philippe Gaborit, Edoardo Per-sichetti, Jean-Marc Robert, Pascal Véron, and Gilles Zémor. HQC (HammingQuasi-Cyclic). Round 3 submission to NIST post-quantum call for proposals,2020. http://pqc-hqc.org/. [89] Jose Maria Bermudo Mera, Angshuman Karmakar, and Ingrid Verbauwhede.Time-memory trade-off in Toom-Cook multiplication. IACR Transactions  on Cryptographic Hardware and Embedded Systems, 2020(2):222–244, 2020.https://tches.iacr.org/index.php/TCHES/article/view/8550. [90] Ralph C. Merkle. A certified digital signature. In Gilles Brassard, editor,  Advances in Cryptology – CRYPTO’89, volume 435 of Lecture Notes in Computer Science, pages 218–238. Springer, Heidelberg, August 1990.  [91] Vincent Migliore, Benoît Gérard, Mehdi Tibouchi, and Pierre-Alain Fouque.Masking Dilithium - efficient implementation and side-channel evaluation.In Robert H. Deng, Valérie Gauthier-Umaña, Martín Ochoa, and Moti Yung,editors, ACNS 19: 17th International Conference on Applied Cryptography and Network Security, volume 11464 of Lecture Notes in Computer Science, pages344–362. Springer, Heidelberg, June 2019.  [92] Michael Naehrig, Erdem Alkim, Joppe Bos, Léo Ducas, Karen Easterbrook,Brian LaMacchia, Patrick Longa, Ilya Mironov, Valeria Nikolaenko, Christo-pher Peikert, Ananth Raghunathan, and Douglas Stebila. FrodoKEM.Technical report, National Institute of Standards and Technology, 2020.available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [93] Harald Niederreiter. Knapsack-type cryptosystems and algebraic codingtheory. Problems of Control and Information Theory, 15(2):159–166, 1986. [94] Submission requirements and evaluation criteria for the post-quantumcryptography standardization process, 2016. https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf. [95] Status report on the second round of the nist post-quantum cryptographystandardization process, 2020. https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf. [96] Tobias Oder, Tobias Schneider, Thomas Pöppelmann, and Tim Güneysu.Practical CCA2-secure masked Ring-LWE implementations. IACR Transactions  on Cryptographic Hardware and Embedded Systems, 2018(1):142–174, 2018.https://tches.iacr.org/index.php/TCHES/article/view/836. [97] Tobias Oder, Julian Speith, Kira Höltgen, and Tim Güneysu. Towards prac-tical microcontroller implementation of the signature scheme Falcon. InJintai Ding and Rainer Steinwandt, editors, Post-Quantum Cryptography - 10th  International Conference, PQCrypto 2019, pages 65–80. Springer, Heidelberg,2019.  37  http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF http://pqc-hqc.org/ https://tches.iacr.org/index.php/TCHES/article/view/8550 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf https://tches.iacr.org/index.php/TCHES/article/view/836  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [98] Irem Keskinkurt Paksoy and Murat Cenk. TMVP-based Multiplication forPolynomial Quotient Rings and Application to Saber on ARM Cortex-M4.Cryptology ePrint Archive, Report 2020/1302, 2020. https://eprint.iacr.org/2020/1302. [99] Jacques Patarin. The oil and vinegar signature scheme. In Dagstuhl Workshop  on Cryptography September, 1997, 1997. [100] Trevor Perrin. Noise protocol framework, 2018. https://noiseprotocol.org/noise.pdf, Revision 34, 2018-07-11. [101] Thomas Pornin. New efficient, constant-time implementations of Falcon.Cryptology ePrint Archive, Report 2019/893, 2019. https://eprint.iacr.org/2019/893. [102] E. Prange. The use of information sets in decoding cyclic codes. IRE Transac-  tions, IT-8:S5–S9, 1962. [103] Thomas Prest, Pierre-Alain Fouque, Jeffrey Hoffstein, Paul Kirchner, VadimLyubashevsky, Thomas Pornin, Thomas Ricosset, Gregor Seiler, WilliamWhyte, and Zhenfei Zhang. FALCON. Technical report, National Institute ofStandards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [104] Prasanna Ravi, Sourav Sen Gupta, Anupam Chattopadhyay, and ShivamBhasin. Improving speed of Dilithium’s signing procedure. Cryptology ePrintArchive, Report 2019/420, 2019. https://eprint.iacr.org/2019/420. [105] Prasanna Ravi, Debapriya Basu Roy, Shivam Bhasin, Anupam Chattopad-hyay, and Debdeep Mukhopadhyay. Number “not used” once - practicalfault attack on pqm4 implementations of NIST candidates. In Ilia Polian andMarc Stöttinger, editors, COSADE 2019: 10th International Workshop on Con-  structive Side-Channel Analysis and Secure Design, volume 11421 of Lecture Notes in Computer Science, pages 232–250. Springer, Heidelberg, April 2019.  [106] Sujoy Sinha Roy and Andrea Basso. High-speed instruction-set coprocessorfor lattice-based key encapsulation mechanism: Saber in hardware. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2020(4):443–466, 2020. https://tches.iacr.org/index.php/TCHES/article/view/8690.  [107] Tsunekazu Saito, Keita Xagawa, and Takashi Yamakawa. Tightly-secure key-encapsulation mechanism in the quantum random oracle model. In Jes-per Buus Nielsen and Vincent Rijmen, editors, Advances in Cryptology – EU- ROCRYPT 2018, Part III, volume 10822 of Lecture Notes in Computer Science,pages 520–551. Springer, Heidelberg, April / May 2018.  [108] Simona Samardjiska, Ming-Shing Chen, Andreas Hulsing, Joost Rijneveld,and Peter Schwabe. MQDSS. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [109] Thomas Schamberger, Oliver Mischke, and Johanna Sepúlveda. Practicalevaluation of masking for NTRUEncrypt on ARM cortex-M4. In Ilia Polianand Marc Stöttinger, editors, COSADE 2019: 10th International Workshop on  Constructive Side-Channel Analysis and Secure Design, volume 11421 of Lecture Notes in Computer Science, pages 253–269. Springer, Heidelberg, April 2019.  [110] John M. Schanck, Andreas Hulsing, Joost Rijneveld, and Peter Schwabe.NTRU-HRSS-KEM. Technical report, National Institute of Standardsand Technology, 2017. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions.  38  https://eprint.iacr.org/2020/1302 https://eprint.iacr.org/2020/1302 https://noiseprotocol.org/noise.pdf https://noiseprotocol.org/noise.pdf https://eprint.iacr.org/2019/893 https://eprint.iacr.org/2019/893 https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://eprint.iacr.org/2019/420 https://tches.iacr.org/index.php/TCHES/article/view/8690 https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [111] Peter Schwabe, Roberto Avanzi, Joppe Bos, Léo Ducas, Eike Kiltz, TancrèdeLepoint, Vadim Lyubashevsky, John M. Schanck, Gregor Seiler, and DamienStehlé. CRYSTALS-KYBER. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [112] S. Sinha Roy. SaberX4: High-Throughput Software Implementation of SaberKey Encapsulation Mechanism. In 2019 IEEE 37th International Conference on  Computer Design (ICCD), pages 321–324, 2019. [113] Daniel Smith-Tone and Ray Perlner. Rainbow band separation is better thanwe thought. Cryptology ePrint Archive, Report 2020/702, 2020. https://eprint.iacr.org/2020/702. [114] Bin Wang, Xiaozhuo Gu, and Yingshan Yang. Saber on ESP32. In MauroConti, Jianying Zhou, Emiliano Casalicchio, and Angelo Spognardi, editors,  ACNS 20: 18th International Conference on Applied Cryptography and Network Security, Part I, volume 12146 of Lecture Notes in Computer Science, pages421–440. Springer, Heidelberg, October 2020.  [115] Wen Wang, Jakub Szefer, and Ruben Niederhagen. FPGA-based key genera-tor for the niederreiter cryptosystem using binary goppa codes. In WielandFischer and Naofumi Homma, editors, Cryptographic Hardware and Embed- ded Systems – CHES 2017, volume 10529 of Lecture Notes in Computer Science,pages 253–274. Springer, Heidelberg, September 2017.  [116] Wen Wang, Jakub Szefer, and Ruben Niederhagen. FPGA-based niederreitercryptosystem using binary goppa codes. In Tanja Lange and Rainer Stein-wandt, editors, Post-Quantum Cryptography - 9th International Conference, PQCrypto 2018, pages 77–98. Springer, Heidelberg, 2018.  [117] Zhenfei Zhang, Cong Chen, Jeffrey Hoffstein, and William Whyte.NTRUEncrypt. Technical report, National Institute of Standardsand Technology, 2017. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions. [118] Zhenfei Zhang, Cong Chen, Jeffrey Hoffstein, William Whyte, John M.Schanck, Andreas Hulsing, Joost Rijneveld, Peter Schwabe, and OussamaDanba. NTRUEncrypt. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [119] Yihong Zhu, Min Zhu, Bohan Yang, Wenping Zhu, Chenchen Deng, ChenChen, Shaojun Wei, and Leibo Liu. A high-performance hardware implemen-tation of saber based on karatsuba algorithm. Cryptology ePrint Archive,Report 2020/1037, 2020. https://eprint.iacr.org/2020/1037. [120] Philip Zimmerman, Alan Johnston, and Jon Callas. ZRTP: Media Path KeyAgreement for Unicast Secure RTP. RFC 6189, RFC Editor, 2011.  39  https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/702 https://eprint.iacr.org/2020/702 https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://eprint.iacr.org/2020/1037  ABOUT ENISA The European Union Agency for Cybersecurity, ENISA, is the Union’s agency dedicated to achieving a high common level of cybersecurity across Europe. Established in 2004 and strengthened by the EU Cybersecurity Act, the European Union Agency for Cybersecurity contributes to EU cyber policy, enhances the trustworthiness of ICT products, services and processes with cybersecurity certification schemes, cooperates with Member States and EU bodies, and helps Europe prepare for the cyber challenges of tomorrow. Through knowl- edge sharing, capacity building and awareness raising, the Agency works together with its key stakeholders to strengthen trust in the connected economy, to boost resilience of the Union’s infrastructure, and, ultimately, to keep Europe’s society and citizens digitally secure. More information about ENISA and its work can be found here: www.enisa.europa.eu.  ISBN 978-92-9204-468-8 DOI 10.2824/92307  www.enisa.europa.eu  Introduction  Families of Post-Quantum Algorithms  Code-based  Isogeny-based  Hash-based  Lattice-based  Multivariate-system based  The NIST Round 3 Candidates  Security Notions and Generic Transforms  PKE and KEMs  Security Notions, and Transforms  FO-transform  Digital Signatures  Identification schemes  Trapdoor Functions  One- and few-time signatures  Quantum adversaries  The quantum-accessible random oracle model  NIST Round 3 Finalists  Encryption Schemes  Classic McEliece  Crystals-Kyber  NTRU  Saber  Signature Schemes  Crystals-Dilithium  Falcon  Rainbow  Alternate Candidates  Encryption Schemes  Signature Schemes  Quantum Mitigation  Hybrid schemes  Protective measures for pre-quantum cryptography  Conclusions  Bibliography",
    "original document": "POST-QUANTUMCRYPTOGRAPHY Current state and quantum mitigation  MAY 2021, v2  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  ABOUT ENISA The European Union Agency for Cybersecurity, ENISA, is the Union’s agency ded-icated to achieving a high common level of cybersecurity across Europe. Estab-lished in 2004 and strengthened by the EU Cybersecurity Act, the European UnionAgency for Cybersecurity contributes to EU cyber policy, enhances the trustwor-thiness of ICT products, services and processes with cybersecurity certificationschemes, cooperates with Member States and EU bodies, and helps Europe pre-pare for the cyber challenges of tomorrow. Through knowledge sharing, capac-ity building and awareness raising, the Agency works together with its key stake-holders to strengthen trust in the connected economy, to boost resilience of theUnion’s infrastructure, and, ultimately, to keep Europe’s society and citizens digi-tally secure. For more information, visit www.enisa.europa.eu. CONTACT  For contacting the authors please use evangelos.rekleitis@enisa.europa.euFor media enquiries about this paper, please use press@enisa.europa.eu AUTHORS  Ward Beullens,Jan-Pieter D’Anvers,Andreas Hülsing,Tanja Lange,Lorenz Panny,Cyprien de Saint Guilhem,Nigel P. Smart. FOR ENISA  Evangelos Rekleitis,Angeliki Aktypi,Athanasios-Vasileios Grammatopoulos. LEGAL NOTICE  Notice must be taken that this publication represents the views and interpreta-tions of ENISA, unless stated otherwise. This publication should not be construedto be a legal action of ENISA or the ENISA bodies unless adopted pursuant to theRegulation (EU) No 2019/881. This publication does not necessarily representstate-of the-art and ENISA may update it from time to time. Third-party sourcesare quoted as appropriate. ENISA is not responsible for the content of the exter-nal sources including external websites referenced in this publication. This pub-lication is intended for information purposes only. It must be accessible free ofcharge. Neither ENISA nor any person acting on its behalf is responsible for theuse that might be made of the information contained in this publication.  i  www.enisa.europa.eu evangelos.rekleitis@enisa.europa.eu press@enisa.europa.eu  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  COPYRIGHT NOTICE  © European Union Agency for Cybersecurity (ENISA), 2021Reproduction is authorised provided the source is acknowledged. Copyright for the image on the cover: © ShutterstockFor any use or reproduction of photos or other material that is not under theENISA copyright, permission must be sought directly from the copyright holders.ISBN: 978-92-9204-468-8, DOI: 10.2824/92307  ii  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  EXECUTIVE SUMMARY Quantum Technology is an emerging field of physics and engineering, which ex-ploits the principles of quantum physics, like quantum entanglement, quantumsuperposition and quantum tunnelling, to provide new paradigms and novel ap-plications. From computing and communications to metrology and imaging, re-search in the last 2 decades has bear tangible and not so tangible results. It is acritical technology that policy makers believe it will generate a multi-billion euromarket in new technological solutions for business and citizens. Since the beginning, the EU has been a key player in this area and with a plannedinvestment of €1 billion over 10 years, the EU Quantum Flagship 1 is mobilisingaround 2000 scientists and industrialists, in a collaborative initiative on an un-precedented scale to position Europe as leader in the industrial landscape. Ofcourse, Europe is not alone; the USA, China, Canada, and Japan have also set thisas a top strategic priority. Quantum Technology and in particular Quantum Computing is seen as a disrup-tive innovation. In the mid ’90s, scientists theorized of quantum computer algo-rithms that, given the existence of a sufficiently powerful quantum computer,can break widely used public-key cryptography schemes, such as RSA and ECCor weaken standardised symmetric encryption algorithms. And while we do notknow when and if such a quantum machine will [ever] become available, researchersand national authorities have been working on solutions. As a result, the US Na-tional Institute of Standards and Technology (NIST) launched in 2017 a, still on-going, process to standardise one or more quantum-resistant public-key crypto-graphic algorithms, soliciting proposals from cryptographers around the world 2. It is important to make a distinction between Post-Quantum Cryptography (PQC)and Quantum Cryptography. PQC is about designing cryptographic solutions thatcan be used by today’s [non-quantum] computers and that we believe are resis-tant to both conventional and quantum cryptanalysis. On the other hand, Quan-tum Cryptography is about cryptographic solutions that take advantage of quan-tum physics to provide certain security services. Quantum Key Distribution (QKD)is a good example of the latter. The EU Cybersecurity Strategy 3 , presented by the European Commission andthe High Representative of the Union for Foreign Affairs and Security in Policyon December 2020, explicitly singles out quantum computing and encryptionas a key technologies (along with AI) for achieving (1) resilience, technologicalsovereignty and leadership, (2) building operational capacity to prevent, deterand respond, and (3) advancing a global and open cyberspace. The Strategy cov-ers the security of essential services such as hospitals, energy grids and railwaysand ever-increasing number of connected objects in our homes, offices and facto-ries, building collective capabilities to respond to major cyberattacks and workingwith partners around the world to ensure international security and stability incyberspace4.  1https://qt.eu/. Last accessed May 2021.2https://csrc.nist.gov/projects/post-quantum-cryptography. Last accessed May 2021.3https://ec.europa.eu/digital-single-market/en/cybersecurity-strategy. Last accessed May2021.4https://ec.europa.eu/digital-single-market/en/cybersecurity. Last accessed May 2021.  iii  https://qt.eu/ https://csrc.nist.gov/projects/post-quantum-cryptography https://ec.europa.eu/digital-single-market/en/cybersecurity-strategy https://ec.europa.eu/digital-single-market/en/cybersecurity  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Given recent developments in the Quantum Computing race among industriesand nation states, it seems prudent for Europe to start considering mitigationstrategies now. The European Union Agency for Cybersecurity is not alone in thisline of thought. Other authorities and EU Institutions have also raised concerns;for instance, the European Data Protection Supervisor has highlighted the dan-gers against data protection 5 , national authorities have been investigating andpreparing; e.g., the German Federal Office for Information Security has been eval-uating Post-Quantum alternatives since before the launch of NIST’s standardisa-tion process 6. This study provides an overview of the current state of play on the standardisa-tion process of Post-Quantum Cryptography (PQC). It introduces a framework toanalyse existing proposals, considering five (5) main families of PQC algorithms;viz. code-based, isogeny-based, hash-based, lattice-based and multivariate-based.It then goes on to describe the NIST Round 3 finalists for encryption and signatureschemes, as well as the alternative candidate schemes. For which, key informationon cryptodesign, implementation considerations, known cryptanalysis efforts, andadvantages & disadvantage is provided. Since the NIST standardisation process is going 7 , the report makes no claim onthe superiority of one proposal against another. In most cases the safest tran-sition strategy involves waiting for national authorities to standardise PQC algo-rithms and provide a transition path. There might be cases though, where thequantum risk in not tolerated, in which case the last chapter offers 2 proposalsthat system owners can implement now in order to protect the confidentiality oftheir data against a quantum capable attacker; namely hybrid implementationsthat use a combination of pre-quantum and post-quantum schemes, and the mix-ing of pre-shared keys into all keys established via public-key cryptography. Thesesolutions come at a cost and as such system designers are well advised to per-form a thorough risk and cost-benefit analysis. The first version of this report was published in February 2021. The second ver-sion was released in May 2021 including a new chapter - Chapter 3 \"Security No-tions and Generic Transforms\". The added material introduce key concepts ofPQC cryptography, in order to make the report more self-contained.  5EDPS, ”TechDispatch #2/2020: Quantum Computing and Cryptography”, https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en. Last accessed May 2021.6https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html. Last accessed May 2021.7tentative deadline for Draft Standards is 2022/2024, as of 2021 https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline. Last accessed May 2021.  iv  https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://edps.europa.eu/data-protection/our-work/publications/techdispatch/techdispatch-22020-quantum-computing-and_en https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html https://www.bsi.bund.de/EN/Topics/Crypto/Cryptography/PostQuantumCryptography/post_quantum_cryptography_node.html https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline https://csrc.nist.gov/projects/post-quantum-cryptography/workshops-and-timeline  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  CONTENTS 1 Introduction 1  2 Families of Post-Quantum Algorithms 32.1 Code-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32.2 Isogeny-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32.3 Hash-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42.4 Lattice-based . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42.5 Multivariate-system based . . . . . . . . . . . . . . . . . . . . . . . . . . . 52.6 The NIST Round 3 Candidates . . . . . . . . . . . . . . . . . . . . . . . . . 5 3 Security Notions and Generic Transforms 73.1 PKE and KEMs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73.1.1 Security Notions, and Transforms . . . . . . . . . . . . . . . . . . 83.1.2 FO-transform . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93.2 Digital Signatures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103.2.1 Identification schemes . . . . . . . . . . . . . . . . . . . . . . . . . 103.2.2 Trapdoor Functions . . . . . . . . . . . . . . . . . . . . . . . . . . 113.2.3 One- and few-time signatures . . . . . . . . . . . . . . . . . . . . 123.3 Quantum adversaries . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133.3.1 The quantum-accessible random oracle model . . . . . . . . . . 13 4 NIST Round 3 Finalists 144.1 Encryption Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144.1.1 Classic McEliece . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144.1.2 Crystals-Kyber . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154.1.3 NTRU . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164.1.4 Saber . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174.2 Signature Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184.2.1 Crystals-Dilithium . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184.2.2 Falcon . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 194.2.3 Rainbow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 5 Alternate Candidates 225.1 Encryption Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 225.2 Signature Schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 6 Quantum Mitigation 256.1 Hybrid schemes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 256.2 Protective measures for pre-quantum cryptography . . . . . . . . . . . 26 7 Conclusions 28  Bibliography 29  v  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  1 INTRODUCTION Post-quantum cryptography is an area of cryptography in which systems are stud-ied under the security assumption that the attacker has a quantum computer.This attack model is interesting because Peter Shor has shown, since 1994, a quan-tum algorithm that breaks RSA, ECC, and finite field discrete logarithms in polyno-mial time. This means that, in this model, all commonly used public-key systemsare no longer secure. Symmetric cryptography is also affected, but significantly less. For systems thatdo not rely on mathematical structures the main effect is that an algorithm due toLov Grover, from 1996, which halves the security level. This means that breakingAES-128 takes 264 quantum operations, while current attacks take 2128 steps. Whilethis is a big change, it can be managed quite easily by doubling the key sizes, e.g.,by deploying AES-256. The operations needed in Grover’s algorithm are inherentlysequential which has led some to doubt that even 264 quantum operations arefeasible, but since the remedy of changing to larger key sizes is very inexpensive itis generally recommended to do so. At this moment, the quantum computers that exist are not large enough to pose athreat against current cryptography. However, rolling out new cryptographic sys-tems takes a lot of time and effort, and it is thus important to have replacementsin place well before large, powerful quantum computers exist. What makes matters worse is that any ciphertext intercepted by an attacker to-day can be decrypted by the attacker as soon as he has access to a large quan-tum computer (Retrospective decryption). Analysis of Advanced Persistent Threats(APT) and Nation State capabilities, along with whistle-blowers’ revelations haveshown that threat actors can and are casually recording all Internet traffic in theirdatacentres and that they select encrypted traffic as interesting and worth storing.This means that any data encrypted using any of the standard public-key systemstoday will need to be considered compromised once a quantum computer existsand there is no way to protect it retroactively, because a copy of the ciphertext isin the hands of the attacker. This means that data that needs to remain confiden-tial after the arrival of quantum computers need to be encrypted with alternativemeans. Signatures can be updated and old keys can be revoked when a signature systemis broken; however, not all development in the area of building quantum com-puters is public and it is fairly likely that the first fully-functional large quantumcomputer will not be publicly announced, but rather sit in the basement of somegovernment agency. Timing the roll-over of signature keys thus remains guess-work. On top of that, one important use case for signatures is operating-systemupgrades. If a post-quantum signature system is not in place by the time an at-tacker has a quantum computer, then the attacker can take control of the operat-ing system through a fake upgrade and prevent any future upgrades from fixingthe problem. In 2017, the United States National Institute for Standards and Technology so-licited submissions for potential public key encryption and signature algorithmsthat would be secure in a world in which quantum computer existed. Althoughnot officially a ‘competition’ as the AES and SHA-3 efforts were, it has been treatedin much the same way as the AES and SHA-3 efforts. Over the last few years, the  1  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  number of submissions has been whittled down, and in July 2020 the Round 3candidates were published. This report is a much extended update to the ECRYPT-CSA “Whitepaper on Post-Quantum Cryptography” [47]. It provides a short summary of the underlying hard-ness assumptions in Section 2 and summarizes the Round 3 candidates in Section4. It also details the so-called ‘Alternate Candidates’ in Section 5. The Round 3 can-didates are algorithms that the National Institute of Standards and Technology(NIST) “considers to be the most promising to fit the majority of use cases and most likely to be ready for standardisation soon after the end of the third round”, whilst theAlternate Candidates are ones which NIST regards as “potential candidates for fu- ture standardisation, most likely after another round of evaluation”. See [95] for moredetails. Finally, this report covers mitigation strategies in Section 6.  2  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  2 FAMILIES OF POST-QUANTUMALGORITHMS There would not be much point speaking about post-quantum systems, if therewere none able to survive attacks by quantum computers. The usual disclaimersapply as with all of cryptography: It might be possible that more powerful attacks(quantum or not) exist that have not yet been found. Apart from that possibility,research over the last 15–20 years has built confidence in the following four areasthat lead to secure systems in a post-quantum world. In this section, we summa-rize the mathematical basis of post-quantum proposals.  2.1 CODE-BASED Code-based cryptography uses the theory of error-correcting codes. For somespecially constructed codes it is possible to correct many errors, while for randomlinear codes this is a difficult problem. Code-based encryption systems go backto a proposal by McEliece from 1978 [86] and are among the most studied post-quantum schemes. Some code-based signature systems have been designed tooffer short signatures at the expense of very large key sizes. Systems based onbinary Goppa codes are generally considered secure; systems based on quasi-cyclic medium-density parity checks have held up to analysis for about a decadeand are gaining confidence. For more background on code-based cryptographysee [75]. All code-based signature systems submitted to NIST were based on new assump-tions and have since been broken. Six code-based encryption systems made itto Round 2, but rank-metric codes (Rollo and RQC), as well as low-density parity-check (LDPC) codes (LEDAkem and LEDAcrypt) had serious cryptanalysis duringRound 2 and were thus deselected by NIST. The remaining code-based candidates are Classic McEliece, BIKE and HQC. ClassicMcEliece was the finalist selected first, for encryption systems; whereas BIKE andHQC were selected as alternate candidates. The latter two are using ’more’ specialcodes in order to reduce the key size of the public key, which is seen as the maindrawback of code-based systems.  2.2 ISOGENY-BASED An isogeny between elliptic curves is a non-constant map that can be writtenas a fraction of polynomials and is compatible with addition on both curves, sothat the image of the sum of two points on the first curve is equal to the sum ofthe images, when computed on the second curve. Isogeny-based cryptographyuses isogenies between elliptic curves over finite fields. The isogeny problem isto find an isogeny between two elliptic curves that are known to be isogenous.The problem was introduced in 2005 in [30] and is thus the most recent basis forany post-quantum candidates. Usage in protocols differs in whether the degree ofthe isogeny is known or secret and whether additional information is known. Formore background on isogeny-based cryptography see [76].  3  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Only one isogeny-based candidate, SIKE, was submitted to the NIST competitionand SIKE is in the third round as an alternate candidate.  2.3 HASH-BASED Hash functions are functions that map strings of arbitrary length to strings of fixedlength. From cryptographic hash-functions we expect that they are one-way (itis hard to find an element in the preimage of a given image) and collision resis-tant (it is hard to find two inputs that map to the same output). Hash functionsare one of the most widely deployed cryptographic tools we got, with applicationsranging from password hashing to file checksums, and are used in virtually anycryptographic construction in practice. While hash functions are used in all practi-cal signature schemes to handle arbitrary length messages, it is known, since thebeginning of public key cryptography, that they can also be used as the sole build-ing block for this. In the simplest version, a hash-based signature on one bit is asfollows. Pick two random strings, hash each of them, and publish the outputs. Re-veal the first preimage to sign 0 and the second to sign 1. This signature scheme,due to Lamport from 1979 [74], is a one-time signature scheme – once the secretis revealed it cannot be used a second time. Starting from this basic idea hash-based signatures on longer strings and on multiple messages have been built. Thedesigns fall into stateless and stateful versions. The former work as normal signa-tures, while for the latter the signer needs to keep track of some information, e.g.,the number of signatures generated using a given key. With SPHINCS+ a statelesshash-based signature scheme is in the third round of the competition as runner-up. For the stateful schemes, NIST already published SP 800-208 [32] standardiz-ing LMS [87] and XMSS [59] two stateful hash-based signature schemes. However,it has to be noted that the stateful character limits the applications these schemesare suitable for. Due to their ubiquity, the security of practical hash functions is well understood.More importantly in the given context, it is known that even quantum comput-ers cannot significantly improve the complexity of generic attacks against crypto-graphic hash functions. A square-root factor speed-up is the (in practice unreach-able) upper limit for improvements.  2.4 LATTICE-BASED On a high level, the descriptions of lattices look much like those of codes – ele-ments are length-n vectors in some space and get error vectors added to them –but where codes typically have entries 0 or 1, lattices work with much larger num-bers in each entry and errors can move away further. The problems underlyingthe cryptographic constructions are to find the original vector given a disturbedone. Lattices offer more parameters than codes, which means that they mightoffer solutions better adapted to a given situation, but also offer more attack sur-face. Lattice-based cryptography goes back to 1996 and the designs of Ajtai [1]and of Hoffstein, Pipher, and Silverman [55]. Both encryption and signature sys-tems exist. The lattice based schemes submitted to NIST mainly make use of the followingtwo basic hard problems; called Module-Learning-with-Errors (Module-LWE) andModule-Learning-with-Rounding (Module-LWR). In these schemes one selects apolynomial ring R = Z[X]/f , where the degree of f is equal to n, and considers itmodulo q (giving Rq). In addition, there is another integer parameter d, called themodule degree. For Ring-LWE and Ring-LWR one sets d = 1, and for standard LWEand LWR one has d = n = 1. The Module-LWE problem is the problem of finding s ∈ Rdq given a number of  4  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  samples of the form (a, a · s + e) where a is chosen uniformly at random in Rdq and e ∈ Rq is chosen to have ‘small’ coefficients. The Module-LWR problem is the problem of finding s ∈ Rdq given a number of sam-ples of the form (a, ba · sep) where a is chosen uniformly at random in Rdq , and thefunction bgep takes the coefficients of the polynomial g and applies the function x 7−→ round− to− int(x · p/q) (mod p), for some fixed integer p. A related hard problem is that of the NTRU problem. NTRU-based cryptosystems,also called Quotient NTRU cryptosystems, assume that the NTRU problem is hardand that the n-sample Ring-LWE problem is hard, while Ring-LWE-based cryp-tosystems assume that the 2n-sample Ring-LWE problem is hard. The NTRU prob-lem and the 2n-sample Ring-LWE problem could be weaker than the n-sampleRing-LWE problem. For large parameter sets (not proposed in practice), the NTRUproblem is proven to be hard, so NTRU-based cryptosystems are based on the n-sample Ring-LWE problem. Another related hard problem is the Ring Short Integer Solution (Ring-SIS) prob-lem which asks if there is a short integer solution x ∈ Zm to the equation A · x = 0 (mod q), for a matrix A ∈ Rn×mq .  2.5 MULTIVARIATE-SYSTEM BASED Multivariate cryptography goes back to the late eighties and is based on the hard-ness of finding a solution to a system of multivariate quadratic equations overfinite fields. It is possible to build signature schemes from systems of equationswith uniformly random coefficients [108], and these are considered to be the mostsecure multivariate systems. However, the more efficient schemes use trapdooredsystems of equations, which appear random to outsiders, but which have somehidden structure that is only known to the person that constructed the system.Thanks to these structures it is possible to find solutions efficiently. These are of-ten called Oil-and-Vinegar schemes. Currently, the multivariate encryption schemes are not very efficient, often withvery large public keys and long decryption times. On the signatures front how-ever, things look a bit better. Out of the nineteen signature schemes submittedto the NIST Post-Quantum Cryptography (PQC) project, seven were multivariatesignature schemes. Two of these seven schemes proceeded to the third round ofthe NIST PQC process. The Rainbow scheme [41] was selected as one of the threefinalists, and the GeMMS scheme [29] was selected as an “alternate candidate”.These schemes enjoy very short signature sizes (as small as 33 Bytes), but sufferfrom rather large public keys (160 KB or more).  2.6 THE NIST ROUND 3 CANDIDATES In the table 2.1, we describe the NIST Round 3 candidates (both the finalists andthe alternate candidates) and splitting them into the two groups of encryptionand signature scheme, whilst also detailing the hard problems on which they arebased.  5  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Table 2.1: NIST Round 3 candidates  Scheme Enc/Sig Family Hard Problem  Round 3 Finalists  Classic McEliece Enc Code-Based Decoding random binary Goppa codes Crytals-Kyber Enc Lattice-Based Cyclotomic Module-LWE NTRU Enc Lattice-Based Cyclotomic NTRU Problem Saber Enc Lattice-Based Cyclotomic Module-LWR Crystals-Dilithium Sig Lattice-Based Cyclotomic Module-LWE and Module-SIS Falcon Sig Lattice-Based Cyclotomic Ring-SIS Rainbow Sig Multivariate-Based Oil-and-Vinegar Trapdoor  Round 3 Alternate Candidates  BIKE Enc Code-Based Decoding quasi-cyclic codes HQC Enc Code-Based Coding variant of Ring-LWE Frodo-KEM Enc Lattice-Based LWE NTRU-Prime Enc Lattice-Based Non-cyclotomic NTRU Problem or Ring-LWE SIKE Enc Isogeny-Based Isogeny problem with extra points GeMSS Sig Multivariate-Based ‘Big-Field’ trapdoor Picnic Sig Symmetric Crypto Preimage resistance of a block cipher SPHINCS+ Sig Hash-Based Preimage resistance of a hash function  6  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3 SECURITY NOTIONS AND GENERICTRANSFORMS In this chapter we provide some general background on the objects considered inthe NIST competition, the used security notions, and the most common ways toconstruct them. We start with a focus on PKE and KEMs. Afterwards, we move onto signatures. We conclude with a discussion of different security models consid-ered in proofs. Naturally, our exposition remains on a rather informal level. Fora more detailed, formal definition of the discussed primitives and notions see forexample [70].  3.1 PKE AND KEMS The NIST competition was initiated to find replacements for the public key prim-itives widely used in practice. With regard to primitives that provide authenticitythis clearly means digital signature schemes. For primitives that provide secrecy,the answer is not that clear. The discussed options were as follows: Key exchange (KEX): A protocol run between two parties. At the end of an execu-tion, a key exchange protocol outputs the same session key at both parties(at least with high probability). Public Key Encryption (PKE): A public key encryption scheme consists of threealgorithms. The key generation algorithm generates a key pair consisting ofa public and a private key. The encryption algorithm takes a message anda public key to compute a ciphertext. The decryption algorithm takes a ci-phertext and a private key to compute a plaintext. We require that (at leastwith high probability) the decryption of an encryption returns the originalmessage if the correct private key is used. Key Encapsulation Mechanism (KEM): A key encapsulation mechanism consistsof three algorithms, similar to PKE. Like for PKE, the key generation algo-rithm generates a key pair consisting of a public and a private key. In con-trast to PKE, the encapsulation algorithm takes a public key to compute asession key and a ciphertext. The decapsulation algorithm takes a ciphertextand a private key to compute a session key. We require that (at least withhigh probability) the decapsulation of a ciphertext returns the same sessionkey as the encapsulation that generated it if the correct private key is used. These primitives are linked insofar as we know how to build KEMs from PKE andwe know how to construct KEX from KEMs (and thereby also from PKE). After along discussion process NIST decided that they will standardize KEMs. KEX was de-cided against, as all the available candidate KEX required interaction and therebyare less general than PKE and KEMs. KEMs were chosen over PKE as in most ap-plications, the main purpose of PKE is to encrypt session keys. A KEM does es-sentially that, with the difference that the scheme has control over choosing thesession key. This small difference makes it easier to construct secure schemes.  7  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.1.1 Security Notions, and Transforms The general approach to construct public key cryptography is as follows. We startwith a mathematically hard problem, like Learning-with-Errors (LWE). From this weconstruct a very basic primitive that usually fulfills a weak security notion, for ex-ample a weakly secure PKE scheme. We then “transform” this basic primitive intothe primitive we are actually interested in, in this example a strongly-secure KEM.Security is then argued cryptanalyzing the mathematical problem and providingreductionist proofs for the constructions and transforms. These proofs relate thecomplexity of attacking one primitive to the complexity of attacking another prim-itive, or solving the mathematical problem. In the running example, we would re-late the complexity of attacking the KEM to the complexity of attacking the PKEscheme, which we in turn would relate to the complexity of solving the mathemat-ical problem. If these relations are tight, establishing that solving the mathemati-cal problem is hard, implies that attacking the KEM is hard. The mathematical problems are what distinguishes the different areas of post-quantum cryptography listed in the previous section. The intermediate primitives,security notions, and transforms are the same and will be discussed below. We start with the notions and transforms used in the construction of KEMs. Thesecurity notion that we expect from a KEM is IND-CCA security, often also calledactive security as it models active attackers. The way to get there is via the in-termediate step of constructing a weakly secure PKE scheme and then apply-ing a generic transform. All third round candidates use a variant of the so-calledFujisaki-Okamoto (FO) [51] transform for this (for the variants see e.g. [56]). Be-fore we outline the transform, we briefly recall the used security notions. While allthree notions can be given for PKE and KEMs, we give the first two for PKE and thelast for KEMs as this is how we use them later. IND-CPA: Ciphertext-indistinguishability under chosen plaintext attacks is whatis sometimes called passive security. It describes a setup in which an adver-sary can encrypt messages themselves (for PKE this only means the adver-sary knows the public key). The security notion says that given a ciphertextof an unknown message, any information about the corresponding plaintext(except its length) should be hidden from the adversary. This is modelledby allowing the adversary to choose two messages. At random one of thesetwo messages gets encrypted and the ciphertext is given to the adversary.The adversary then has to decide which message was encrypted. IND-CPAsecurity is only achievable by randomized PKE where the encryption algo-rithm is randomized (i.e., the same message is never encrypted to the sameciphertext). OW-CPA: One-wayness under chosen plaintext attacks describes the same setupin which an adversary can encrypt messages themselves. However, securityin this case only says that given the encryption of a random message (notchosen by the adversary) the adversary cannot recover the original mes-sage. This is clearly a weaker security notion than IND-CPA. However, thisnotion is achievable by deterministic PKE (dPKE) where the encryption of amessage under a fixed public key always results in the same ciphertext. IND-CCA: Key-indistinguishability under chosen ciphertext attacks is what is some-times called active security. It describes a setup in which an adversary cannot only generate encapsulations themselves but also has a way to learn thedecapsulation of ciphertexts of their choosing. The security is then definedas follows. Given a ciphertext, any information about the key it encapsulates(except that it is a session key of a certain length) should be hidden fromthe adversary. This is modelled by giving the adversary a ciphertext and asession key. The session key is either the session key returned by the encap-sulation when the ciphertext was generated or a randomly sampled session  8  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key that is independent of the ciphertext. The adversary then has to decidewhich was the case. Note that IND-CCA security is necessary whenever a keypair is used for more thana single encapsulation. The reason is that the adversary might be able to send avictim a manipulated ciphertext. While it is usually not the case that the victim willleak the decapsulated key afterwards, the adversary might still gain informationabout this key from the behavior of the victim after decapsulation (e.g., in caseof TLS if the victim continues to establish a session or if it aborts and how longthat takes). This is not covered by IND-CPA security and indeed, we know attacksagainst several schemes that were submitted to the NIST competition based onfinding valid ciphertexts for which decapsulation fails. 3.1.2 FO-transform We now have everything to outline the FO-transform. Most proposals in the NISTcompetition start off with constructing an IND-CPA secure PKE scheme. The math-ematical problem used and the way this is done is exactly where the proposalsdiffer. Step 1: IND-CPA PKE to OW-CPA dPKE. The first step of the FO-transform is thento de-randomize the PKE scheme. For this we note that a randomized algorithm issimply a deterministic algorithm that additionally takes randomness in form of abit string as input. De-randomization is done by replacing the randomness inputby the hash of the message. It can be shown that the result is a OW-CPA securedPKE scheme. Step 1: OW-CPA dPKE to IND-CCA KEM. The reason to de-randomize the PKEscheme is that this allows to add a re-encryption check in the decryption routine.I.e., given a ciphertext (and the right private key) the receiver can decrypt the ci-phertext, then encrypt the result again and see if the same ciphertext is obtained.It can be shown that this has as a consequence that any ciphertext that is not cho-sen by encrypting a message (and without the knowledge of the private key) willbe rejected because it fails the re-encryption check. The dPKE scheme is thentransformed into a KEM as follows. Key generation remains the same. The en-capsulation algorithm chooses a random message to be encrypted with the dPKEscheme. The ciphertext under the dPKE scheme is the KEM ciphertext. The ses-sion key is the hash of the concatenation of the message and ciphertext. The de-capsulation algorithm decrypts the ciphertext and runs the re-encryption check. Ifthe check fails, the algorithm returns a random session key. If the check succeeds,the algorithm returns the hash of the decrypted message and the ciphertext assession key. Variations. There exist several variations. Some proposals directly construct anOW-CPA dPKE scheme and skip step 1. Beyond that, step 2 is slightly modified insome proposals. Some schemes allow to verify a ciphertext without doing a fullre-encryption which can improve speed. Some proposals include the public key(or a hash thereof) into the hash function call that derives the session key. Thisallows to increase the cost of multi-user attacks where an adversary attacks mul-tiple users at once. Another variation is explicit rejection where the decapsulationaborts with a clear failure code instead of terminating normally and returning arandom key. This option is not widely used as it complicates the security proofs.Finally, some schemes add a so-called key confirmation hash. This is another hashof the message that gets encrypted (and possibly the PKE ciphertext) under a dif-ferent hash function than the one used to compute the session key. This addi-tional hash is then sent as part of the KEM ciphertext. This allows to replace there-encryption by a hash function call at the cost of increased KEM ciphertext size.  9  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.2 DIGITAL SIGNATURES As explained above, the situation for signatures is a bit more straight-forwardthan that for KEMs / PKE. There were no alternative notions to consider. A digitalsignature scheme is defined as follows. Digital Signature Scheme (DSS): A DSS consists of three algorithms. The keygeneration algorithm generates a key pair consisting of a public and a pri-vate key. The signature algorithm takes a message and a private key andreturns a signature. The verification algorithm takes a message, a signature,and a public key and returns true or false. For correctness we expect that acorrectly generated signature verifies under the right public key (i.e., verifica-tion returns true). The common notion of security for DSSs is the following notion which may be con-sidered security against active attackers. EUF-CMA: Existential Unforgeability under Chosen Message Attacks states thatit is hard for an adversary to forge a signature on any message that wasnot signed by the holder of the secret key. This is modeled by a game inwhich the adversary is allowed to ask a signer for signatures on arbitrarymessages. The adversaries goal is come up with a valid signature on a freshmessage, i.e., a message that the signer was not asked to sign. As for KEMs, we do not construct EUF-CMA-secure DSSs from scratch. Instead, weconstruct an intermediate building block and then use a generic transform. Whilefor KEMs there is essentially one transform used by all proposals, this is differentfor DSSs. The different proposals can be split into at least three approaches1. Tonot turn this section into a book, we stick to outlines and simplify things whereappropriate. We would like to refer the interested reader to the literature for theprecise definitions used for the different NIST proposals. 3.2.1 Identification schemes The most common approach in the competition is to construct an identificationscheme as intermediate building block. This approach is know from (EC)DSA forexample. Identification Scheme (IDS): An identification scheme is a protocol betweena prover and verifier. An IDS implicitly contains a key generation step2 inwhich the prover generates a keypair consisting of a public and a privatekey. In the IDS protocol a prover then tries to convince a verifier that it knowsthe private key to a given public key. The relevant IDS protocols in this con-text start with the prover sending a commitment message followed by achallenge (possibly a sequence of challenges) by the verifier that is then an-swered by the prover. In the end, the verfier takes the public key and the fulltranscript of exchanged messages and runs a verification algorithm. The security notions required from an IDS such that we can transform it into anEUF-CMA DSS are twofold.  1Considering more details, further distinction is possible but that goes beyond thescope of this report.2IDS are often described with respect to a witness relation due to historical reasons. Inthat case the instance generation of sampling a statement with a witness can be consid-ered the key generation.  10  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  HVZK: Honest-Verifier Zero-Knowledge says that a verifier that correctly followsthe protocol cannot learn anything about the used secret key. This is mod-elled by requesting that we can build an algorithm that without knowledgeof the secret key can generate valid transcripts of protocol runs that are in-distinguishable from real transcripts. Soundness: Soundness states that a verifier catches a prover that does not knowthe secret key with at least constant probability. The precise definition ofthis property depends on the kind of IDS that is used. For the easiest caseof a single commit message followed by one binary challenge and responsethis is defined as the ability to compute the secret key from two protocoltranscripts that contain the same commit message but a different challenge.This demonstrates that an adversary that can respond to both challengesfor a given commitment must know the secret key. Note that the probability to catch a cheating prover can be amplified to be arbi-trarily close to one by running the scheme multiple times. FS-transform. The common way to turn an IDS into a signature scheme is theFiat-Shamir (FS) transform [49]. It uses a cryptographic hash function to replacethe verifier in computing the challenges3. More precisely, the challenges are com-puted as hash of the message to be signed, the public key, and all previous pro-tocol messages. The protocol transcript is then sent as signature. The verificationalgorithm consists of the final verification algorithm executed by the verifier in theIDS protocol and verifying that the challenges are correctly computed from themessage, public key, and transcript data. For this to be secure, the IDS must havesoundness that catches a cheating prover with overwhelming probability. Hence,the transformation has to be applied to the IDS obtained by running the originalIDS a sufficient number of times. 3.2.2 Trapdoor Functions The second approach, which was also used for RSA signatures, is the use of a trap-door function. While RSA provides us with a trapdoor permutation, in the post-quantum setting the notion of trapdoor functions was generalized as follows [52]: (Preimage-Sampleable) Trapdoor Function (TDF): A trapdoor function is a tripleof algorithms. The key generation algorithm generates a key pair consistingof a public and a private key. The evaluation algorithm takes the public key(which in this case works as a function description) and a domain elementand outputs an image of that element. The preimage sampling algorithmtakes the private key and an element in the image, and computes a match-ing preimage, i.e., a domain element that is mapped to this image under thefunction described by the public key. The basic security notion that a TDF has to fulfill to be suitable for the use in a sig-nature scheme is one-wayness. In addition, the preimages generated using theprivate key must not leak information about the key. One-wayness with private key: A TDF is one-way if given a random elementfrom its image, it is hard to find a matching preimage i.e., a domain elementthat the evaluation algorithm maps to this image given the public key. Indistinguishable Preimage-Sampling: A TDF has indistinguishable preimage-sampling if the distribution generated by the preimage sampling algorithm  3For this to work, the IDS has to be “public coin”, i.e., the challenges must be chosenusing the uniform distribution over some set.  11  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  using the secret key is indistinguishable from an (efficiently sampleable) dis-tribution on the preimage space that is independent of the private key4. For RSA we are in the special case that we even have a trapdoor permutation. Inthat case the preimage sampling is always indistinguishable as there is only onepreimage per image. FDH-transform. The transformation that is used for this case is called Full-DomainHash (FDH) and is the same as for RSA signatures 5 . The transform uses a crypto-graphic hash function that maps arbitrary-length messages to the domain of theTDF. For security it is important that the whole domain is in the image of the hashfunction (hence the name). To generate a signature, the signer hashes the mes-sage, treats the hash as an image of the TDF, and uses the preimage samplingalgorithm to sample a preimage. The preimage becomes the signature. 3.2.3 One- and few-time signatures The last approach is again following the generic idea of constructing a weakerprimitive and then strengthening the security via the use of a generic transformor construction. In this case, the weaker security is defined in terms of the numberof signatures that can safely be created using a key pair: One-time Signature Scheme (OTS): A one-time signature scheme [74] is a digitalsignature scheme where a key pair may only be used to sign one message.The corresponding security notion is One-Time EUF-CMA. In this variant ofEUF-CMA the adversary is only allowed to ask the signer for a signature onone message of its choice before coming up with a forgery. Few-time Signature Scheme (FTS): A few-time signature scheme is a digital sig-nature scheme where a key pair may only be used to sign a few messages(the precise number usually depends on the used parameters). The corre-sponding security notion is q-Time EUF-CMA. In this variant of EUF-CMA theadversary is only allowed to ask the signer for signatures on q messages ofits choice before coming up with a forgery. Actually, every signature scheme is a few-time signature scheme. However, for afull-fledged signature scheme NIST for example requires the number of signatures q to be 264. For an FTS the number of signatures is usually clearly below 100. Merkle Signature Scheme (MSS). The generic transform to turn a one-time sig-nature scheme into a stateful signature scheme is using Merkle trees [90]. Theidea is to use a huge number of key pairs and authenticate the public keys ofthese key pairs using a binary hash tree called a Merkle tree. The limiting propertyof the resulting signature scheme is that it is stateful. The signer has to rememberwhich OTS key pairs it already used, in order not to use one twice. SPHINCS. The SPHINCS construction [15] turns an MSS into a stateless, i.e., gen-eral purpose, signature scheme via the use of an FTS. The fundamental idea is thatan MSS is used to authenticate FTS public keys. Every OTS key pair (which are theleaves of the Merkle tree) is used to sign an FTS public key. For every message arandom FTS public key is picked to sign. The SPHINCS construction is described ina bit more detail on the page for SPHINCS+ in Chapter 5.  4Mathematically, it is required that there exists an efficiently sampleable distribution Don the domain such that the distribution of using the preimage sampling algorithm with asecret key for some image y is indistinguishable from the distribution obtained by samplingfrom D and accepting if the resulting value is a preimage of y.5In practice we use the probabilistic version PFDH, which is used in RSA-PSS, which ran-domizes the hash in a certain way.  12  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  3.3 QUANTUM ADVERSARIES In the post-quantum setting we are concerned with a world where an adversaryhas a quantum computer at its disposition while honest users still work on con-ventional computers. For the security notions above, this means that we have toassume that the adversary is a quantum algorithm. While this of course has animpact on the complexity of solving the mathematical problems used, many secu-rity proofs remain unaffected by this change. However, there are two notable ex-ceptions. First, quantum algorithms are inherently probabilistic. This means thatarguments that use techniques like rewinding, which try to run an algorithm withthe same random coins twice, do not trivially translate to the post-quantum set-ting. The second exception is the random oracle model discussed in the followingchapter. 3.3.1 The quantum-accessible random oracle model The security proofs that are usually given for practical systems (e.g., RSA-PSS, RSA-OAEP, ECDSA, etc.) belong to a heuristic proof model called the random oraclemodel (ROM). In this model, the cryptographic hash function used is modeled asan ideal random function for the security proof. This random function is calleda random oracle. It is modeled as an oracle that every participant in the systemhas access to and that behaves like a random function; specifically its answers areconsistent, and answers to new queries are uniformly distributed. While there ex-ist artificial counterexamples of schemes that are secure in the ROM, but cannotbe secure for any cryptographic hash function, the ROM has proven to be a reli-able tool for the analysis of real world systems. In the post-quantum setting we consider adversaries to have access to a quantumcomputer. As hash functions are public functions, this means that an adversarycan run these on its quantum computer and, consequently, can query these onsuperpositions of inputs or even on entangled quantum states. This ability can-not be reflected in the conventional ROM. Hence, the QROM (quantum-accessibleROM) was proposed [22]. In the QROM, adversaries are given exactly this addi-tional ability. By now we know separations between the ROM and the QROM, i.e.,cryptographic schemes that can be proven secure in the ROM but that are inher-ently insecure in the QROM. This demonstrates that a security proof in the ROM isonly of limited value when aiming for post-quantum security. For most of the transforms above, proofs are only known in the ROM and or QROM(cf., [19, 43, 64, 107]) but not in the standard model (i.e., without making idealizing,heuristic assumptions).  13  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  4 NIST ROUND 3 FINALISTS 4.1 ENCRYPTION SCHEMES  4.1.1 Classic McEliece  Design:  Classic McEliece [3] is a code-based scheme using binary Goppa codes, the samecodes that McEliece originally proposed when he introduced code-based cryptog-raphy [86] in 1978. Code-based cryptography is the oldest public-key encryptionsystem that is expected to resist attacks by quantum computers and is one of theoldest public-key encryption systems overall. During Round 2 the scheme mergedwith NTS-KEM, which was using the same codes. The assumption underlying One-Wayness against Chosen-Plaintext Attacks (OW-CPA) PKE security is that decoding a random binary Goppa code is hard – McElieceencodes messages into code words and encrypts them by adding random errors.The Classic McEliece scheme uses the dual of McEliece’s scheme, as proposed byNiederreiter [93], and tightly turns this OW-CPA PKE into an IND-CCA2 KEM using avariant of the FO-transform (cf. Sect. 3.1.2), specifically Theorem 8 in Dent [40]. Aproof in the QROM (Quantum Random-Oracle Model) is given in [19] which provesa bound ε on the probability of a QROM IND-CCA2 attack, assuming a bound onthe scale of ε2 on the probability of an OW-CPA attack against the underlying de-terministic PKE. Implementation:  A full KEM was specified and implemented in [13] with improvements in [31].The software is available on the submitters’ page, see [3], and includes referenceand optimized implementation. All implementations of Classic McEliece are con-stant time. An implementation for the ARM Cortex-M4 is finished, but not yet pub-licly available. FPGA implementations are covered in [115] and [116] and are alsofreely available and constant time. Classic McEliece has been integrated into the network protocols McTiny [17] andPost-quantum WireGuard [61]. Cryptanalysis:  There are two main avenues of attack against code-based cryptography: information-set decoding (ISD) and structural attacks. ISD goes back to a general decoding technique from 1962 due to Prange [102].There is a long history of research on this problem, especially for cryptographicapplications, with the most recent papers being [25, 26, 71]. These attacks showtheir biggest effect for high-rate codes while the binary Goppa codes used in Clas-sic McEliece are only marginally affected. More precisely, achieving 2λ securityagainst Prange’s attack requires keys of size (0.741186 . . . + o(1))λ2(log2 λ)  2 bits as λ → ∞. To achieve the same level of security against all the later attacks requireskeys of size (0.741186 . . .+ o(1))λ2(log2 λ)  2 bits as λ→∞, i.e., the improvements af-  14  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  fect only the o(1) term. All these attacks involve huge searches, like attacking AES.The quantum attacks (Grover etc.) leave at least half of the bits of security. Structural attacks attempt to find a good decoding algorithm for the code in thepublic key by identifying structures of the private key in the public one. Such at-tacks have been successful against code-based systems based on other codes,e.g., identifying Reed-Solomon codes as used by Niederreiter [93] or Gabidulincodes used in early rank-metric codes. However, for binary Goppa codes the onlyattacks known are distinguishing attacks and even those are successful only forvery high-rate codes, larger than proposed for any cryptosystems [48]. Advantages and Disadvantages:  The advantages for Classic McEliece are that it has a very long history of analysiswith no significant impact on the security and that the ciphertext size is small. Theciphertexts are the smallest of all Round-2 candidates and thus also of all Round-3candidates. No other public-key encryption system can look back at more than 40years of cryptanalysis – quantum or not – without taking a hit. The disadvantage is the size of the public key, which for the highest security leveltakes more than 1MB. This poses a problem for applications that request freshpublic keys for each execution; the McTiny protocol [17] shows how to make thiswork nevertheless without causing denial-of-service attack on the servers. Post-quantum WireGuard [61] and PGP are applications where the system can be usedas a long-term identity key. 4.1.2 Crystals-Kyber  Design:  Kyber is an Indistinguishability under Chosen Plaintext Attack (IND-CCA) secureKEM originally presented in [23]. It has seen some significant changes since thenand the latest description can be found in [111]. The security of Kyber can beprovably reduced to the Module-Learning-with-Errors problem (Module-LWE),but the parameter set for the lowest security level bases its security estimate ona combination of Module Learning with Errors and Module Learning with Round-ing (MLWR). Kyber is based on LPR [81] encryption, but uses vectors of polyno-mials as elements, performs additional compression on the ciphertext and is de-signed to accommodate fast multiplications using the Number Theoretic Trans-form (NTT). IND-CCA security is obtained through a variant of the FO transforma-tion (cf. Sect. 3.1.2). The public key sizes of Kyber are 800, 1184 and 1568 bytes forsecurity levels 1, 3 and 5 respectively, and the ciphertext sizes are 768, 1088, 1568bytes. Implementation:  After an initial implementation on general purpose processors in [23], Kyber hasbeen implemented on Cortex-M4 [27] and a software hardware codesign hasbeen described in [36]. An implementation using an RSA-coprocessor was givenin [5]. Moreover, implementations of Kyber can reuse existing designs for Ring-LWE (aka RLWE) encryption schemes that support NTT multiplication, for exampleimplementations of NewHope or early Ring-LWE schemes. No side-channel secureimplementation is available for Kyber, but an idea of the challenges and the costcan be gained from a masked Ring-LWE implementation as presented in [96]. Cryptanalysis:  The security of Kyber is provably reducible to the security of the underlying Module-LWE problem (aka Mod-LWE). As there is currently no efficient way to exploit the  15  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  modular structure security is typically estimated based on the corresponding LWEproblem. Such attack typically transforms the LWE problem into a shortest vec-tor lattice problem that can then be solved using lattice reduction techniques. Anindependent security estimate of Kyber was given in [4]. Kyber has a very small probability of decryption failures in which valid cipher-texts fail to decrypt properly. This paves the road for decryption failure attacksas proposed in [21, 37, 39]. However, when limiting the number of queries to 264as recommended in the NIST call for proposals [94], these attacks are less efficientthan direct lattice attacks. A practical fault injection attack on Kyber was presentedin [105]. Advantages and Disadvantages:  Kyber is designed with NTT multiplications in mind, which allows for efficient im-plementations of Kyber on a variety of platforms. It is notable that some elementsare generated and compressed in the NTT domain, which makes it impractical touse other multiplication algorithms for Kyber. Moreover, polynomial multiplica-tions are in the same ring for all security levels, which makes it easy to scale be-tween the security levels. Overall, the support for NTT multiplication makes Kyberefficient to implement. The security of Kyber enjoys strong reductions to underly-ing hard lattice problems. 4.1.3 NTRU  Design:  Nth Degree Truncated Polynomial Ring Units (NTRU) is one of the oldest encryp-tion schemes that makes use of structured lattices. It was developed by Hoffstein,Pipher, and Silverman in 1998 [55]. The round three submission to NIST [118] is amerger of the initial NTRU submission [117] and the NTRU-HRSS submission [110]implemented after the first round due to large overlaps in the design. The sub-mission specifies a perfectly correct, deterministic public key encryption scheme(dPKE). This dPKE is transformed into a CCA2-secure KEM using a variant of theFO-transform (cf. Sect. 3.1.2), specifically the U 6⊥m transform of [56]. For this trans-formation, a tight proof for CCA2-security in the ROM is given in [56]. A tight proofin the quantum-accessible ROM is known, but makes a less standard assump-tion [107]. Implementation:  The NTRU-HRSS part of the submission was based on [60] which already con-tained a high-speed constant-time implementation. NTRU-HRSS was among thefastest first round submissions. NTRU is also known for its speed on constraineddevices; implementations go back to at least 2001 [8], but also nowadays NTRU isone of the schemes with the fastest encapsulation and decapsulation routines inthe pqm4 project [67]. Also, implementation security of NTRU is well advanced. As mentioned above,for commodity hardware, the optimized implementations provided are constanttime [60]. On constrained devices, up-to-date masked implementations are known [109]that protect against side channel attacks like correlation power analysis attacks [78]. NTRU was chosen by Cloudflare and Google for their second PQC experiment [77]and used in connections from users running Chrome Canary to Google and Cloud-flare.  16  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Cryptanalysis:  The security of NTRU is supported by a long history of cryptanalysis (see e.g., [33,54, 58, 83, 84]). Up to parameter changes, NTRU successfully survived the last 20+years of cryptanalysis. The efforts of the last years suggest that the complexity ofthe best attacks against NTRU is determined by the complexity of lattice reduc-tion. The complexity of the best algorithms for lattice reduction in turn dependson the complexity of solving the shortest vector problem (SVP). See the specifica-tion for an extensive elaboration. An independent evaluation can be found in [4]. Advantages and Disadvantages:  NTRU has several advantages. As mentioned above, it is perfectly correct and theunderlying assumption is well studied. It is flexible, meaning that the underlyingdPKE can be parameterized for a variety of use cases with different size, security,and efficiency requirements. It is simple: The dPKE has only two parameters, nand q, and can be described entirely in terms of simple integer polynomial arith-metic. It is fast: ntruhrss701 was among the fastest submissions in the first round.It is compact: The ntruhps2048677 parameter set achieves NIST level L1 securitywith a wide security margin, level L3 security under a reasonable assumption, andhas public keys and ciphertexts of only 930 bytes. It is guaranteed patent free asthe relevant patents have expired. On the downside, NTRU is unlikely to be the fastest, most compact, or most se-cure submission. However, it is competitive on products of these measures. Asfor all other lattice-based schemes, the choice of optimal parameters for NTRU iscurrently limited by a poor understanding of the non-asymptotic behaviour of newalgorithms for SVP. Finally, there is structure in NTRU that is not strictly necessary,and this may also be seen as a limitation. 4.1.4 Saber  Design:  Saber is a family of cryptographic primitives that includes an IND-CPA secure en-cryption scheme and an IND-CCA secure KEM, with an initial design as describedin [38] and most recent update in [10]. Its security can be reduced to the securityof the Module Learning with Rounding (MLWR). As most LWE/LWR based schemes,Saber follows the general structure of LPR [81] encryption. The main differencesare power-of-two moduli, the use of vectors of polynomials and the adaptationof learning with rounding. To achieve IND-CCA security Saber relies on a post-quantum variant of the FO-transformatin (cf. Sect. 3.1.2). Saber boasts public keysizes of 672, 992 and 1312 bytes; and ciphertext sizes of 736, 1088, 1472 bytes forsecurity level 1, 3 and 5 respectively. Implementation:  An initial implementation of Saber on high end processors was presented in [38].Implementation efforts have since then extended to Cortex-M4 and Cortex-M0in [66, 68, 89, 98], ESP32 in [114], specific coprocessors in [82, 106], large integercoprocessors in [24], a software hardware codesign in [36] and a hardware imple-mentation in [119]. An implementation that batches multiple decapsulations toexploit vector instructions has been proposed in [112]. A first order masked imple-mentation of Saber was given in [11]. Saber has been integrated into the network protocol Post-quantum WireGuard [61]for exchanging ephemeral keys.  17  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Cryptanalysis:  The most straightforward attack on Saber is to break the underlying Mod-LWRproblem. Such an attack rewrites the Mod-LWR problem as a shortest vector lat-tice problem and uses lattice reduction algorithms to retrieve the secret key. Thesecurity of this problem is typically estimated as the security of the analogous LWEproblem as there is at the moment no efficient attack that exploits the module orrounding structure. An initial security estimate of Saber was given in [4] and wasfurther improved in [10] using the estimation tools of [2,35]. As Saber is subject to decryption failures with a small probability, there is the pos-sibility of decryption failure attacks. Attacks on the IND-CCA secured KEM werepresented in [21, 37, 39] but when limiting the number of queries that can be per-formed to 264 as proposed in the NIST call for proposals [94], these attacks do notoutperform standard lattice attacks. Advantages and Disadvantages:  The choice for power-of-two moduli avoids the need for explicit modular reduc-tions or rejection sampling that are typically present in prime moduli based schemes.The latter also reduces the number of hash function calls. The drawback of thischoice is that the NTT is not naturally supported. However, other multiplicationalgorithms (e.g., Karatsuba, Toom-Cook, schoolbook, Kronecker) have been shownto be efficient on a range of platforms and the design of Saber does not restrictimplementors to a specific multiplication algorithm. Moreover, in multiplicationsof Saber, one element will always have small coefficients, which could be exploitedfor optimizing implementations. Being based on learning with rounding, Saber introduced an error by roundingcoefficients. This naturally reduces the communication bandwidth and avoids thegeneration of the error term. The modular structure of Saber implies that multipli-cations of polynomials are always in the same ring, and as such the multiplicationalgorithm of these polynomials is the same for all security levels. Saber is efficient to mask, due to the power-of-two moduli and the absence of theerror term. The first order masked Saber implementation of [11] has an overheadfactor 2.5x, which can be compared to an overhead of factor 5.7x previously re-ported for prime-moduli schemes [96]. Saber also excels at anonymous commu-nication as it is naturally constant time, even over different public keys, due tothe avoidance of rejection sampling. Moreover, the power-of-two moduli ensurescommunication consists of a uniformly random bitstring without apparent struc-ture.  4.2 SIGNATURE SCHEMES  4.2.1 Crystals-Dilithium  Design:  Dilithium is a signature scheme introduced in [45] and with latest version de-scribed in [80]. It follows the concept of designing signature schemes from iden-tification schemes (cf. Sect. 3.2.1), using Fiat-Shamir with aborts.Its security can bereduced to the security of the Module-Learning With Errors (MLWE) and ModuleShort Integer Solution (MSIS) problems. It is designed to allow fast multiplicationsusing the NTT transformation and avoids generation of randomness from a dis-crete Gaussian distribution, instead opting for sampling from a uniform distribu-tion.  18  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Implementation:  The Dilithium team provided an implementation in their initial work [45]. Furtherwork has focused on improving the speed of the signing procedure [104]. An im-plementation of Dilithium on Cortex-M4 was presented in [53] and a masked im-plementation was introduced in [91]. Cryptanalysis:  The security of Dilithium is based on that of the underlying MLWE and MSIS prob-lems. Currently there is no efficient attack exploiting the module structure andas such the security of the equivalent LWE and SIS problems is considered. An in-dependent estimation effort [4] confirmed Dilithium’s security estimate. A faultattack on Dilithium was presented in [28]. Advantages and Disadvantages:  In contrast to other signature proposals, Dilitihium samples from a uniform dis-tribution avoiding the complex and inefficient sampling from a discrete Gaussiandistribution. The modular structure of Dilithium ensures that polynomial multi-plication is always performed in the same ring regardless of security level, whichmakes it easy to switch between these levels. Multiplication can be performed ef-ficiently due to its NTT friendly parameters. Applying a trick to compress the pub-lic key with a factor 2, Dilithium has the smallest public key plus signature size oflattice-based schemes that use uniform sampling. 4.2.2 Falcon  Design:  Falcon [103] is a signature scheme whose design is based on the Gentry–Peikert–Vaikuntanathan (GPV) blueprint [52] for lattice-based signatures using (preimage-sampleable) trapdoor functions (cf. Sect 3.2.2). It instantiates this constructionwith NTRU lattices and an efficient Gaussian sampler [46,57], which yields a schemethat is provably secure under the assumption that SIS is hard in the particular lat-tices used. Falcon has been designed so that all of the arithmetic operations canbe computed using efficient Fourier-transform techniques. Implementation:  An efficient constant-time implementation of Falcon is given by [101], using thesampler of [57]. It does not require (but can use) a floating-point unit and runsefficiently on various kinds of microprocessors including Intel x86 and ARM cores.See [97] for a more optimized implementation specific to the latter. The constant-time Gaussian sampler of [69] can be used in Falcon. Cryptanalysis:  The mathematical security of Falcon relies on the hardness of the SIS problemover NTRU rings, which benefits from the long history of cryptanalysis for theNTRU cryptosystem (cf. Section 4.1.3). The best known attacks are generic latticetechniques: there is no known way to effectively exploit the additional ring struc-ture present in NTRU lattices. To estimate the security against lattice-reductionalgorithms, Falcon employs the “Core-SVP” method which was also used by manyother lattice-based NIST submissions. A fault attack on Falcon is demonstrated (and countermeasures proposed) in [85],and the side-channel leakage of Falcon and similar schemes was analysed in [50].  19  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  Advantages and Disadvantages:  In a nutshell, Falcon is a very compact (smallest combined size of public key andsignature among all NIST candidates) and efficient post-quantum signature schemewhose security reduces to well-established assumptions. The chosen ring struc-ture and error distribution allow for efficient FFT-based implementations, whichpartially cancels the adverse effects of using a Gaussian error distribution andleads to good performance in practice. Indeed, perhaps the biggest drawback ofFalcon appears to be the complexity of understanding all details of the construc-tion and implementing the scheme correctly. 4.2.3 Rainbow  Design:  Rainbow is a multivariate signature scheme, proposed by Ding and Schmidt [41,42] and based on the Oil and Vinegar (OV) scheme by Patarin [99]. Rainbow fol-lows the idea to construct signatures from trapdoor functions (cf. Sect. 3.2.2).Similar to RSA signatures, Rainbow uses a trapdoor function P , for which onlythe holder of the secret key can compute preimages. To sign a messageM , thesigner then publishes a preimage for H(M, salt), where H is a cryptographic hashfunction that outputs elements in the range of P , and where salt is a fixed-lengthbitstring, chosen uniformly at random for each signature. The Rainbow trapdoor function is best described as the composition of two ormore oil and vinegar trapdoors. The design philosophy is that by iterating the OVtrapdoor, it gets more resistant to attacks, which allows for more efficient param-eter choices. Unfortunately, the additional complexity also opens up some newattack strategies. Implementation:  The Rainbow team provided an optimized implementation for general purposeprocessors and for processors supporting AVX2 instructions. These implementa-tions are claimed to resist timing side-channel attacks. During the second roundof the NIST PQC process, the Rainbow team switched to a new key generation al-gorithm. This does not affect the security of the scheme, but made key-generationmore efficient. A fault attack against Rainbow is presented in [73]. Cryptanalysis:  Like most multivariate signature schemes, Rainbow does not have a security proofthat reduces a hard computational problem to the security of the scheme. There-fore, we can not rely on widely believed assumptions and it necessary to have adedicated cryptanalysis of Rainbow. After some initial cryptanalytic results in thefirst few years after the introduction of Rainbow, the cryptanalysis of Rainbow wasrelatively stable. However, since Rainbow entered the NIST PQC process, therehave been some works that slightly improved existing attacks [9, 113], and dur-ing the third round of the NIST PQC process two new attacks were published thatbroke the security claims. [18] The Rainbow team has announced that a new pa-rameter set will be proposed to address the new attacks. Advantages and Disadvantages:  Rainbow signatures are small (e.g. ∼ 66 Bytes at SL I) and the signing and verifi-cation algorithms are fast. Rainbow uses only linear algebra over very small finitefields, which makes it suitable for implementing the scheme on low-cost devices,without the need for a cryptographic coprocessor. On the other hand, the pub-lic keys are rather large (e.g. 158 KB at SL I). It is possible to compress the public  20  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key size by almost a factor 3 at the expense of slower signing times. The securityanalysis of Rainbow cannot be considered stable at the moment.  21  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  5 ALTERNATE CANDIDATES 5.1 ENCRYPTION SCHEMES BIKE  BIKE [7], Bit Flipping Key Encapsulation, is a Key Encapsulation Mechanism (KEM)based on quasi-cyclic codes with moderate-density parity-check matrices. Thepublic key specifies an error-correcting code, as in Classic McEliece, but in BIKEthe code has a public structure of being quasi-cyclic, allowing the public key to becompressed. The moderate-density parity-check matrices are secret, Bit flippingcorrects errors by repeatedly flipping the input bits that, given the secret paritychecks, seem most likely to be errors. HQC  HQC [88], Hamming Quasi-Cyclic, has the same noisy Diffie–Hellman structureas many lattice-based cryptosystems. The public key includes a random G and A = aG + e, where a, e are small secrets. The ciphertext includes B = bG + d and C = M + bA + c, where b, c, d are small secrets andM is a message encoded usingan error-correcting code. The receiver computes C − aB = M + be + c − ad, whichis close toM since a, b, c, d, e are small, and decodes the error-correcting code torecoverM . HQC uses polynomials modulo 2, rather than the larger integer moduliused in lattice-based cryptosystems, but uses polynomial modulus xn − 1 with rel-atively large n. HQC uses error-correcting codes built from Reed-Muller and Reed-Solomon codes. Public keys are between 2249 and 7245 bytes, and ciphertexts arebetween 4481 and 14469 bytes, depending on the security level. Frodo-KEM  FrodoKEM [92] is a key encapsulation mechanism whose security is based on thehardness of the standard Learning With Errors problem. The algorithm is a spe-cific instantiation of the construction of Lindner and Peikert from 2011 [79]. Itthus makes no use of so-called structured lattices (such as those based on Ring orModule LWE), this means that the performance is not as good as the lattice basedschemes selected to be the main candidates in Round 3. However, for those wor-ried about the structural properties of these latter candidates, Frodo-KEM may bean option. NTRU-Prime  NTRU Prime [12, 14] is a lattice-based key encapsulation mechanism (KEM) withtwo options: Streamlined NTRU Prime, which is similar to NTRU, and NTRU LPRime,which is similar to Kyber and SABER. NTRU Prime uses a polynomial xp − x− 1 witha maximum-size Galois group (superexponential in the degree) while NTRU, Ky-ber, and SABER use cyclotomic polynomials with a minimum-size Galois group(linear in the degree). The original STOC 2009 Gentry FHE system and the originalmultilinear-map system are broken for cyclotomics but not for xp − x − 1; NTRUPrime predates these attacks and is designed to protect lattice-based cryptosys-tems against the possibility of cyclotomic attacks. Compared to the performance  22  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  of NTRU, Kyber, and SABER, the performance of NTRU Prime is sometimes slightlyworse and sometimes slightly better, but is generally similar. SIKE  SIKE [63] is a key encapsulation mechanism based on the hard problem of pseudo-random walks in supersingular isogeny graphs. This is a relatively new problem inthe cryptographic arena, but the problem of studying isogenies of supersingularelliptic curves is an old mathematical problem. The main advantage of isogenybased schemes is their small public key and ciphertext size. The key problems as-sociated with SIKE is that the performance is currently not competitive with theother proposals. This may improve however over time.  5.2 SIGNATURE SCHEMES GeMSS  The GeMMS scheme [29] builds on a line of work that goes back to 1988; schemesin this line of work are called “Big Field” schemes. The public key for GeMMS is amultivariate quadratic system of equations over F2. The main idea behind “BigField” schemes is that there is a secret change of variables that turns the publickey into a (perturbed version of) a system that models a low-degree univariatepolynomial equation over an extension field F2n . Since it is possible to efficientlyfind the solutions to a low degree univariate polynomial, this allows someone whoknows the secret change of variables to sign messages. The size of GeMMS signa-tures is exceptionally small, with a size of only 258 bits at NIST security level I. Themain drawbacks, however, are that, with 350KB, the public keys are large, and thatsigning is slow, especially for the more conservative parameter choices. Picnic  The Picnic signature scheme 1 , currently on its third iteration [65], is unique amongthe other candidates due to its use of the “MPC-in-the-head” paradigm [62]. Inthis framework, a proving algorithm simulates a virtual MPC protocol which com-putes the circuit for an NP relation R, e.g. x ∼R y ⇐⇒ y = SHA-256(x). Byrevealing the views of a random subset of the MPC parties, this forms an interac-tive zero-knowledge proof of knowledge (ZKPoK) of a witness for R. In Picnic, thisZKPoK is made non-interactive and turned into a signature scheme using the tra-ditional Fiat-Shamir transform (cf. Sect. 3.2.1); furthermore, the design uses the LowMC block cipher for the relation R due to this cipher’s explicit design for efficientcomputation in MPC 2 After several iterations in the design, the current specifica-tion document for Picnic3 lists signature sizes of 12.6kB, 27.5kB and 48.7kB forthe L1, L3 and L5 NIST security levels, respectively [65]. SPHINCS+  SPHINCS+ [16] is a framework that describes a family of hash-based signatureschemes 3 . Using an arbitrary, secure cryptographic hash function, a signaturescheme can be obtained using the SPHINCS+ framework, a variant of the SPHINCSconstruction (cf. Sect. 3.2.3). This is in contrast to all other signature schemes 1See https://microsoft.github.io/Picnic/ for the project page and a list of design and specifica-  tion documents. Last accessed May 2021.2While producing efficient and short signatures, the use of the new LowMC has been commented onby NIST and other works have explored using more trusted ciphers as replacement.3See https://sphincs.org for the project page with the full submission package and a collection of relevant design documents. Last accessed May 2021.  23  https://microsoft.github.io/Picnic/ https://sphincs.org  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  mentioned in this document 4, which require a secure cryptographic hash functionand an additional mathematical problem to be computationally hard to solve. Thegeneral concept of building signature schemes from cryptographic hash functionsgoes back to the beginning of public key cryptography [74, 90]. For that reason,SPHINCS+ is widely considered the signature scheme with the most conservativesecurity guarantees in the competition. The rough concept of SPHINCS+ (as well as its predecessor SPHINCS and the firstround scheme Gravity-SPHINCS) is as follows. A key pair defines a huge virtualdata structure. Data objects required in a signature operation are generated onthe fly from a short secret seed using a pseudorandom generator. This virtualdata structure of a key pair contains a massive number of hash-based few-timesignature scheme (FTS) key pairs (e.g. 260). Such FTS become less secure with ev-ery signature and after a certain number T of signatures (e.g. T = 8) securitydrops below the targeted security level. To prevent using the same few-time keypair more than T times, for every signature a random FTS key pair is selected forevery new message. By using sufficiently many FTS key pairs, the probability of a T + 1 times collision can be made about as likely as successfully guessing the se-cret key. The public keys of all these FTS key pairs are authenticated by a singlehash value using certification trees (similar to a PKI) built of hash-based one-timesignature schemes and binary hash trees. The SPHINCS+ submission to the NIST process defines instances using SHA2,SHA3, or Haraka [72]. The SPHINCS+ design remained unchanged since the ini-tial submission. The changes introduced in the last iterations were an additionalconstruction for the internally used functions and parameters that offer betterperformance trade-offs. SPHINCS+ is a flexible design. For example, at NIST se-curity level L1, the specification contains parameters that lead signature sizes of7 856 bytes and 17088, while signing times are 2721 Mcycles and 138 Mcycles, re-spectively, using SHA2-256. Verification speed is generally fast with about 3 and 8Mcycles for above parameters, and keys for both parameter sets are 64 bytes forthe secret and 32 bytes for the public keys.  4While this is theoretically also true for Picnic, to be competitive, Picnic requires a function with lowmultiplicative depth, a property common hash functions do not provide.  24  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  6 QUANTUM MITIGATION If you encrypt data that needs to be kept confidential for more than 10 years andan attacker could gain access to the ciphertext you need to take action now toprotect your data. Otherwise, security will be compromised as soon as the at-tacker also gets access to a large quantum computer. Given that the NIST processwill still run for a few years, there are essentially two viable options to handle thisproblem. The first option is to already migrate to so called hybrid implementations that usea combination of pre-quantum and post-quantum schemes. The second option isto employ the conceptionally easy, but organizationally complicated measure ofmixing pre-shared keys into all keys established via public-key cryptography. Wewill detail these two options below. If you build devices that will be hard to reach or to upgrade later you should in-clude a post-quantum signature scheme now to ensure secure continuity of ser-vice when a quantum computer is available. Otherwise, you should start to pre-pare for migration by making a catalogue of where you currently use public-keycryptography and for what purpose. Make sure to include software updates andthird party products in your overview. Figure out whether you fit into one of theuse cases that NIST considers – even better, get involved in the NIST discussions tomake sure your use case is covered. Then wait for the outcome of the NIST com-petition (or quantum computers getting dangerously close, whichever comes first)to update your systems.  6.1 HYBRID SCHEMES A hybrid scheme in this context describes the combination of a pre-quantum pub-lic key cryptographic scheme, such as RSA or (EC)DH, with a post-quantum one ina way that guarantees security as long as at least one of the two schemes is se-cure. Hence, hybrid solutions might also be interesting for the migration to stan-dardized post-quantum schemes as they can be easier justified in cases wherecertification and compliance are an issue. We first look at public-key encryption (PKE) and key exchange (KEX). The mostgeneric way to combine two PKE or KEX schemes is to run both schemes to ob-tain one shared secret per scheme and to xor the two shared secrets to obtain acombined one. For protocols that derive a session key by means of feeding a pre-master secret, obtained via public-key cryptography, into a key derivation function(KDF), it is also possible to establish one pre-master secret per scheme and to feedthe concatenation of the two pre-master secrets into the KDF. This would for ex-ample be applicable in the context of TLS. An extensive case-study of combiningschemes for confidentiality that takes a rather applied angle can be found in [34]. When it comes to signature schemes, the combination of two schemes is generi-cally best handled by using them independently. This means, distributing two pub-lic keys (possibly in one certificate) and always sending two signatures, one perscheme. For specific schemes, more efficient combiners might be possible but thisis a topic of ongoing research. A more detailed discussion including a discussionof practical implementations of such combiners is presented in [20].  25  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  6.2 PROTECTIVE MEASURES FOR PRE-QUANTUM CRYP- TOGRAPHY  Users who do not want to embark on deploying post-quantum systems beforethey are standardised; yet are concerned about the long-term confidentiality oftheir transmitted data, can protect their systems by including retained shared se-cret data in the key derivation, in addition to the key material obtained by a publickey operation. This comes at the expense of keeping pairwise shared data and isthus only an option for systems which keep state and have a limited set of peers. ZRTP [120] includes such a mechanism called “key continuity” as a measure againstman-in-the-middle (MITM) attacks. The protocol – specified in 2006 – does notmention security against quantum adversaries as a motivation but is the first de-scription of this idea that we are aware of. It also goes further than other proto-cols in updating the shared secret data. The more recent Wireguard [44] protocoluses a pre-shared key (PSK) and includes it in the derivation of session keys butdoes not update the PSK; Wireguard is based on Noise PSK [100, Chapter 9]. Wire-guard explicitly mentions the PSK as a feature to protect against later compromiseby quantum attackers. (See also [6] for a small tweak to achieve better protectionin that scenario and [61] for a fully post-quantum version.) The following description follows the approach of ZRTP in that the retained sharedsecret gets updated with each public-key operation by hashing in new data. In-cluding secret data from public-key operations ensures forward secrecy and post-compromise security against pre-quantum attackers. Updating the retained sharedsecret during each iteration with a hash function ensures that a later compromiseof the system cannot recover previous session keys from the retained shared se-cret and recorded connection data, even if the attacker has a quantum computerand can thus break the pre-quantum public-key encryption. Let r denote the retained shared secret. Let s be the fresh shared data, obtainedfrom a public-key operation. The above-mentioned protocols are based on theDiffie-Hellman key exchange, but this approach can also be used for RSA-basedprotocols. Whenever the original protocol calls a KDF for generating the sessionkey k, the KDF’s inputs should be extended to include r:  k = KDF(s, ′′session key′′, r, ∗),  where ∗ is a placeholder for the context data (handshake messages, public keys,ID strings, etc.). This ensure that an attacker can recover k only if he has obtained r as well as s. After computing k, the retained secret should be updated to  r′ = KDF(k, ′′retained secret′′)  possibly including other context data in the KDF arguments. The protocol needs to be careful to verify that both parties have obtained s beforeoverwriting r. See ZRTP [120] for an instantiation using two variables for retainedsecret values in order to avoid desynchronization. The description above leaves open how the users have received the first PSK value r. Users concerned about long-term security should arrange to share such keysout of band (scanned QR code, password, . . . ). In scenarios with predefined com-munication patterns, such as a main server communicating with remote regis-tered devices, the PSK may be provisioned with the devices. Note that each deviceshould get a unique PSK known only to the device and the server. Users may also start with empty r if they achieve authenticity and protection againstMITM attacks in other ways, e.g., comparing fingerprints of the obtained data  26  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  through a different medium (a phone call etc.), or accept trust-on-first use. Notethat this helps against quantum attackers only if the attackers miss the first con-nection, which is unlikely for an attacker so dedicated that they can get a quan-tum computer. However, it is worth mentioning that, if an attacker ever missesthe communication leading to a key update, so that they do not know s, they alsocannot compute later values of r. Hence the system can achieve security at a laterstate. Note that the above approach is not suitable for systems that get restored frompreviously saved images, such as virtual machines. In that case a system with afixed PSK is more suitable, however it does not protect against attackers that laterget access to the system, and thus the PSK, and have recorded all messages ex-changed, thus all public-key operations.  27  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  7 CONCLUSIONS It is perhaps inevitable that as the technology sector advances drastically overtime, our infrastructures are exposed to new attacking vectors. However, Quan-tum Technology and in particular Quantum Computing are set to be a major dis-ruptor. We have known for more than 2 decades that the development of a suf-ficiently large and practical quantum computing machine will render most cryp-tographic systems insecure, radically transforming the existing threat model andendangering our infrastructure. Moreover, while current systems do not pose any threat, a working quantum com-puter (i.e., one having a sufficient number of Qubits that is resistant to quantumnoise and other quantum-decoherence, is economically viable and practically op-erational) is the objective of several ongoing large scale investments from bothindustry players and nation states. However, not all development in the area ispublic and it is fairly likely that the first fully functional large quantum computerwill not be publicly announced. As such, policy maker and system owner shouldmake preparations. Rolling out new cryptographic systems takes a lot of time and effort; it might evenbe infeasible for systems with restricted accessibility, like satellites. Moreover, sig-natures play a significant role in protecting modern operating-system upgrades.If a post-quantum signature system is not in place by the time an attacker has ac-cess to a quantum computer, then the attacker can take control of the operatingsystem through a fake upgrade and prevent any future upgrades from fixing theproblem. It is thus important to have replacements in place well in advance. What makesmatters worse is that any encrypted communication intercepted today can be de-crypted by the attacker as soon as he has access to a large quantum computer,whether in 5, 10 or 20 years from now; an attack known as retrospective decryp-tion. In this study we have provided a brief background of post quantum cryptography,in section 2 we present the 5 main families of quantum resistant cryptographicalgorithms that are proposed as potential candidates to provide post-quantumsecurity resilience; viz. code-based, isogeny-based, hash-based, lattice-based andmultivariate-based. Section 4 presents the finalist algorithms that are competingto be considered by NIST ready for standardisation, whereas section 5 refers tothe algorithms that NIST considers promising, but still not ready to be applied. The last section – section 6 – presents and briefly explains two possible mitigationmechanics; namely the so-called hybrid implementations that use a combinationof pre-quantum and post-quantum schemes, and the conceptionally easy, butorganizationally complicated measure ofmixing pre-shared keys into all keys es-tablished via public-key cryptography. Both methods have shortcomings, but forsystem owners requiring long term confidentiality of transmitted data are worthconsidering. Given that the NIST PQC standardisation process is scheduled to pub-lish a draft standard somewhere in 2022-2024, system owners with more relaxedsecurity requirements and/or with greater resource constraints might be betterserved waiting for the process conclusion. The presented algorithms, on sections 4 and 5, refer to asymmetric key (public-  28  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  key) cryptographic systems – the area of cryptography that will be mostly affectedby the existence of quantum computers due to their high reliance on mathemat-ical structures (e.g., factoring, and discrete logarithm problem). Symmetric key(shared-key) cryptographic systems on the other hand present a higher resilienceto the new status-quo. In such systems, the adoption of larger key-sizes is consid-ered an effective mitigation technique that is easy to be adopted. The apt reader will have noticed the absence of mention of Quantum Key Distribu-tion (QKD) 1 or of Quantum Cryptography in this text. This has been a deliberatechoice. QKD is a quantum technology application that has been available for manyyears. It provides a guaranteed, by the laws of physics, secure way of distributingand sharing secret keys that are necessary for cryptographic protocols. It essen-tially offers key agreement services, but not authentication or message confiden-tiality; for these services we need to rely on math-based cryptography. In otherwords, QKD can complement a traditional cryptographic system and its setup re-lies on pre-established authenticated communications channels. However, the ex-istence of such an authenticated channel, presupposes that communicating par-ties either have managed to privately exchanged a symmetric key in the past (e.g.,by physically meeting) or are using public key cryptography. In the former case,authentication was achieved by direct interaction, which is not a scalable prac-tice. While, in the latter, we are forced to use the same cryptographic algorithmsthat, as we established, are insecure against quantum cryptanalysis. It is clear thatQKD is not a direct solution to the problems of quantum cryptanalysis, but rathera comparatively mature application of quantum technology. The term QuantumCryptography, on the other hand, is often used to denote QKD or erroneously tosignify Post-Quantum algorithms like the ones visited in this report. Nevertheless,it can also refer to more exotic cryptographic applications that exploit quantumproperties; like quantum [pseudo]random number generators (QRNG), programobfuscation etc. It is important to note that being a quantum cryptographic appli-cation does not equate being immune to quantum or traditional cryptanalysis andfor many quantum cryptographic application this remains an open question.  1https://qt.eu/discover-quantum/underlying-principles/quantum-key-distribution-qkd/.Last accessed May 2021.  29  https://qt.eu/discover-quantum/underlying-principles/quantum-key-distribution-qkd/  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  BIBLIOGRAPHY [1] Miklós Ajtai. The shortest vector problem in L2 is NP-hard for randomizedreductions (extended abstract). In 30th Annual ACM Symposium on Theory of  Computing, pages 10–19. ACM Press, May 1998. [2] Martin Albrecht, Rachel Player, and Sam Scott. On the concrete hardness oflearning with errors. Journal of Mathematical Cryptology, 9, 10 2015. [3] Martin R. Albrecht, Daniel J. Bernstein, Tung Chou, Carlos Cid, Jan Gilcher,Tanja Lange, Varun Maram, Ingo von Maurich, Rafael Misoczki, RubenNiederhagen, Kenneth G. Paterson, Edoardo Persichetti, Christiane Peters,Peter Schwabe, Nicolas Sendrier, Jakub Szefer, Cen Jung Tjhai, Martin Tom-linson, and Wen Wang. Classic McEliece. Round 3 submission to NIST post-quantum call for proposals, 2020. https://classic.mceliece.org/. [4] Martin R. Albrecht, Benjamin R. Curtis, Amit Deo, Alex Davidson, RachelPlayer, Eamonn W. Postlethwaite, Fernando Virdia, and Thomas Wunderer.Estimate all the LWE, NTRU schemes! In Dario Catalano and Roberto DePrisco, editors, SCN 18: 11th International Conference on Security in Commu-  nication Networks, volume 11035 of Lecture Notes in Computer Science, pages351–367. Springer, Heidelberg, September 2018. [5] Martin R. Albrecht, Christian Hanser, Andrea Hoeller, Thomas Pöppelmann,Fernando Virdia, and Andreas Wallner. Implementing RLWE-based schemesusing an RSA co-processor. IACR Transactions on Cryptographic Hardware and  Embedded Systems, 2019(1):169–208, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7338. [6] Jacob Appelbaum, Chloe Martindale, and Peter Wu. Tiny WireGuard tweak.In Johannes Buchmann, Abderrahmane Nitaj, and Tajje eddine Rachidi, ed-itors, AFRICACRYPT 19: 11th International Conference on Cryptology in Africa,volume 11627 of Lecture Notes in Computer Science, pages 3–20. Springer,Heidelberg, July 2019. [7] Nicolas Aragon, Paulo S. L. M. Barreto, Slim Bettaieb, Loïc Bidoux, OlivierBlazy, Jean-Christophe Deneuville, Philippe Gaborit, Santosh Ghosh, ShayGueron, Tim Güneysu, Carlos Aguilar Melchor, Rafael Misoczki, Edoardo Per-sichetti, Nicolas Sendrier, Jean-Pierre Tillich, Valentin Vasseur, and GillesZémor. BIKE - Bit Flipping Key Encapsulation. Round 3 submission to NISTpost-quantum call for proposals, 2020. https://bikesuite.org/. [8] Daniel V. Bailey, Daniel Coffin, Adam J. Elbirt, Joseph H. Silverman, andAdam D. Woodbury. NTRU in constrained devices. In Çetin Kaya Koç, DavidNaccache, and Christof Paar, editors, Cryptographic Hardware and Embed-  ded Systems – CHES 2001, volume 2162 of Lecture Notes in Computer Science,pages 262–272. Springer, Heidelberg, May 2001. [9] Magali Bardet, Maxime Bros, Daniel Cabarcas, Philippe Gaborit, Ray Perlner,Daniel Smith-Tone, Jean-Pierre Tillich, and Javier Verbel. Improvements ofalgebraic attacks for solving the rank decoding and MinRank problems. In  International Conference on the Theory and Application of Cryptology and Infor- mation Security, 2020.  30  https://classic.mceliece.org/ https://tches.iacr.org/index.php/TCHES/article/view/7338 https://tches.iacr.org/index.php/TCHES/article/view/7338 https://bikesuite.org/  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [10] Andrea Basso, Jose Maria Bermudo Mera, Jan-Pieter D’Anvers, Angshu-man Karmakar, Sujoy Sinha Roy, Michiel Van Beirendonck, and Fred-erik Vercauteren. SABER. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [11] Michiel Van Beirendonck, Jan-Pieter D’Anvers, Angshuman Karmakar, JosepBalasch, and Ingrid Verbauwhede. A side-channel resistant implementationof saber. Cryptology ePrint Archive, Report 2020/733, 2020. https://eprint.iacr.org/2020/733. [12] Daniel J. Bernstein, Billy Bob Brumley, Ming-Shing Chen, ChitchanokChuengsatiansup, Tanja Lange, Adrian Marotzke, Bo-Yuan Peng, Nicola Tu-veri, Christine van Vredendaal, and Bo-Yin Yang. NTRU Prime. Round 3 sub-mission to NIST post-quantum call for proposals, 2020. https://ntruprime.cr.yp.to/warnings.html. [13] Daniel J. Bernstein, Tung Chou, and Peter Schwabe. McBits: Fast constant-time code-based cryptography. In Guido Bertoni and Jean-Sébastien Coron,editors, Cryptographic Hardware and Embedded Systems – CHES 2013, volume8086 of Lecture Notes in Computer Science, pages 250–272. Springer, Heidel-berg, August 2013. [14] Daniel J. Bernstein, Chitchanok Chuengsatiansup, Tanja Lange, and Chris-tine van Vredendaal. NTRU prime: Reducing attack surface at low cost.In Carlisle Adams and Jan Camenisch, editors, SAC 2017: 24th Annual Inter-  national Workshop on Selected Areas in Cryptography, volume 10719 of Lec- ture Notes in Computer Science, pages 235–260. Springer, Heidelberg, August2017.  [15] Daniel J. Bernstein, Daira Hopwood, Andreas Hülsing, Tanja Lange, RubenNiederhagen, Louiza Papachristodoulou, Michael Schneider, Peter Schwabe,and Zooko Wilcox-O’Hearn. SPHINCS: Practical stateless hash-based signa-tures. In Elisabeth Oswald and Marc Fischlin, editors, Advances in Cryptology – EUROCRYPT 2015, Part I, volume 9056 of Lecture Notes in Computer Science,pages 368–397. Springer, Heidelberg, April 2015.  [16] Daniel J. Bernstein, Andreas Hülsing, Stefan Kölbl, Ruben Niederhagen, JoostRijneveld, and Peter Schwabe. The SPHINCS+ signature framework. InLorenzo Cavallaro, Johannes Kinder, XiaoFeng Wang, and Jonathan Katz,editors, ACM CCS 2019: 26th Conference on Computer and Communications Security, pages 2129–2146. ACM Press, November 2019.  [17] Daniel J. Bernstein and Tanja Lange. McTiny: Fast high-confidence post-quantum key erasure for tiny network servers. In Srdjan Capkun andFranziska Roesner, editors, USENIX Security 2020: 29th USENIX Security Sym- posium, pages 1731–1748. USENIX Association, August 2020.  [18] Ward Beullens. Improved cryptanalysis of UOV and Rainbow. CryptologyePrint Archive, Report 2020/1343, 2020. https://eprint.iacr.org/2020/1343. [19] Nina Bindel, Mike Hamburg, Kathrin Hövelmanns, Andreas Hülsing, andEdoardo Persichetti. Tighter proofs of CCA security in the quantum randomoracle model. In Dennis Hofheinz and Alon Rosen, editors, TCC 2019: 17th  Theory of Cryptography Conference, Part II, volume 11892 of Lecture Notes in Computer Science, pages 61–90. Springer, Heidelberg, December 2019.  [20] Nina Bindel, Udyani Herath, Matthew McKague, and Douglas Stebila. Tran-sitioning to a quantum-resistant public key infrastructure. In Tanja Langeand Tsuyoshi Takagi, editors, Post-Quantum Cryptography - 8th International Workshop, PQCrypto 2017, pages 384–405. Springer, Heidelberg, 2017.  31  https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/733 https://eprint.iacr.org/2020/733 https://ntruprime.cr.yp.to/warnings.html https://ntruprime.cr.yp.to/warnings.html https://eprint.iacr.org/2020/1343  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [21] Nina Bindel and John M. Schanck. Decryption failure is more likely after suc-cess. In Jintai Ding and Jean-Pierre Tillich, editors, Post-Quantum Cryptogra- phy - 11th International Conference, PQCrypto 2020, pages 206–225. Springer,Heidelberg, 2020.  [22] Dan Boneh, Özgür Dagdelen, Marc Fischlin, Anja Lehmann, ChristianSchaffner, and Mark Zhandry. Random oracles in a quantum world. InDong Hoon Lee and Xiaoyun Wang, editors, Advances in Cryptology – ASI- ACRYPT 2011, volume 7073 of Lecture Notes in Computer Science, pages 41–69. Springer, Heidelberg, December 2011.  [23] J. Bos, L. Ducas, E. Kiltz, T. Lepoint, V. Lyubashevsky, J. M. Schanck,P. Schwabe, G. Seiler, and D. Stehle. CRYSTALS - Kyber: A CCA-SecureModule-Lattice-Based KEM. In 2018 IEEE European Symposium on Security and Privacy (EuroS P), pages 353–367, 2018.  [24] Joppe W. Bos, Joost Renes, and Christine van Vredendaal. Polynomial multi-plication with contemporary co-processors: Beyond kronecker, schönhage-strassen and nussbaumer. Cryptology ePrint Archive, Report 2020/1303,2020. https://eprint.iacr.org/2020/1303. [25] Leif Both and Alexander May. Optimizing BJMM with nearest neighbors: Fulldecoding in 22n/21 and McEliece security, 2017. International Workshop onCoding and Cryptography (WCC 2017), https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf. [26] Leif Both and Alexander May. Decoding linear codes with high error rateand its impact for LPN security. In Tanja Lange and Rainer Steinwandt, ed-itors, Post-Quantum Cryptography - 9th International Conference, PQCrypto  2018, pages 25–46. Springer, Heidelberg, 2018. [27] Leon Botros, Matthias J. Kannwischer, and Peter Schwabe. Memory-efficienthigh-speed implementation of Kyber on cortex-M4. In Johannes Buchmann,Abderrahmane Nitaj, and Tajje eddine Rachidi, editors, AFRICACRYPT 19:  11th International Conference on Cryptology in Africa, volume 11627 of Lecture Notes in Computer Science, pages 209–228. Springer, Heidelberg, July 2019.  [28] Leon Groot Bruinderink and Peter Pessl. Differential fault attacks on deter-ministic lattice signatures. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2018(3):21–43, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7267.  [29] A. Casanova, J.-C. Faugère, G. Macario-Rat, J. Patarin, L. Perret, andJ. Ryckeghem. GeMSS. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [30] Denis Xavier Charles, Kristin E. Lauter, and Eyal Z. Goren. Cryptographichash functions from expander graphs. Journal of Cryptology, 22(1):93–113,January 2009. [31] Tung Chou. McBits revisited. In Wieland Fischer and Naofumi Homma, ed-itors, Cryptographic Hardware and Embedded Systems – CHES 2017, volume10529 of Lecture Notes in Computer Science, pages 213–231. Springer, Heidel-berg, September 2017. [32] David Cooper, Daniel Apon, Quynh Dang, Michael Davidson, MorrisDworkin, and Carl Miller. NIST Special Publication 800-208: Recommenda-tion for Stateful Hash-Based Signature Schemes. Technical report, NationalInstitute of Standards and Technology, 2020. https://doi.org/10.6028/NIST.SP.800-208. [33] Don Coppersmith and Adi Shamir. Lattice attacks on NTRU. In Walter Fumy,editor, Advances in Cryptology – EUROCRYPT’97, volume 1233 of Lecture Notes  in Computer Science, pages 52–61. Springer, Heidelberg, May 1997.  32  https://eprint.iacr.org/2020/1303 https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/bjmm+.pdf https://tches.iacr.org/index.php/TCHES/article/view/7267 https://tches.iacr.org/index.php/TCHES/article/view/7267 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://doi.org/10.6028/NIST.SP.800-208 https://doi.org/10.6028/NIST.SP.800-208  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [34] Eric Crockett, Christian Paquin, and Douglas Stebila. Prototyping post-quantum and hybrid key exchange and authentication in TLS and SSH. Cryp-tology ePrint Archive, Report 2019/858, 2019. https://eprint.iacr.org/2019/858. [35] Dana Dachman-Soled, Léo Ducas, Huijing Gong, and Mélissa Rossi. LWEwith side information: Attacks and concrete security estimation. InDaniele Micciancio and Thomas Ristenpart, editors, Advances in Cryptology  – CRYPTO 2020, Part II, volume 12171 of Lecture Notes in Computer Science,pages 329–358. Springer, Heidelberg, August 2020. [36] Viet Ba Dang, Farnoud Farahmand, Michal Andrzejczak, Kamyar Moha-jerani, Duc Tri Nguyen, and Kris Gaj. Implementation and Benchmark-ing of Round 2 Candidates in the NIST Post-Quantum Cryptography Stan-dardization Process Using Hardware and Software/Hardware Co-designApproaches. Cryptology ePrint Archive, Report 2020/795, 2020. https://eprint.iacr.org/2020/795. [37] Jan-Pieter D’Anvers, Qian Guo, Thomas Johansson, Alexander Nilsson, Fred-erik Vercauteren, and Ingrid Verbauwhede. Decryption failure attacks onIND-CCA secure lattice-based schemes. In Dongdai Lin and Kazue Sako, edi-tors, PKC 2019: 22nd International Conference on Theory and Practice of Public  Key Cryptography, Part II, volume 11443 of Lecture Notes in Computer Science,pages 565–598. Springer, Heidelberg, April 2019. [38] Jan-Pieter D’Anvers, Angshuman Karmakar, Sujoy Sinha Roy, and FrederikVercauteren. Saber: Module-LWR based key exchange, CPA-secure en-cryption and CCA-secure KEM. In Antoine Joux, Abderrahmane Nitaj, andTajjeeddine Rachidi, editors, AFRICACRYPT 18: 10th International Conference  on Cryptology in Africa, volume 10831 of Lecture Notes in Computer Science,pages 282–305. Springer, Heidelberg, May 2018. [39] Jan-Pieter D’Anvers, Mélissa Rossi, and Fernando Virdia. (One) failure is notan option: Bootstrapping the search for failures in lattice-based encryptionschemes. In Anne Canteaut and Yuval Ishai, editors, Advances in Cryptology –  EUROCRYPT 2020, Part III, volume 12107 of Lecture Notes in Computer Science,pages 3–33. Springer, Heidelberg, May 2020. [40] Alexander W. Dent. A designer’s guide to KEMs. In Kenneth G. Paterson,editor, 9th IMA International Conference on Cryptography and Coding, volume2898 of Lecture Notes in Computer Science, pages 133–151. Springer, Heidel-berg, December 2003. [41] Jintai Ding, Ming-Shing Chen, Albrecht Petzoldt, Dieter Schmidt, Bo-Yin Yang,Matthias Kannwischer, and Jacques Patarin. Rainbow. Technical report,National Institute of Standards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [42] Jintai Ding and Dieter Schmidt. Rainbow, a new multivariable polynomialsignature scheme. In John Ioannidis, Angelos Keromytis, and Moti Yung,editors, ACNS 05: 3rd International Conference on Applied Cryptography and  Network Security, volume 3531 of Lecture Notes in Computer Science, pages164–175. Springer, Heidelberg, June 2005. [43] Jelle Don, Serge Fehr, and Christian Majenz. The measure-and-reprogramtechnique 2.0: Multi-round fiat-shamir and more. In Daniele Micciancio andThomas Ristenpart, editors, Advances in Cryptology – CRYPTO 2020, Part III,volume 12172 of Lecture Notes in Computer Science, pages 602–631. Springer,Heidelberg, August 2020. [44] Jason A. Donenfeld. WireGuard: Next generation kernel network tunnel.In ISOC Network and Distributed System Security Symposium – NDSS 2017. TheInternet Society, February / March 2017.  33  https://eprint.iacr.org/2019/858 https://eprint.iacr.org/2019/858 https://eprint.iacr.org/2020/795 https://eprint.iacr.org/2020/795 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [45] Léo Ducas, Eike Kiltz, Tancrède Lepoint, Vadim Lyubashevsky, PeterSchwabe, Gregor Seiler, and Damien Stehlé. CRYSTALS-Dilithium: A lattice-based digital signature scheme. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2018(1):238–268, 2018. https://tches.iacr.org/index.php/TCHES/article/view/839.  [46] Léo Ducas and Thomas Prest. Fast fourier orthogonalization. In ISSAC, pages191–198. ACM, 2016. [47] ECRYPT-CSA. Whitepaper on Post-Quantum Cryptography. https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf, 2018. [48] Jean-Charles Faugère, Valérie Gauthier, Ayoub Otmani, Ludovic Perret, andJean-Pierre Tillich. A distinguisher for high rate McEliece cryptosystems.Cryptology ePrint Archive, Report 2010/331, 2010. http://eprint.iacr.org/2010/331. [49] Amos Fiat and Adi Shamir. How to prove yourself: Practical solutions toidentification and signature problems. In Andrew M. Odlyzko, editor, Ad-  vances in Cryptology – CRYPTO’86, volume 263 of Lecture Notes in Computer Science, pages 186–194. Springer, Heidelberg, August 1987.  [50] Pierre-Alain Fouque, Paul Kirchner, Mehdi Tibouchi, Alexandre Wallet, andYang Yu. Uprooting the Falcon tree? Cryptology ePrint Archive, Report2019/1180, 2019. https://eprint.iacr.org/2019/1180. [51] Eiichiro Fujisaki and Tatsuaki Okamoto. Secure integration of asymmetricand symmetric encryption schemes. In Michael J. Wiener, editor, Advances  in Cryptology – CRYPTO’99, volume 1666 of Lecture Notes in Computer Science,pages 537–554. Springer, Heidelberg, August 1999. [52] Craig Gentry, Chris Peikert, and Vinod Vaikuntanathan. Trapdoors for hardlattices and new cryptographic constructions. In Richard E. Ladner and Cyn-thia Dwork, editors, 40th Annual ACM Symposium on Theory of Computing,pages 197–206. ACM Press, May 2008. [53] T. Güneysu, M. Krausz, T. Oder, and J. Speith. Evaluation of lattice-basedsignature schemes in embedded systems. In 2018 25th IEEE International  Conference on Electronics, Circuits and Systems (ICECS), pages 385–388, 2018. [54] Jeffrey Hoffstein, Jill Pipher, and Joseph H. Silverman. NTRU: A new highspeed public key cryptosystem, 1996. draft from at CRYPTO ‘96 rump ses-sion. http://web.securityinnovation.com/hubfs/files/ntru-orig.pdf. [55] Jeffrey Hoffstein, Jill Pipher, and Joseph H. Silverman. NTRU: A ring-basedpublic key cryptosystem. In Joe P. Buhler, editor, Algorithmic Number Theory  – ANTS-III, volume 1423 of LNCS, pages 267–288. Springer, 1998. http://dx.doi.org/10.1007/BFb0054868. [56] Dennis Hofheinz, Kathrin Hövelmanns, and Eike Kiltz. A modular analysis ofthe Fujisaki-Okamoto transformation. In Yael Kalai and Leonid Reyzin, edi-tors, TCC 2017: 15th Theory of Cryptography Conference, Part I, volume 10677of Lecture Notes in Computer Science, pages 341–371. Springer, Heidelberg,November 2017. [57] James Howe, Thomas Prest, Thomas Ricosset, and Mélissa Rossi.Isochronous gaussian sampling: From inception to implementation. In Jin-tai Ding and Jean-Pierre Tillich, editors, Post-Quantum Cryptography - 11th  International Conference, PQCrypto 2020, pages 53–71. Springer, Heidelberg,2020. [58] Nick Howgrave-Graham. A hybrid lattice-reduction and meet-in-the-middleattack against NTRU. In Alfred Menezes, editor, Advances in Cryptology –  CRYPTO 2007, volume 4622 of Lecture Notes in Computer Science, pages 150–169. Springer, Heidelberg, August 2007.  34  https://tches.iacr.org/index.php/TCHES/article/view/839 https://tches.iacr.org/index.php/TCHES/article/view/839 https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf https://www.ecrypt.eu.org/csa/documents/PQC-whitepaper.pdf http://eprint.iacr.org/2010/331 http://eprint.iacr.org/2010/331 https://eprint.iacr.org/2019/1180 http://web.securityinnovation.com/hubfs/files/ntru-orig.pdf http://dx.doi.org/10.1007/BFb0054868 http://dx.doi.org/10.1007/BFb0054868  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [59] Andreas Hülsing, Denise Butin, Stefan-Lukas Gazdag, Joost Rijneveld, andAziz Mohaisen. XMSS: Extended Hash-Based Signatures. Internet Requestsfor Comments, 2018. [60] Andreas Hülsing, Joost Rijneveld, John M. Schanck, and Peter Schwabe.High-speed key encapsulation from NTRU. In Wieland Fischer and Nao-fumi Homma, editors, Cryptographic Hardware and Embedded Systems –  CHES 2017, volume 10529 of Lecture Notes in Computer Science, pages 232–252. Springer, Heidelberg, September 2017. [61] Andreas Hülsing, Kai-Chun Ning, Peter Schwabe, Florian Weber, andPhilip R. Zimmermann. Post-quantum WireGuard. Cryptology ePrintArchive, Report 2020/379, 2020. https://eprint.iacr.org/2020/379. [62] Yuval Ishai, Eyal Kushilevitz, Rafail Ostrovsky, and Amit Sahai. Zero-knowledge from secure multiparty computation. In David S. Johnson andUriel Feige, editors, 39th Annual ACM Symposium on Theory of Computing,pages 21–30. ACM Press, June 2007. [63] David Jao, Reza Azarderakhsh, Matthew Campagna, Craig Costello, Luca DeFeo, Basil Hess, Amir Jalali, Brian Koziel, Brian LaMacchia, Patrick Longa,Michael Naehrig, Joost Renes, Vladimir Soukharev, David Urbanik, andGeovandro Pereira. SIKE. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [64] Haodong Jiang, Zhenfeng Zhang, Long Chen, Hong Wang, and Zhi Ma. IND-CCA-secure key encapsulation mechanism in the quantum random oraclemodel, revisited. In Hovav Shacham and Alexandra Boldyreva, editors, Ad-  vances in Cryptology – CRYPTO 2018, Part III, volume 10993 of Lecture Notes in Computer Science, pages 96–125. Springer, Heidelberg, August 2018.  [65] Daniel Kales and Greg Zaverucha. Improving the Performance of the PicnicSignature Scheme. Cryptology ePrint Archive, Report 2020/427, 2020. https://eprint.iacr.org/2020/427. [66] Matthias J. Kannwischer, Joost Rijneveld, and Peter Schwabe. Faster mul-tiplication in Z2m [x] on cortex-M4 to speed up NIST PQC candidates. InRobert H. Deng, Valérie Gauthier-Umaña, Martín Ochoa, and Moti Yung,editors, ACNS 19: 17th International Conference on Applied Cryptography and  Network Security, volume 11464 of Lecture Notes in Computer Science, pages281–301. Springer, Heidelberg, June 2019. [67] Matthias J. Kannwischer, Joost Rijneveld, Peter Schwabe, and Ko Stoffelen.pqm4: Testing and benchmarking NIST PQC on ARM cortex-M4. CryptologyePrint Archive, Report 2019/844, 2019. https://eprint.iacr.org/2019/844. [68] Angshuman Karmakar, Jose Maria Bermudo Mera, Sujoy Sinha Roy, and In-grid Verbauwhede. Saber on ARM. IACR Transactions on Cryptographic Hard-  ware and Embedded Systems, 2018(3):243–266, 2018. https://tches.iacr.org/index.php/TCHES/article/view/7275. [69] Angshuman Karmakar, Sujoy Sinha Roy, Frederik Vercauteren, and IngridVerbauwhede. Pushing the speed limit of constant-time discrete Gaussiansampling. A case study on the Falcon signature scheme. In DAC, page 88.ACM, 2019. [70] Jonathan Katz and Yehuda Lindell. Introduction to modern cryptography. CRCpress, 2020. [71] Elena Kirshanova. Improved quantum information set decoding. In TanjaLange and Rainer Steinwandt, editors, Post-Quantum Cryptography - 9th In-  ternational Conference, PQCrypto 2018, pages 507–527. Springer, Heidelberg,2018.  35  https://eprint.iacr.org/2020/379 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/427 https://eprint.iacr.org/2020/427 https://eprint.iacr.org/2019/844 https://tches.iacr.org/index.php/TCHES/article/view/7275 https://tches.iacr.org/index.php/TCHES/article/view/7275  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [72] Stefan Kölbl, Martin M. Lauridsen, Florian Mendel, and Christian Rech-berger. Haraka v2 - Efficient short-input hashing for post-quantum ap-plications. IACR Transactions on Symmetric Cryptology, 2016(2):1–29, 2016.http://tosc.iacr.org/index.php/ToSC/article/view/563. [73] Juliane Krämer and Mirjam Loiero. Fault attacks on UOV and Rainbow. In IliaPolian and Marc Stöttinger, editors, COSADE 2019: 10th International Work-  shop on Constructive Side-Channel Analysis and Secure Design, volume 11421of Lecture Notes in Computer Science, pages 193–214. Springer, Heidelberg,April 2019. [74] Leslie Lamport. Constructing digital signatures from a one-way function.Technical Report SRI-CSL-98, SRI International Computer Science Labora-tory, October 1979. [75] Tanja Lange. SD8 (Post-Quantum Cryptography) – Part 4: Code-Based Cryp-tography. Technical Report N 2276, ISO/IEC JTC 1/SC 27/WG 2, 2020. https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip. [76] Tanja Lange. Sd8 (post-quantum cryptography) – part 6: Isogeny-based cryptography. Technical Report N 2274, ISO/IEC JTC 1/SC27/WG 2, 2020. https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip. [77] Adam Langley. CECPQ2, 2018. https://www.imperialviolet.org/2018/12/12/cecpq2.html. [78] Mun-Kyu Lee, Jeong Eun Song, Dooho choi, and Dong-Guk Han. Counter-measures against power analysis attacks for the NTRU public key cryptosys-tem. IEICE Transactions on Fundamentals of Electronics, Communications and  Computer Sciences, E93.A(1):153–163, 2010. [79] Richard Lindner and Chris Peikert. Better key sizes (and attacks) for LWE-based encryption. In Aggelos Kiayias, editor, Topics in Cryptology – CT-  RSA 2011, volume 6558 of Lecture Notes in Computer Science, pages 319–339.Springer, Heidelberg, February 2011. [80] Vadim Lyubashevsky, Léo Ducas, Eike Kiltz, Tancrède Lepoint, PeterSchwabe, Gregor Seiler, and Damien Stehlé. CRYSTALS-DILITHIUM.Technical report, National Institute of Standards and Technology, 2020.available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [81] Vadim Lyubashevsky, Chris Peikert, and Oded Regev. On ideal lattices andlearning with errors over rings. In Henri Gilbert, editor, Advances in Cryp-  tology – EUROCRYPT 2010, volume 6110 of Lecture Notes in Computer Science,pages 1–23. Springer, Heidelberg, May / June 2010. [82] J. Maria Bermudo Mera, F. Turan, A. Karmakar, S. Sinha Roy, and I. Ver-bauwhede. Compact domain-specific co-processor for accelerating mod-ule lattice-based kem. In 2020 57th ACM/IEEE Design Automation Conference  (DAC), pages 1–6, 2020. [83] Alexander May. Cryptanalysis of NTRU, 1999. https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps. [84] Alexander May and Joseph H. Silverman. Dimension reduction methodsfor convolution modular lattices. In Joseph H. Silverman, editor, Cryptogra-  phy and Lattices: International Conference – CaLC 2001, volume 2146 of LNCS,pages 110–125. Springer, 2001. http://dx.doi.org/10.1007/3-540-44670-2_10.  36  http://tosc.iacr.org/index.php/ToSC/article/view/563 https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.din.de/resource/blob/721042/4f1941ac1de9685115cf53bc1a14ac61/sc27wg2-sd8-data.zip https://www.imperialviolet.org/2018/12/12/cecpq2.html https://www.imperialviolet.org/2018/12/12/cecpq2.html https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps https://www.cits.ruhr-uni-bochum.de/imperia/md/content/may/paper/cryptanalysisofntru.ps http://dx.doi.org/10.1007/3-540-44670-2_10 http://dx.doi.org/10.1007/3-540-44670-2_10  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [85] Sarah McCarthy, James Howe, Neil Smyth, Séamus Brannigan, and MáireO’Neill. BEARZ attack FALCON: implementation attacks with counter-measures on the FALCON signature scheme. In ICETE (2), pages 61–71.SciTePress, 2019. [86] Robert J. McEliece. A public-key cryptosystem based on algebraic codingtheory, 1978. JPL DSN Progress Report http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF. [87] David A. McGrew, Michael Curcio, and Scott R. Fluhrer. Hash-Based Signa-tures. RFC 8554, RFC Editor, 2019. [88] Carlos Aguilar Melchor, Nicolas Aragon, Slim Bettaieb, Loïc Bidoux, OlivierBlazy, Jurjen Bos, Jean-Christophe Deneuville, Philippe Gaborit, Edoardo Per-sichetti, Jean-Marc Robert, Pascal Véron, and Gilles Zémor. HQC (HammingQuasi-Cyclic). Round 3 submission to NIST post-quantum call for proposals,2020. http://pqc-hqc.org/. [89] Jose Maria Bermudo Mera, Angshuman Karmakar, and Ingrid Verbauwhede.Time-memory trade-off in Toom-Cook multiplication. IACR Transactions  on Cryptographic Hardware and Embedded Systems, 2020(2):222–244, 2020.https://tches.iacr.org/index.php/TCHES/article/view/8550. [90] Ralph C. Merkle. A certified digital signature. In Gilles Brassard, editor,  Advances in Cryptology – CRYPTO’89, volume 435 of Lecture Notes in Computer Science, pages 218–238. Springer, Heidelberg, August 1990.  [91] Vincent Migliore, Benoît Gérard, Mehdi Tibouchi, and Pierre-Alain Fouque.Masking Dilithium - efficient implementation and side-channel evaluation.In Robert H. Deng, Valérie Gauthier-Umaña, Martín Ochoa, and Moti Yung,editors, ACNS 19: 17th International Conference on Applied Cryptography and Network Security, volume 11464 of Lecture Notes in Computer Science, pages344–362. Springer, Heidelberg, June 2019.  [92] Michael Naehrig, Erdem Alkim, Joppe Bos, Léo Ducas, Karen Easterbrook,Brian LaMacchia, Patrick Longa, Ilya Mironov, Valeria Nikolaenko, Christo-pher Peikert, Ananth Raghunathan, and Douglas Stebila. FrodoKEM.Technical report, National Institute of Standards and Technology, 2020.available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [93] Harald Niederreiter. Knapsack-type cryptosystems and algebraic codingtheory. Problems of Control and Information Theory, 15(2):159–166, 1986. [94] Submission requirements and evaluation criteria for the post-quantumcryptography standardization process, 2016. https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf. [95] Status report on the second round of the nist post-quantum cryptographystandardization process, 2020. https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf. [96] Tobias Oder, Tobias Schneider, Thomas Pöppelmann, and Tim Güneysu.Practical CCA2-secure masked Ring-LWE implementations. IACR Transactions  on Cryptographic Hardware and Embedded Systems, 2018(1):142–174, 2018.https://tches.iacr.org/index.php/TCHES/article/view/836. [97] Tobias Oder, Julian Speith, Kira Höltgen, and Tim Güneysu. Towards prac-tical microcontroller implementation of the signature scheme Falcon. InJintai Ding and Rainer Steinwandt, editors, Post-Quantum Cryptography - 10th  International Conference, PQCrypto 2019, pages 65–80. Springer, Heidelberg,2019.  37  http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF http://ipnpr.jpl.nasa.gov/progress_report2/42-44/44N.PDF http://pqc-hqc.org/ https://tches.iacr.org/index.php/TCHES/article/view/8550 https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://csrc.nist.gov/CSRC/media/Projects/Post-Quantum-Cryptography/documents/call-for-proposals-final-dec-2016.pdf https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf https://nvlpubs.nist.gov/nistpubs/ir/2020/NIST.IR.8309.pdf https://tches.iacr.org/index.php/TCHES/article/view/836  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [98] Irem Keskinkurt Paksoy and Murat Cenk. TMVP-based Multiplication forPolynomial Quotient Rings and Application to Saber on ARM Cortex-M4.Cryptology ePrint Archive, Report 2020/1302, 2020. https://eprint.iacr.org/2020/1302. [99] Jacques Patarin. The oil and vinegar signature scheme. In Dagstuhl Workshop  on Cryptography September, 1997, 1997. [100] Trevor Perrin. Noise protocol framework, 2018. https://noiseprotocol.org/noise.pdf, Revision 34, 2018-07-11. [101] Thomas Pornin. New efficient, constant-time implementations of Falcon.Cryptology ePrint Archive, Report 2019/893, 2019. https://eprint.iacr.org/2019/893. [102] E. Prange. The use of information sets in decoding cyclic codes. IRE Transac-  tions, IT-8:S5–S9, 1962. [103] Thomas Prest, Pierre-Alain Fouque, Jeffrey Hoffstein, Paul Kirchner, VadimLyubashevsky, Thomas Pornin, Thomas Ricosset, Gregor Seiler, WilliamWhyte, and Zhenfei Zhang. FALCON. Technical report, National Institute ofStandards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [104] Prasanna Ravi, Sourav Sen Gupta, Anupam Chattopadhyay, and ShivamBhasin. Improving speed of Dilithium’s signing procedure. Cryptology ePrintArchive, Report 2019/420, 2019. https://eprint.iacr.org/2019/420. [105] Prasanna Ravi, Debapriya Basu Roy, Shivam Bhasin, Anupam Chattopad-hyay, and Debdeep Mukhopadhyay. Number “not used” once - practicalfault attack on pqm4 implementations of NIST candidates. In Ilia Polian andMarc Stöttinger, editors, COSADE 2019: 10th International Workshop on Con-  structive Side-Channel Analysis and Secure Design, volume 11421 of Lecture Notes in Computer Science, pages 232–250. Springer, Heidelberg, April 2019.  [106] Sujoy Sinha Roy and Andrea Basso. High-speed instruction-set coprocessorfor lattice-based key encapsulation mechanism: Saber in hardware. IACR Transactions on Cryptographic Hardware and Embedded Systems, 2020(4):443–466, 2020. https://tches.iacr.org/index.php/TCHES/article/view/8690.  [107] Tsunekazu Saito, Keita Xagawa, and Takashi Yamakawa. Tightly-secure key-encapsulation mechanism in the quantum random oracle model. In Jes-per Buus Nielsen and Vincent Rijmen, editors, Advances in Cryptology – EU- ROCRYPT 2018, Part III, volume 10822 of Lecture Notes in Computer Science,pages 520–551. Springer, Heidelberg, April / May 2018.  [108] Simona Samardjiska, Ming-Shing Chen, Andreas Hulsing, Joost Rijneveld,and Peter Schwabe. MQDSS. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [109] Thomas Schamberger, Oliver Mischke, and Johanna Sepúlveda. Practicalevaluation of masking for NTRUEncrypt on ARM cortex-M4. In Ilia Polianand Marc Stöttinger, editors, COSADE 2019: 10th International Workshop on  Constructive Side-Channel Analysis and Secure Design, volume 11421 of Lecture Notes in Computer Science, pages 253–269. Springer, Heidelberg, April 2019.  [110] John M. Schanck, Andreas Hulsing, Joost Rijneveld, and Peter Schwabe.NTRU-HRSS-KEM. Technical report, National Institute of Standardsand Technology, 2017. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions.  38  https://eprint.iacr.org/2020/1302 https://eprint.iacr.org/2020/1302 https://noiseprotocol.org/noise.pdf https://noiseprotocol.org/noise.pdf https://eprint.iacr.org/2019/893 https://eprint.iacr.org/2019/893 https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://eprint.iacr.org/2019/420 https://tches.iacr.org/index.php/TCHES/article/view/8690 https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions  POST-QUANTUM CRYPTOGRAPHY v2, May 2021  [111] Peter Schwabe, Roberto Avanzi, Joppe Bos, Léo Ducas, Eike Kiltz, TancrèdeLepoint, Vadim Lyubashevsky, John M. Schanck, Gregor Seiler, and DamienStehlé. CRYSTALS-KYBER. Technical report, National Institute of Stan-dards and Technology, 2020. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions. [112] S. Sinha Roy. SaberX4: High-Throughput Software Implementation of SaberKey Encapsulation Mechanism. In 2019 IEEE 37th International Conference on  Computer Design (ICCD), pages 321–324, 2019. [113] Daniel Smith-Tone and Ray Perlner. Rainbow band separation is better thanwe thought. Cryptology ePrint Archive, Report 2020/702, 2020. https://eprint.iacr.org/2020/702. [114] Bin Wang, Xiaozhuo Gu, and Yingshan Yang. Saber on ESP32. In MauroConti, Jianying Zhou, Emiliano Casalicchio, and Angelo Spognardi, editors,  ACNS 20: 18th International Conference on Applied Cryptography and Network Security, Part I, volume 12146 of Lecture Notes in Computer Science, pages421–440. Springer, Heidelberg, October 2020.  [115] Wen Wang, Jakub Szefer, and Ruben Niederhagen. FPGA-based key genera-tor for the niederreiter cryptosystem using binary goppa codes. In WielandFischer and Naofumi Homma, editors, Cryptographic Hardware and Embed- ded Systems – CHES 2017, volume 10529 of Lecture Notes in Computer Science,pages 253–274. Springer, Heidelberg, September 2017.  [116] Wen Wang, Jakub Szefer, and Ruben Niederhagen. FPGA-based niederreitercryptosystem using binary goppa codes. In Tanja Lange and Rainer Stein-wandt, editors, Post-Quantum Cryptography - 9th International Conference, PQCrypto 2018, pages 77–98. Springer, Heidelberg, 2018.  [117] Zhenfei Zhang, Cong Chen, Jeffrey Hoffstein, and William Whyte.NTRUEncrypt. Technical report, National Institute of Standardsand Technology, 2017. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions. [118] Zhenfei Zhang, Cong Chen, Jeffrey Hoffstein, William Whyte, John M.Schanck, Andreas Hulsing, Joost Rijneveld, Peter Schwabe, and OussamaDanba. NTRUEncrypt. Technical report, National Institute of Stan-dards and Technology, 2019. available at https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions. [119] Yihong Zhu, Min Zhu, Bohan Yang, Wenping Zhu, Chenchen Deng, ChenChen, Shaojun Wei, and Leibo Liu. A high-performance hardware implemen-tation of saber based on karatsuba algorithm. Cryptology ePrint Archive,Report 2020/1037, 2020. https://eprint.iacr.org/2020/1037. [120] Philip Zimmerman, Alan Johnston, and Jon Callas. ZRTP: Media Path KeyAgreement for Unicast Secure RTP. RFC 6189, RFC Editor, 2011.  39  https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-3-submissions https://eprint.iacr.org/2020/702 https://eprint.iacr.org/2020/702 https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-1-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://csrc.nist.gov/projects/post-quantum-cryptography/round-2-submissions https://eprint.iacr.org/2020/1037  ABOUT ENISA The European Union Agency for Cybersecurity, ENISA, is the Union’s agency dedicated to achieving a high common level of cybersecurity across Europe. Established in 2004 and strengthened by the EU Cybersecurity Act, the European Union Agency for Cybersecurity contributes to EU cyber policy, enhances the trustworthiness of ICT products, services and processes with cybersecurity certification schemes, cooperates with Member States and EU bodies, and helps Europe prepare for the cyber challenges of tomorrow. Through knowl- edge sharing, capacity building and awareness raising, the Agency works together with its key stakeholders to strengthen trust in the connected economy, to boost resilience of the Union’s infrastructure, and, ultimately, to keep Europe’s society and citizens digitally secure. More information about ENISA and its work can be found here: www.enisa.europa.eu.  ISBN 978-92-9204-468-8 DOI 10.2824/92307  www.enisa.europa.eu  Introduction  Families of Post-Quantum Algorithms  Code-based  Isogeny-based  Hash-based  Lattice-based  Multivariate-system based  The NIST Round 3 Candidates  Security Notions and Generic Transforms  PKE and KEMs  Security Notions, and Transforms  FO-transform  Digital Signatures  Identification schemes  Trapdoor Functions  One- and few-time signatures  Quantum adversaries  The quantum-accessible random oracle model  NIST Round 3 Finalists  Encryption Schemes  Classic McEliece  Crystals-Kyber  NTRU  Saber  Signature Schemes  Crystals-Dilithium  Falcon  Rainbow  Alternate Candidates  Encryption Schemes  Signature Schemes  Quantum Mitigation  Hybrid schemes  Protective measures for pre-quantum cryptography  Conclusions  Bibliography",
    "abstract": "This study provides an overview of the current state of affairs on the standardization process of Post-Quantum Cryptography (PQC). It presents the 5 main families of PQ algorithms; viz. code-based, isogeny-based, hash-based, lattice-based and multivariate-based. It also describes the NIST Round 3 finalists for encryption and signature schemes, as well as the alternative candidate schemes. Given that the NIST process will still run for a few years, the last chapter offers 2 proposals that system owners can implement now in order to protect the confidentiality of their data against a quantum capable attacker; namely hybrid implementations that use a combination of pre-quantum and post-quantum schemes, and the mixing of pre-shared keys into all keys established via public-key cryptography."
}
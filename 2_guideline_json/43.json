{
    "number": 43,
    "label": 2,
    "source": "NIST",
    "subject": "NIST Definition of Microservices, Application Containers and System Virtual Machines",
    "document(english)": "DRAFT Special Publication 800-180, NIST Definition of Microservices, Application Containers and System Virtual Machines  NIST Special Publication 800-180 (DRAFT) 1  2  3  NIST Definition of Microservices, 4  Application Containers and  5  System Virtual Machines 6  7  8  Anil Karmel 9  Ramaswamy Chandramouli 10  Michaela Iorga 11  12  13  14  15  This publication is available free of charge 16  17  18  19  C  O  M  P  U  T  E  R  S  E  C  U  R  I  T  Y 20  21  22  NIST Special Publication 800-180 (DRAFT) 23  24  NIST Definition of Microservices, 25  Application Containers and  26  System Virtual Machines 27  28  Anil Karmel 29  C2 Labs, Inc. 30  Reston, VA 31  32  Ramaswamy Chandramouli 33  Michaela Iorga. 34  Computer Security Division 35  Information Technology Laboratory 36  37  38  This publication is available free of charge 39  40  41  42  February 2016 43  44  45  46  47  U.S. Department of Commerce 48  Penny Pritzker, Secretary 49  50  National Institute of Standards and Technology  51  Willie May, Under Secretary of Commerce for Standards and Technology and Director 52  ii  Authority 53  This publication has been developed by NIST in accordance with its statutory responsibilities under the 54  Federal Information Security Modernization Act (FISMA) of 2014, 44 U.S.C. § 3541 et seq., Public Law  55  (P.L.) 113-283. NIST is responsible for developing information security standards and guidelines, 56  including minimum requirements for federal information systems, but such standards and guidelines shall 57  not apply to national security systems without the express approval of appropriate federal officials 58  exercising policy authority over such systems. This guideline is consistent with the requirements of the 59  Office of Management and Budget (OMB) Circular A-130. 60  Nothing in this publication should be taken to contradict the standards and guidelines made mandatory 61  and binding on federal agencies by the Secretary of Commerce under statutory authority. Nor should 62  these guidelines be interpreted as altering or superseding the existing authorities of the Secretary of 63  Commerce, Director of the OMB, or any other federal official.  This publication may be used by 64  nongovernmental organizations on a voluntary basis and is not subject to copyright in the United States. 65  Attribution would, however, be appreciated by NIST.  66  National Institute of Standards and Technology Special Publication 800-180 67  Natl. Inst. Stand. Technol. Spec. Publ. 800-180, 12 pages (February 2016) 68  CODEN: NSPUE2 69  This publication is available free of charge 70  71  Certain commercial entities, equipment, or materials may be identified in this document in order to describe an 72  experimental procedure or concept adequately. Such identification is not intended to imply recommendation or 73  endorsement by NIST, nor is it intended to imply that the entities, materials, or equipment are necessarily the best 74  available for the purpose.  75  There may be references in this publication to other publications currently under development by NIST in 76  accordance with its assigned statutory responsibilities. The information in this publication, including concepts and 77  methodologies, may be used by federal agencies even before the completion of such companion publications. Thus, 78  until each publication is completed, current requirements, guidelines, and procedures, where they exist, remain 79  operative. For planning and transition purposes, federal agencies may wish to closely follow the development of 80  these new publications by NIST.  81  Organizations are encouraged to review all draft publications during public comment periods and provide feedback 82  to NIST. All NIST Computer Security Division publications, other than the ones noted above, are available at 83  http://csrc.nist.gov/publications. 84  Comments on this publication may be submitted to: 85  Public comment period: February 18, 2016  through March 18, 2016 86  All comments are subject to release under the Freedom of Information Act (FOIA). 87  National Institute of Standards and Technology 88  Attn: Computer Security Division, Information Technology Laboratory 89  100 Bureau Drive (Mail Stop 8930) Gaithersburg, MD 20899-8930 90  Email: sec-cloudcomputing@nist.gov  91  92  http://csrc.nist.gov/publications  iii  Reports on Computer Systems Technology 93  The Information Technology Laboratory (ITL) at the National Institute of Standards and 94  Technology (NIST) promotes the U.S. economy and public welfare by providing technical 95  leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test 96  methods, reference data, proof of concept implementations, and technical analyses to advance 97  the development and productive use of information technology. ITL’s responsibilities include the 98  development of management, administrative, technical, and physical standards and guidelines for 99  the cost-effective security and privacy of other than national security-related information in 100  federal information systems. The Special Publication 800-series reports on ITL’s research, 101  guidelines, and outreach efforts in information system security, and its collaborative activities 102  with industry, government, and academic organizations. 103  Abstract 104  Many variations and definitions of application containers exist in industry, causing considerable 105  confusion amongst those who attempt to explain what a container is.  This document serves to 106  provide a NIST-standard definition to application containers, microservices which reside in 107  application containers and system virtual machines.  Furthermore, this document explains the 108  similarities and differences between a Services Oriented Architecture (SOA) and Microservices 109  as well as the similarities and differences between System Virtual Machines and Application 110  Containers. 111  Keywords 112  Application Containers; System Virtual Machines; Microservices; Services Oriented 113  Architecture  114  iv  Acknowledgements 115  Audience 116  The intended audience of this document is system planners, program managers, technologists, and others 117  as consumers or providers of cloud services. 118  Compliance with NIST Standards and Guidelines 119  The National Institute of Standards and Technology (NIST) developed this document in furtherance of its 120  statutory responsibilities under the Federal Information Security Management Act (FISMA) of 2014, 121  Public Law 113-283.  122  123  NIST is responsible for developing standards and guidelines, including minimum requirements, for 124  providing adequate information security for all agency operations and assets; but such standards and 125  guidelines shall not apply to national security systems. This guideline is consistent with the requirements 126  of the Office of Management and Budget (OMB) Circular A-130, Section 8b(3), “Securing Agency 127  Information Systems,” as analyzed in A-130, Appendix IV: Analysis of Key Sections. Supplemental 128  information is provided in A-130, Appendix III.  129  130  This guideline has been prepared for use by Federal agencies. It may be used by nongovernmental 131  organizations on a voluntary basis and is not subject to copyright, though attribution is desired.  132  133  Nothing in this document should be taken to contradict standards and guidelines made mandatory and 134  binding on Federal agencies by the Secretary of Commerce under statutory authority, nor should these 135  guidelines be interpreted as altering or superseding the existing authorities of the Secretary of Commerce, 136  Director of the OMB, or any other Federal official. 137  138  v  Executive Summary 139  Ubiquitous deployment of server or hardware virtualization has created a good understanding of 140  the semantics of the term Virtual Machines (VMs). Similarly, the web services deployment 141  paradigm that has been in vogue since the 1990’s to the 2000’s has created a fair agreement on 142  what constitutes a Service-Oriented Architecture (SOA). 143  However, a relatively recent trend is operating system-level virtualization using the concept of 144  application containers that run as isolated user space processes on top of an OS’s kernel. Because 145  of the close similarity between the core function provided by application containers and VMs 146  (i.e., isolation), there is a need to provide a formal definition of both these terms and outline their 147  similarities and differences. Further, these application containers are self-contained application 148  packages and are built using OS/library/binary components each providing an OS-level 149  capability.  150  Applications are decomposed into discrete components based on capabilities as opposed to 151  services and placed into application containers with the resulting deployment paradigm called a 152  Microservices Architecture. This Microservices Architecture, in turn, bears many similarities 153  with SOAs in terms of their modular construction and hence formal definitions for these two 154  terms are also needed in order to promote a common understanding among various stakeholders 155  in this technology space such as system architects, integrators etc. 156  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  vi  Table of Contents 157  Executive Summary ...................................................................................................... v 158  1 Introduction ............................................................................................................ 1 159  2 Background: Service-Oriented Architecture ....................................................... 2 160  3 Definition of Microservices ................................................................................... 2 161  4 Similarities and Differences between SOA and Microservices .......................... 2 162  5 Definition of Application Containers .................................................................... 3 163  6 Definition of System Virtual Machines (S-VM) ..................................................... 3 164  7 Similarities and Differences between S-VMs and Application Containers ....... 3 165  166  List of Appendices 167  Appendix A— Acronyms .............................................................................................. 4 168  Appendix B— References ............................................................................................ 5 169  170  List of Figures 171  Figure 1 – Differences between S-VMs and Application Containers ............................... 3 172  173  List of Tables 174  Table 1 – Comparison of Services Oriented Architecture and Microservices .................. 2 175  176  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  1  1 Introduction 177  A trend since the early 2000’s in data centers used for in-house enterprise applications and cloud 178  computing services is the increasing adoption of Hardware or Server Virtualization. Hardware 179  virtualization enables running multiple computing stacks called System Virtual Machines (S-180  VMs) on a single physical host. A S-VM in the context of hardware virtualization is made up of 181  a complete computing stack (or engine) consisting of one or more applications, Operating 182  System (called the Guest OS) and virtual hardware. S-VMs are able to perform their tasks due to 183  an intervening hardware emulation layer or hypervisor that runs between the S-VMs and the 184  hardware of the physical host. 185  Another trend is to virtualize applications at the OS layer. Just like multiple S-VMs run on the 186  same physical hardware, in this context, multiple instances of an entity called “Application 187  Containers” run on top of an OS’s kernel in user space. Just like hardware virtualization allows 188  multiple OS instances to run on a single physical host, application container technology allows 189  multiple isolated user space instances (processes) to be run on a single host. Application 190  containers are made of up application code (e.g., webserver or DBMS server) which has access 191  to a collection of libraries/binaries that represent an OS’s core capabilities. Each library 192  component provides a traditional OS function such as memory, namespace and processes needed 193  for that application code to work. The application container, when deployed, provides an 194  execution environment for applications in the form of isolated processes. 195  Application components that are placed into a container leverage a Microservices architecture. A 196  Microservices architecture can be contrasted with a Service-oriented architecture (SOA) wherein 197  Microservices consist of small, stateless, loosely coupled and isolated processes built around 198  capabilities as opposed to services. Microservices are independently deployable in Application 199  Containers, use less resources and can be created, destroyed, started and stopped far faster than 200  in a SOA.  201  Based on the discussion above, it should be clear that we need a formal definition of the building 202  blocks of these emerging technologies such as Application Containers & Microservices 203  architecture as well as their closely related counterparts – S-VMs & SOA along with an 204  explanation of similarities and differences. The objective of this document is to provide those 205  definitions, similarities and differences so as to create a common understanding of the semantics 206  of these terms.  207  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  2  2 Background: Service-Oriented Architecture 208  Assembling an enterprise-scale solutions or individual system from distributed services is a well-209  established architectural approach referred to as service-oriented architecture (SOA) [2]. A SOA 210  is an architectural pattern for integrating business processes and supporting IT infrastructure 211  wherein application components are decomposed into self-contained services that communicate 212  with each other using a communications protocol and a set of well-defined Application 213  Programming Interfaces (APIs), independent of any vendor, product or technology.  214  SOA allows services to be reused and combined to address changing business priorities.  215  3 Definition of Microservices 216  Microservices: A microservice is a basic element that results from the architectural 217  decomposition of an application’s components into loosely coupled patterns consisting of self-218  contained services that communicate with each other using a standard communications protocol 219  and a set of well-defined APIs, independent of any vendor, product or technology.  220  Microservices are built around capabilities as opposed to services, builds on SOA and is 221  implemented using Agile techniques.  Microservices are typically deployed inside Application 222  Containers. 223  4 Similarities and Differences between SOA and Microservices 224  SOA and Microservices share several similarities and differences that are outlined below. 225  Table 1 – Comparison of Services Oriented Architecture and Microservices 226  Services Oriented Architecture Microservices  Self-contained, monolithic services Small, decomposed, isolated and  independently deployable services  Communications between services  occur through an enterprise service  bus  Communications between services  occur through lightweight, standard  communications protocols and  interfaces  Stateful and requires mapping of  service dependencies when changes  are introduced  Stateless and less fragile when  changes are introduced  Longer start/stop times Quick start/stop times  Built around services Built around capabilities  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  3  5 Definition of Application Containers 227  Application Containers: An Application Container is a construct designed to package and run 228  an application or its’ components running on a shared Operating System.  229  Application Containers are isolated from other Application Containers and share the resources of 230  the underlying Operating System, allowing for efficient restart, scale-up or scale-out of 231  applications across clouds. Application Containers typically contain Microservices. 232  6 Definition of System Virtual Machines (S-VM) 233  System Virtual Machines: A System Virtual Machine (S-VM) is a software implementation of a 234  complete system platform that supports the execution of a complete operating system and 235  corresponding applications in a cloud.  236  Each S-VM serves as an efficient, isolated duplicate of a real machine running on a cluster of 237  physical machines. 238  7 Similarities and Differences between S-VMs and Application Containers 239  S-VMs abstract the Operating System from the underlying hardware, allowing for multiple 240  Operating Systems and Application to share a single system’s physical compute resources.  241  Application Containers abstract the Application from the underlying Operating System, allowing 242  for multiple Applications to share a single system’s Operating System and underlying physical 243  compute resources 244  The following figure depicts the difference between System Virtual Machines and Application 245  Containers 246  247  Figure 1 – Differences between S-VMs and Application Containers 248  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  4  Appendix A—Acronyms  249  Selected acronyms and abbreviations used in this paper are defined below. 250  API Application Programming Interface  OS Operating System  SOA Service-Oriented Architecture  S-VM System Virtual Machine  251  252  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  5  Appendix B—References 253  [1] Federal Information Security Management Act of 2002, Pub. L. 107-347  (Title III), 116 Stat 2946. http://www.gpo.gov/fdsys/pkg/PLAW-  107publ347/pdf/PLAW-107publ347.pdf.  [2] Executing SOA: A Practical Guide for the Service-Oriented Architect,  IBM  Press, 2008, 240pp. https://books.google.com/books?id=VIrz5v4MMkgC  254  http://www.gpo.gov/fdsys/pkg/PLAW-107publ347/pdf/PLAW-107publ347.pdf http://www.gpo.gov/fdsys/pkg/PLAW-107publ347/pdf/PLAW-107publ347.pdf",
    "original document": "DRAFT Special Publication 800-180, NIST Definition of Microservices, Application Containers and System Virtual Machines  NIST Special Publication 800-180 (DRAFT) 1  2  3  NIST Definition of Microservices, 4  Application Containers and  5  System Virtual Machines 6  7  8  Anil Karmel 9  Ramaswamy Chandramouli 10  Michaela Iorga 11  12  13  14  15  This publication is available free of charge 16  17  18  19  C  O  M  P  U  T  E  R  S  E  C  U  R  I  T  Y 20  21  22  NIST Special Publication 800-180 (DRAFT) 23  24  NIST Definition of Microservices, 25  Application Containers and  26  System Virtual Machines 27  28  Anil Karmel 29  C2 Labs, Inc. 30  Reston, VA 31  32  Ramaswamy Chandramouli 33  Michaela Iorga. 34  Computer Security Division 35  Information Technology Laboratory 36  37  38  This publication is available free of charge 39  40  41  42  February 2016 43  44  45  46  47  U.S. Department of Commerce 48  Penny Pritzker, Secretary 49  50  National Institute of Standards and Technology  51  Willie May, Under Secretary of Commerce for Standards and Technology and Director 52  ii  Authority 53  This publication has been developed by NIST in accordance with its statutory responsibilities under the 54  Federal Information Security Modernization Act (FISMA) of 2014, 44 U.S.C. § 3541 et seq., Public Law  55  (P.L.) 113-283. NIST is responsible for developing information security standards and guidelines, 56  including minimum requirements for federal information systems, but such standards and guidelines shall 57  not apply to national security systems without the express approval of appropriate federal officials 58  exercising policy authority over such systems. This guideline is consistent with the requirements of the 59  Office of Management and Budget (OMB) Circular A-130. 60  Nothing in this publication should be taken to contradict the standards and guidelines made mandatory 61  and binding on federal agencies by the Secretary of Commerce under statutory authority. Nor should 62  these guidelines be interpreted as altering or superseding the existing authorities of the Secretary of 63  Commerce, Director of the OMB, or any other federal official.  This publication may be used by 64  nongovernmental organizations on a voluntary basis and is not subject to copyright in the United States. 65  Attribution would, however, be appreciated by NIST.  66  National Institute of Standards and Technology Special Publication 800-180 67  Natl. Inst. Stand. Technol. Spec. Publ. 800-180, 12 pages (February 2016) 68  CODEN: NSPUE2 69  This publication is available free of charge 70  71  Certain commercial entities, equipment, or materials may be identified in this document in order to describe an 72  experimental procedure or concept adequately. Such identification is not intended to imply recommendation or 73  endorsement by NIST, nor is it intended to imply that the entities, materials, or equipment are necessarily the best 74  available for the purpose.  75  There may be references in this publication to other publications currently under development by NIST in 76  accordance with its assigned statutory responsibilities. The information in this publication, including concepts and 77  methodologies, may be used by federal agencies even before the completion of such companion publications. Thus, 78  until each publication is completed, current requirements, guidelines, and procedures, where they exist, remain 79  operative. For planning and transition purposes, federal agencies may wish to closely follow the development of 80  these new publications by NIST.  81  Organizations are encouraged to review all draft publications during public comment periods and provide feedback 82  to NIST. All NIST Computer Security Division publications, other than the ones noted above, are available at 83  http://csrc.nist.gov/publications. 84  Comments on this publication may be submitted to: 85  Public comment period: February 18, 2016  through March 18, 2016 86  All comments are subject to release under the Freedom of Information Act (FOIA). 87  National Institute of Standards and Technology 88  Attn: Computer Security Division, Information Technology Laboratory 89  100 Bureau Drive (Mail Stop 8930) Gaithersburg, MD 20899-8930 90  Email: sec-cloudcomputing@nist.gov  91  92  http://csrc.nist.gov/publications  iii  Reports on Computer Systems Technology 93  The Information Technology Laboratory (ITL) at the National Institute of Standards and 94  Technology (NIST) promotes the U.S. economy and public welfare by providing technical 95  leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test 96  methods, reference data, proof of concept implementations, and technical analyses to advance 97  the development and productive use of information technology. ITL’s responsibilities include the 98  development of management, administrative, technical, and physical standards and guidelines for 99  the cost-effective security and privacy of other than national security-related information in 100  federal information systems. The Special Publication 800-series reports on ITL’s research, 101  guidelines, and outreach efforts in information system security, and its collaborative activities 102  with industry, government, and academic organizations. 103  Abstract 104  Many variations and definitions of application containers exist in industry, causing considerable 105  confusion amongst those who attempt to explain what a container is.  This document serves to 106  provide a NIST-standard definition to application containers, microservices which reside in 107  application containers and system virtual machines.  Furthermore, this document explains the 108  similarities and differences between a Services Oriented Architecture (SOA) and Microservices 109  as well as the similarities and differences between System Virtual Machines and Application 110  Containers. 111  Keywords 112  Application Containers; System Virtual Machines; Microservices; Services Oriented 113  Architecture  114  iv  Acknowledgements 115  Audience 116  The intended audience of this document is system planners, program managers, technologists, and others 117  as consumers or providers of cloud services. 118  Compliance with NIST Standards and Guidelines 119  The National Institute of Standards and Technology (NIST) developed this document in furtherance of its 120  statutory responsibilities under the Federal Information Security Management Act (FISMA) of 2014, 121  Public Law 113-283.  122  123  NIST is responsible for developing standards and guidelines, including minimum requirements, for 124  providing adequate information security for all agency operations and assets; but such standards and 125  guidelines shall not apply to national security systems. This guideline is consistent with the requirements 126  of the Office of Management and Budget (OMB) Circular A-130, Section 8b(3), “Securing Agency 127  Information Systems,” as analyzed in A-130, Appendix IV: Analysis of Key Sections. Supplemental 128  information is provided in A-130, Appendix III.  129  130  This guideline has been prepared for use by Federal agencies. It may be used by nongovernmental 131  organizations on a voluntary basis and is not subject to copyright, though attribution is desired.  132  133  Nothing in this document should be taken to contradict standards and guidelines made mandatory and 134  binding on Federal agencies by the Secretary of Commerce under statutory authority, nor should these 135  guidelines be interpreted as altering or superseding the existing authorities of the Secretary of Commerce, 136  Director of the OMB, or any other Federal official. 137  138  v  Executive Summary 139  Ubiquitous deployment of server or hardware virtualization has created a good understanding of 140  the semantics of the term Virtual Machines (VMs). Similarly, the web services deployment 141  paradigm that has been in vogue since the 1990’s to the 2000’s has created a fair agreement on 142  what constitutes a Service-Oriented Architecture (SOA). 143  However, a relatively recent trend is operating system-level virtualization using the concept of 144  application containers that run as isolated user space processes on top of an OS’s kernel. Because 145  of the close similarity between the core function provided by application containers and VMs 146  (i.e., isolation), there is a need to provide a formal definition of both these terms and outline their 147  similarities and differences. Further, these application containers are self-contained application 148  packages and are built using OS/library/binary components each providing an OS-level 149  capability.  150  Applications are decomposed into discrete components based on capabilities as opposed to 151  services and placed into application containers with the resulting deployment paradigm called a 152  Microservices Architecture. This Microservices Architecture, in turn, bears many similarities 153  with SOAs in terms of their modular construction and hence formal definitions for these two 154  terms are also needed in order to promote a common understanding among various stakeholders 155  in this technology space such as system architects, integrators etc. 156  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  vi  Table of Contents 157  Executive Summary ...................................................................................................... v 158  1 Introduction ............................................................................................................ 1 159  2 Background: Service-Oriented Architecture ....................................................... 2 160  3 Definition of Microservices ................................................................................... 2 161  4 Similarities and Differences between SOA and Microservices .......................... 2 162  5 Definition of Application Containers .................................................................... 3 163  6 Definition of System Virtual Machines (S-VM) ..................................................... 3 164  7 Similarities and Differences between S-VMs and Application Containers ....... 3 165  166  List of Appendices 167  Appendix A— Acronyms .............................................................................................. 4 168  Appendix B— References ............................................................................................ 5 169  170  List of Figures 171  Figure 1 – Differences between S-VMs and Application Containers ............................... 3 172  173  List of Tables 174  Table 1 – Comparison of Services Oriented Architecture and Microservices .................. 2 175  176  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  1  1 Introduction 177  A trend since the early 2000’s in data centers used for in-house enterprise applications and cloud 178  computing services is the increasing adoption of Hardware or Server Virtualization. Hardware 179  virtualization enables running multiple computing stacks called System Virtual Machines (S-180  VMs) on a single physical host. A S-VM in the context of hardware virtualization is made up of 181  a complete computing stack (or engine) consisting of one or more applications, Operating 182  System (called the Guest OS) and virtual hardware. S-VMs are able to perform their tasks due to 183  an intervening hardware emulation layer or hypervisor that runs between the S-VMs and the 184  hardware of the physical host. 185  Another trend is to virtualize applications at the OS layer. Just like multiple S-VMs run on the 186  same physical hardware, in this context, multiple instances of an entity called “Application 187  Containers” run on top of an OS’s kernel in user space. Just like hardware virtualization allows 188  multiple OS instances to run on a single physical host, application container technology allows 189  multiple isolated user space instances (processes) to be run on a single host. Application 190  containers are made of up application code (e.g., webserver or DBMS server) which has access 191  to a collection of libraries/binaries that represent an OS’s core capabilities. Each library 192  component provides a traditional OS function such as memory, namespace and processes needed 193  for that application code to work. The application container, when deployed, provides an 194  execution environment for applications in the form of isolated processes. 195  Application components that are placed into a container leverage a Microservices architecture. A 196  Microservices architecture can be contrasted with a Service-oriented architecture (SOA) wherein 197  Microservices consist of small, stateless, loosely coupled and isolated processes built around 198  capabilities as opposed to services. Microservices are independently deployable in Application 199  Containers, use less resources and can be created, destroyed, started and stopped far faster than 200  in a SOA.  201  Based on the discussion above, it should be clear that we need a formal definition of the building 202  blocks of these emerging technologies such as Application Containers & Microservices 203  architecture as well as their closely related counterparts – S-VMs & SOA along with an 204  explanation of similarities and differences. The objective of this document is to provide those 205  definitions, similarities and differences so as to create a common understanding of the semantics 206  of these terms.  207  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  2  2 Background: Service-Oriented Architecture 208  Assembling an enterprise-scale solutions or individual system from distributed services is a well-209  established architectural approach referred to as service-oriented architecture (SOA) [2]. A SOA 210  is an architectural pattern for integrating business processes and supporting IT infrastructure 211  wherein application components are decomposed into self-contained services that communicate 212  with each other using a communications protocol and a set of well-defined Application 213  Programming Interfaces (APIs), independent of any vendor, product or technology.  214  SOA allows services to be reused and combined to address changing business priorities.  215  3 Definition of Microservices 216  Microservices: A microservice is a basic element that results from the architectural 217  decomposition of an application’s components into loosely coupled patterns consisting of self-218  contained services that communicate with each other using a standard communications protocol 219  and a set of well-defined APIs, independent of any vendor, product or technology.  220  Microservices are built around capabilities as opposed to services, builds on SOA and is 221  implemented using Agile techniques.  Microservices are typically deployed inside Application 222  Containers. 223  4 Similarities and Differences between SOA and Microservices 224  SOA and Microservices share several similarities and differences that are outlined below. 225  Table 1 – Comparison of Services Oriented Architecture and Microservices 226  Services Oriented Architecture Microservices  Self-contained, monolithic services Small, decomposed, isolated and  independently deployable services  Communications between services  occur through an enterprise service  bus  Communications between services  occur through lightweight, standard  communications protocols and  interfaces  Stateful and requires mapping of  service dependencies when changes  are introduced  Stateless and less fragile when  changes are introduced  Longer start/stop times Quick start/stop times  Built around services Built around capabilities  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  3  5 Definition of Application Containers 227  Application Containers: An Application Container is a construct designed to package and run 228  an application or its’ components running on a shared Operating System.  229  Application Containers are isolated from other Application Containers and share the resources of 230  the underlying Operating System, allowing for efficient restart, scale-up or scale-out of 231  applications across clouds. Application Containers typically contain Microservices. 232  6 Definition of System Virtual Machines (S-VM) 233  System Virtual Machines: A System Virtual Machine (S-VM) is a software implementation of a 234  complete system platform that supports the execution of a complete operating system and 235  corresponding applications in a cloud.  236  Each S-VM serves as an efficient, isolated duplicate of a real machine running on a cluster of 237  physical machines. 238  7 Similarities and Differences between S-VMs and Application Containers 239  S-VMs abstract the Operating System from the underlying hardware, allowing for multiple 240  Operating Systems and Application to share a single system’s physical compute resources.  241  Application Containers abstract the Application from the underlying Operating System, allowing 242  for multiple Applications to share a single system’s Operating System and underlying physical 243  compute resources 244  The following figure depicts the difference between System Virtual Machines and Application 245  Containers 246  247  Figure 1 – Differences between S-VMs and Application Containers 248  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  4  Appendix A—Acronyms  249  Selected acronyms and abbreviations used in this paper are defined below. 250  API Application Programming Interface  OS Operating System  SOA Service-Oriented Architecture  S-VM System Virtual Machine  251  252  NIST SP 800-180  NIST Definition of Microservices, Application Containers  and System Virtual Machines  5  Appendix B—References 253  [1] Federal Information Security Management Act of 2002, Pub. L. 107-347  (Title III), 116 Stat 2946. http://www.gpo.gov/fdsys/pkg/PLAW-  107publ347/pdf/PLAW-107publ347.pdf.  [2] Executing SOA: A Practical Guide for the Service-Oriented Architect,  IBM  Press, 2008, 240pp. https://books.google.com/books?id=VIrz5v4MMkgC  254  http://www.gpo.gov/fdsys/pkg/PLAW-107publ347/pdf/PLAW-107publ347.pdf http://www.gpo.gov/fdsys/pkg/PLAW-107publ347/pdf/PLAW-107publ347.pdf",
    "abstract": ""
}
{
    "number": 6,
    "label": 2,
    "source": "NIST",
    "subject": "Automated Secure Configuration Guidance from the macOS Security Compliance Project (mSCP)",
    "document(english)": "NIST SP 800-219r1 initial public draft, Automated Secure Configuration Guidance from the macOS Security Compliance Project (mSCP)  NIST Special Publication 1  NIST SP 800-219r1 ipd 2  Automated Secure Configuration 3  Guidance from the macOS 4  Security Compliance Project 5  (mSCP) 6  7  Initial Public Draft 8  9  Mark Trapnell 10  Eric Trapnell 11  Murugiah Souppaya 12  Bob Gendler 13  Karen Scarfone 14  This publication is available free of charge from: 15  https://doi.org/10.6028/NIST.SP.800-219r1.ipd 16  17  18  https://crossmark.crossref.org/dialog/?doi=10.6028/NIST.SP.800-219r1.ipd  NIST Special Publication  19  NIST SP 800-219r1 ipd 20  Automated Secure Configuration 21  Guidance from the macOS 22  Security Compliance Project 23  (mSCP) 24  25  Initial Public Draft 26  27  Mark Trapnell  Eric Trapnell  Murugiah Souppaya  Computer Security Division  Information Technology Laboratory  Bob Gendler  Customer Access and Support Division  Office of Information Systems Management  Karen Scarfone  Scarfone Cybersecurity  This publication is available free of charge from: 28  https://doi.org/10.6028/NIST.SP.800-219r1.ipd 29  March 2023 30  31  U.S. Department of Commerce 32  Gina M. Raimondo, Secretary 33  National Institute of Standards and Technology  34  Laurie E. Locascio, NIST Director and Undersecretary of Commerce for Standards and Technology35  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  Certain commercial equipment, instruments, software, or materials, commercial or non-commercial, are identified in 36  this paper in order to specify the experimental procedure adequately. Such identification does not imply 37  recommendation or endorsement of any product or service by NIST, nor does it imply that the materials or 38  equipment identified are necessarily the best available for the purpose. 39  There may be references in this publication to other publications currently under development by NIST in 40  accordance with its assigned statutory responsibilities. The information in this publication, including concepts and 41  methodologies, may be used by federal agencies even before the completion of such companion publications. Thus, 42  until each publication is completed, current requirements, guidelines, and procedures, where they exist, remain 43  operative. For planning and transition purposes, federal agencies may wish to closely follow the development of 44  these new publications by NIST.  45  Organizations are encouraged to review all draft publications during public comment periods and provide feedback 46  to NIST. Many NIST cybersecurity publications, other than the ones noted above, are available at 47  https://csrc.nist.gov/publications. 48  Authority 49  This publication has been developed by NIST in accordance with its statutory responsibilities under the Federal 50  Information Security Modernization Act (FISMA) of 2014, 44 U.S.C. § 3551 et seq., Public Law (P.L.) 113-283. 51  NIST is responsible for developing information security standards and guidelines, including minimum requirements 52  for federal information systems, but such standards and guidelines shall not apply to national security systems 53  without the express approval of appropriate federal officials exercising policy authority over such systems. This 54  guideline is consistent with the requirements of the Office of Management and Budget (OMB) Circular A-130. 55  56  Nothing in this publication should be taken to contradict the standards and guidelines made mandatory and binding 57  on federal agencies by the Secretary of Commerce under statutory authority. Nor should these guidelines be 58  interpreted as altering or superseding the existing authorities of the Secretary of Commerce, Director of the OMB, or 59  any other federal official.  This publication may be used by nongovernmental organizations on a voluntary basis and 60  is not subject to copyright in the United States. Attribution would, however, be appreciated by NIST.  61  NIST Technical Series Policies 62  Copyright, Use, and Licensing Statements 63  NIST Technical Series Publication Identifier Syntax 64  Publication History 65  Approved by the NIST Editorial Review Board on YYYY-MM-DD [will be added upon final completion] 66  Supersedes NIST Series XXX (Month Year) DOI [will be added upon final completion] 67  How to Cite this NIST Technical Series Publication:  68  Trapnell M, Trapnell E, Souppaya MP, Gendler B, Scarfone K (2023) Automated Secure Configuration Guidance 69  from the macOS Security Compliance Project (mSCP). (National Institute of Standards and Technology, 70  Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-219r1 ipd. https://doi.org/10.6028/NIST.SP.800-71  219r1.ipd  72  Author ORCID iDs 73  Mark Trapnell: 0000-0002-5266-3610 74  Eric Trapnell: 0000-0001-9315-3732 75  Murugiah Souppaya: 0000-0002-8055-8527 76  Bob Gendler: 0000-0002-8928-6492 77  https://csrc.nist.gov/publications https://doi.org/10.6028/NIST-TECHPUBS.CROSSMARK-POLICY https://www.nist.gov/document/publication-identifier-syntax-nist-technical-series-publications  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  Karen Scarfone: 0000-0001-6334-9486 78  Public Comment Period 79  March 13, 2023 – April 27, 2023 80  Contact Information 81  applesec@nist.gov 82  83  National Institute of Standards and Technology 84  Attn: Computer Security Division, Information Technology Laboratory 85  100 Bureau Drive (Mail Stop 8930) Gaithersburg, MD 20899-8930 86  All comments are subject to release under the Freedom of Information Act (FOIA).87  mailto:applesec@nist.gov  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  i  Abstract 88  The macOS Security Compliance Project (mSCP) provides resources that system administrators, 89  security professionals, security policy authors, information security officers, and auditors can 90  leverage to secure and assess macOS desktop and laptop system security in an automated way. 91  This publication introduces the mSCP and gives an overview of the resources available from the 92  project’s GitHub site, which is continuously curated and updated to support each new release of 93  macOS. The GitHub site provides practical, actionable recommendations in the form of secure 94  baselines and associated rules. This publication also describes use cases for leveraging the mSCP 95  content. Updates from the previous version of this publication mainly involve the new mSCP 96  capability to create a custom benchmark by tailoring a baseline. 97  Keywords 98  Apple; baseline; configuration management; endpoint device security; macOS; macOS Security 99  Compliance Project (mSCP); operating system security; security compliance. 100  Reports on Computer Systems Technology 101  The Information Technology Laboratory (ITL) at the National Institute of Standards and 102  Technology (NIST) promotes the U.S. economy and public welfare by providing technical 103  leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test 104  methods, reference data, proof of concept implementations, and technical analyses to advance 105  the development and productive use of information technology. ITL’s responsibilities include the 106  development of management, administrative, technical, and physical standards and guidelines for 107  the cost-effective security and privacy of other than national security-related information in 108  federal information systems. The Special Publication 800-series reports on ITL’s research, 109  guidelines, and outreach efforts in information system security, and its collaborative activities 110  with industry, government, and academic organizations. 111  112  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  ii  Supplemental Content 113  The mSCP’s GitHub site is at https://github.com/usnistgov/macos_security#readme, and the 114  project documentation wiki is at https://github.com/usnistgov/macos_security/wiki.  115  Trademark Information  116  All registered trademarks or trademarks belong to their respective organizations. 117  https://github.com/usnistgov/macos_security#readme https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  iii  Call for Patent Claims 118  This public review includes a call for information on essential patent claims (claims whose use 119  would be required for compliance with the guidance or requirements in this Information 120  Technology Laboratory (ITL) draft publication). Such guidance and/or requirements may be 121  directly stated in this ITL Publication or by reference to another publication. This call also 122  includes disclosure, where known, of the existence of pending U.S. or foreign patent applications 123  relating to this ITL draft publication and of any relevant unexpired U.S. or foreign patents. 124  ITL may require from the patent holder, or a party authorized to make assurances on its behalf, 125  in written or electronic form, either: 126  a) assurance in the form of a general disclaimer to the effect that such party does not hold 127  and does not currently intend holding any essential patent claim(s); or 128  b) assurance that a license to such essential patent claim(s) will be made available to 129  applicants desiring to utilize the license for the purpose of complying with the guidance 130  or requirements in this ITL draft publication either: 131  i. under reasonable terms and conditions that are demonstrably free of any unfair 132  discrimination; or 133  ii. without compensation and under reasonable terms and conditions that are 134  demonstrably free of any unfair discrimination. 135  Such assurance shall indicate that the patent holder (or third party authorized to make assurances 136  on its behalf) will include in any documents transferring ownership of patents subject to the 137  assurance, provisions sufficient to ensure that the commitments in the assurance are binding on 138  the transferee, and that the transferee will similarly include appropriate provisions in the event of 139  future transfers with the goal of binding each successor-in-interest. 140  The assurance shall also indicate that it is intended to be binding on successors-in-interest 141  regardless of whether such provisions are included in the relevant transfer documents. 142  Such statements should be addressed to: applesec@nist.gov  143  mailto:applesec@nist.gov  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  iv  Table of Contents 144  Introduction ...................................................................................................................... 1 145  Purpose and Scope .................................................................................................... 1 146  Audience .................................................................................................................... 1 147  Relevance to NIST SP 800-70 and the National Checklist Program ........................... 2 148  Document Structure .................................................................................................... 2 149  Project Description .......................................................................................................... 3 150  Project Goals .............................................................................................................. 3 151  mSCP Content Use .................................................................................................... 4 152  mSCP Components .......................................................................................................... 6 153  Baselines and Benchmarks ........................................................................................ 6 154  Security Baseline Files ............................................................................................... 6 155  3.2.1. Rule File Composition ............................................................................................. 7 156  3.2.2. Rule File Categories ............................................................................................... 9 157  Configuration Profiles and Scripts ..............................................................................10 158  Content Generation Scripts ........................................................................................10 159  3.4.1. Generate Baseline Script .......................................................................................10 160  3.4.2. Generate Guidance Script .....................................................................................10 161  3.4.3. macOS Security Compliance Tool .........................................................................11 162  3.4.4. SCAP Generation Script ........................................................................................11 163  3.4.5. Generate Mapping Script .......................................................................................11 164  Customization ............................................................................................................12 165  Directories .................................................................................................................12 166  References ..............................................................................................................................14 167  Appendix A. mSCP User Roles .........................................................................................15 168  Appendix B. Example of mSCP Usage by a Security Professional ................................16 169  Appendix C. Example of Creating a Benchmark Using ODVs ........................................21 170  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor .......................23 171  Appendix E. List of Symbols, Abbreviations, and Acronyms ........................................25 172  Appendix F. Change Log ..................................................................................................26 173  Table of Figures 174  Fig. 1. Security Baseline YAML File ........................................................................................... 7 175  Fig. 2. YAML Rule File ............................................................................................................... 9 176  Fig. 3. Compliance Script Sample Output ..................................................................................11 177  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  v  Fig. 4. Downloading the mSCP code .........................................................................................16 178  Fig. 5. Changing the directory to the mSCP git folder ................................................................16 179  Fig. 6. Changing code branches and generating a baseline ......................................................17 180  Fig. 7. Generating the compliance checker script and configuration profiles .............................17 181  Fig. 8. Running the compliance checker script ..........................................................................17 182  Fig. 9. Selecting run new compliance scan from the main menu ...............................................18 183  Fig. 10. Compliance scan output ...............................................................................................18 184  Fig. 11. Compliance report ........................................................................................................19 185  Fig. 12. Disclaimer for non-compliant settings remediation .......................................................19 186  Fig. 13. Interactive application of compliant settings .................................................................20 187  Fig. 14. Generate Baseline Command ......................................................................................21 188  Fig. 15. Prompt for Bencbmark Name .......................................................................................21 189  Fig. 16. Prompts for Rule File Inclusion .....................................................................................21 190  Fig. 17. Display Rule Description ..............................................................................................22 191  Fig. 18. Rule Prompting for an ODV ..........................................................................................22 192  193  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  vi  Acknowledgments 194  The authors wish to thank Jason Blake, Blair Heiserman, and Stephanie Roberts from NIST; 195  Allen Golbig from Jamf; Dan Brodjieski, Gary Gapinski, Elyse Anderson, and Joshua Glemza 196  from NASA; and Jamie Richardson and Chris Stone from Apple for their contributions to the 197  mSCP. The authors appreciate Bob McSulla and Ryan Jaynes from Tenable for developing audit 198  files based on the mSCP, testing the baselines for different macOS versions, and contributing to 199  Appendix C. The authors also thank Isabel Van Wyk from NIST for editing the document. 200  Finally, portions of this document are based on content from the mSCP Wiki, so the work of all 201  Wiki contributors is appreciated. 202  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  1  Introduction 203  The National Institute of Standards and Technology (NIST) has traditionally published secure 204  configuration guides for Apple desktop/laptop operating system versions as prose-based Special 205  Publications (SPs), such as NIST SP 800-179, Revision 1, Guide to Securing Apple macOS 10.12 206  Systems for IT Professionals: A NIST Security Configuration Checklist. In order to provide 207  security configuration guidance to organizations more quickly and in a machine-consumable 208  format, NIST established the open-source macOS Security Compliance Project (mSCP). NIST 209  no longer produces SP guidance documents for each macOS release; instead, the mSCP 210  continuously curates and updates machine-consumable macOS guidance. The latest macOS 211  security baseline content is maintained and updated on the mSCP GitHub page [1].  212  Security baselines are groups of settings used to configure a system to meet a target level or set 213  of requirements or to verify that a system complies with requirements. The mSCP seeks to 214  simplify the macOS security development cycle by reducing the amount of effort required to 215  implement security baselines. This collaboration between federal agencies minimizes duplicate 216  effort that would otherwise be needed for these agencies to administer individual security 217  baselines. Additionally, the secure baseline content provided is easily extensible by other parties 218  to implement their own security requirements.  219  Organizations using mSCP content, particularly security baseline examples, should take a risk-220  based approach for selecting the appropriate settings and defining values that consider the 221  context under which the baseline will be utilized. 222  Purpose and Scope 223  The purpose of this document is to introduce the mSCP to broader audiences. This document 224  provides a high-level overview of the mSCP, its components, and some common use cases. It 225  refers readers to the online project documentation for in-depth technical information and use 226  instructions. This document is intended to be independent of macOS version releases; updates 227  will be released as needed when there are substantial changes to the mSCP.  Updates from the 228  previous release of this document mainly involve the new mSCP capability to create a custom 229  benchmark by tailoring a baseline. 230  The information in this document regarding the details of the mSCP GitHub site is accurate as of 231  the time of publication. Readers seeking the latest detailed information on mSCP content or the 232  content itself should visit the mSCP GitHub page and wiki. 233  Organizations that need to reference a NIST SP to demonstrate how they are complying with 234  United States Government mandates for adopting secure configurations for their macOS devices 235  may reference this SP instead of its deprecated predecessors, such as SP 800-179 or SP 800-179, 236  Revision 1. 237  Audience 238  This document and the mSCP GitHub site are intended for system administrators, security 239  professionals, policy authors, privacy officers, and auditors who have responsibilities involving 240  https://github.com/usnistgov/macos_security https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  2  macOS security. Additionally, vendors of device management, security, configuration 241  assessment, and compliance tools that support macOS may find this document and the GitHub 242  site to be helpful. 243  Relevance to NIST SP 800-70 and the National Checklist Program 244  The security baselines from the mSCP GitHub page are included in the National Checklist 245  Program. NIST SP 800-70, Revision 4 [2], explains that federal agencies are required to use 246  appropriate security configuration checklists from the National Checklist Program when 247  available. Part 39 of the Federal Acquisition Regulations, Section 39.101 paragraph (c) states,  248  In acquiring information technology, agencies shall include the 249  appropriate information technology security policies and requirements, 250  including use of common security configurations available from the 251  National Institute of Standards and Technology’s website at 252  https://checklists.nist.gov. Agency contracting officers should consult 253  with the requiring official to ensure the appropriate standards are 254  incorporated. 255  Document Structure 256  The remaining sections and appendices of this document are as follows: 257  • Section 2 provides an overview of the project, including what its goals are and how its 258  content can be used. 259  • Section 3 explains the major components of the mSCP and provides pointers to additional 260  information on component usage. 261  • The References section lists the references for the document. 262  • Appendix A briefly discusses how mSCP can help meet the needs of people in several 263  roles. 264  • Appendix B provides examples of how a security professional might use mSCP content. 265  • Appendix C contains an example of how an assessment tool vendor could leverage mSCP 266  content. 267  • Appendix D lists selected acronyms and abbreviations used in this document. 268  269  https://checklists.nist.gov/  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  3  Project Description 270  The mSCP is an open-source project that provides a programmatic approach to generating and 271  using macOS security configuration baselines. The project’s content can be used to create 272  customized security baselines of technical security controls by leveraging a library of rules, with 273  each rule mapped to requirements in one or more existing security standards, regulations, or 274  frameworks. This approach provides versioning and consistency of the content. Unifying and 275  standardizing macOS baseline efforts via the mSCP means that updating security guidance is 276  simplified and radically accelerated, even as new versions of macOS are introduced annually. 277  The mSCP started in August 2019 as a collaboration among operational IT security staff from 278  NIST, the National Aeronautics and Space Administration (NASA), the Defense Information 279  Systems Agency (DISA), and the Department of Energy’s (DOE) Los Alamos National 280  Laboratory (LANL).1 The mSCP sought to map macOS settings to NIST SP 800-53, Revision 4 281  [3] with an extensible, modern approach to security guidance that could be used by any 282  organization (e.g., government, enterprise, education) that needs to adhere to security compliance 283  frameworks and policy.  284  As of this writing, the configuration settings represent guidance and best practices from NIST SP 285  800-53, Revision 5 [4]; NIST SP 800-171, Revision 2 [5]; the macOS DISA Security Technical 286  Implementation Guide (STIG) [6]; the Committee on National Security Systems (CNSS) 287  Instruction (CNSSI) Number 1253 [7]; the Center for Internet Security (CIS) Critical Security 288  Controls Version 8 [8]; and internal organizational security guidance from NIST, NASA, and 289  LANL. 290  Project Goals 291  Apple releases a new macOS version every year, and generally, agencies and organizations must 292  wait for guidance or accept risk before deploying the new macOS version. Most agencies or 293  organizations must create their own internal security configuration, which delays the deployment 294  of the new macOS version or new hardware that only supports the new macOS version. The 295  mSCP assists organizations in upgrading sooner. Generally, the technical security settings in 296  macOS do not drastically change from release to release, with only a handful of new settings 297  being introduced. By pursuing a rules-based approach, mSCP rules that remain applicable can be 298  reused and incorporated into guidance for the latest macOS version. This enables quicker 299  adoption of new security features that are not offered in prior versions of macOS. 300  The goals of the mSCP are to:  301  • Develop recommended security baselines using a risk-based approach 302  • Normalize and accelerate annual adoption of the new operating system and hardware by 303  providing guidance to meet the security needs of new operating systems at the earliest 304  availability 305  • Reduce worldwide efforts in creating annual guidance by unifying and consolidating 306  compliance efforts into a single project 307  1 See https://github.com/usnistgov/macos_security#authors for a current list of project contributors.  https://github.com/usnistgov/macos_security#authors  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  4  • Develop a methodology to foster collaboration between baseline authors, reducing 308  overhead and redundancy 309  • Establish a unified approach for the configuration and assessment of controls across 310  multiple sources and tools 311  • Enable the customization of existing content and the creation of new content, including 312  creating custom baselines in order to meet organization-specific security requirements 313  • Provide device management and security tool vendors, auditors, and Apple insight into 314  customer security configuration needs 315  mSCP Content Use 316  mSCP content can be used by any organization to assist in setting and assessing the security 317  configuration of macOS systems. Security baselines can map to existing guidance or controls, 318  such as those in NIST SP 800-53, Revision 5 [4], or they can be customized to meet an 319  organization’s specific needs. In mSCP terminology, a security baseline is represented as a 320  baseline file that designates the rules for meeting a specific set of requirements. The mSCP 321  provides a library of rules that are macOS settings. Each rule is mapped to a requirement within 322  a security standard or framework. Baseline files and rules comprise much of the mSCP’s content. 323  The mSCP offers several example baselines with descriptions adapted from Federal Information 324  Processing Standards (FIPS) 199 [9], such as: 325  • The SP 800-53, Revision 5 low baseline is a defined map of controls to secure a system 326  defined as a low-impact information system. The loss of confidentiality, integrity, or 327  availability could be expected to have a limited adverse effect on organizational 328  operations, organizational assets, or individuals. 329  • The SP 800-53, Revision 5 moderate baseline is a defined map of controls to secure a 330  system defined as a moderate-impact information system. The loss of confidentiality, 331  integrity, or availability could be expected to have a serious adverse effect on 332  organizational operations, organizational assets, or individuals. 333  • The SP 800-53, Revision 5 high baseline is a defined map of controls to secure a system 334  defined as a high-impact information system. The loss of confidentiality, integrity, or 335  availability could be expected to have a severe or catastrophic adverse effect on 336  organizational operations, organizational assets, or individuals. 337  Organizations using any baseline example should take a risk-based approach for selecting the 338  appropriate settings and organizationally defined values depending on the context under which 339  the baseline will be applied. Organizations can tailor any of the baselines to include controls 340  specific to their needs and to produce evidence of control enforcement. Additional information 341  on baseline customization can be found in SP 800-70 [2], which discusses the importance of 342  customizing and testing baselines before applying them to a production system. 343  The mSCP provides scripts that can be used with baselines for several purposes, including the 344  following: 345  • Creating scripts and profiles for configuring macOS 346  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  5  • Generating a mapping between security standards, regulations, frameworks, etc. 347  • Producing human-readable documentation in a variety of formats 348  • Customizing existing baselines 349  mSCP content can also be used to generate Security Content Automation Protocol (SCAP) 350  content for automated security compliance scans. The SCAP generated follows the SCAP 1.3 351  specification [10]. The generation of SCAP content uses an Extensible Stylesheet Language 352  Transformations (XSLT) file to create an Extensible Configuration Checklist Description Format 353  (XCCDF) checklist document with an accompanying Open Vulnerability and Assessment 354  Language (OVAL) document.  355  The XCCDF and OVAL documents are bundled into an SCAP data stream collection document 356  with accompanying files that include Common Platform Enumeration (CPE) dictionary [11] 357  information and an Open Checklist Interactive Language (OCIL) document. This creates an 358  SCAP 1.3 document that validates using the NIST SCAP Content Validation Tool2 and can be 359  used by SCAP tools on macOS. More information on SCAP content generation is available at the 360  project wiki.  361  362  2 See https://csrc.nist.gov/projects/security-content-automation-protocol/scap-releases/scap-1-3.  https://github.com/usnistgov/macos_security/wiki/SCAP-Content-Generation https://csrc.nist.gov/projects/security-content-automation-protocol/scap-releases/scap-1-3  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  6  mSCP Components 363  This section provides an overview of several components of the mSCP: security baseline files, 364  configuration profiles and scripts, content generation scripts, customization capabilities, and 365  directories. More information about all of these is available at the GitHub wiki. 366  Baselines and Benchmarks 367  The mSCP includes both baselines and benchmarks. A baseline is a catalog of recommended 368  configuration settings, not a checklist or benchmark, and should be customized based on the 369  organization’s risk profile. Implementing every item is not likely to be possible or sensible in 370  many operational scenarios. Baselines can be used to assist in the creation of security 371  benchmarks. A benchmark differs from a baseline in that it defines values in addition to a set of 372  controls. Benchmarks are published by organizations that have made risk-based decisions, such 373  as DISA and CIS. Organizations can also define their own benchmark. These values are called 374  Organization-Defined Values (ODVs), and they exist throughout the baselines and can be set 375  during customization. 376  Security Baseline Files 377  In the mSCP, a security baseline is defined in a Yet Another Markup Language (YAML) file. A 378  YAML file is a human-readable file format commonly used by configuration files where data are 379  stored and/or transmitted. A baseline YAML file consists of the following required fields: 380  • title – A human-readable name for the baseline 381  • description – A short description of the baseline, including its use case and target 382  operating system (OS) version 383  • authors – Developers of the baseline 384  • profile – The security content portion of the baseline 385  o section – A keyword for organizing settings 386  o rules – The names of the rule files that are a part of this baseline 387  The following code provides a partial example of a YAML file that illustrates the use of these 388  fields (with field names bolded): 389  https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  7  title: \"Apple macOS 11 (Big Sur) Test Baseline\" 390  description: | 391  This guide describes the prudent actions to take when securing a macOS 11 392  system against the Test Baseline. 393  authors: | 394  |=== 395  |Joe Doe|NIST 396  |=== 397  profile: 398  - section: \"Authentication\" 399  rules: 400  - auth_pam_login_smartcard_enforce 401  - auth_pam_su_smartcard_enforce 402  - auth_pam_sudo_smartcard_enforce 403  - auth_smartcard_allow 404  - section: \"Auditing\" 405  rules: 406  - audit_acls_files_configure 407  - audit_acls_files_mode_configure 408  - audit_acls_folder_wheel_configure 409  Fig. 1. Security Baseline YAML File. 410  3.2.1. Rule File Composition 411  A YAML rule file is broken down into the following subsections. This list and the following 412  example are from the Rules section of the mSCP wiki. 413  • id – The id should match the file name without the yaml file extension. 414  • title – The title is a human-readable title of the rule. 415  • discussion – The discussion should provide a concise description of the intended use 416  of the rule. 417  • check – Every rule will have a check. A shell-based check should be able to validate and 418  check most rules. 419  • result – Expected results from the check. 420  • fix – The fix will appear in a document when generated. If a fix includes 421  [source,bash], the fix will be used for generating the script to enforce the rule. 422  • references –  The references include a Common Configuration Enumeration (CCE) 423  identifier and a mapping of the security frameworks, guidance, and individual controls 424  that have been mapped to the rule. See the official repository of NIST CCEs [12] for 425  more information. 426  • macOS – The validated macOS version for this rule. 427  • odv – If a rule supports the ODV functionality, then the odv section should be present. At 428  a minimum, this field should contain a hint (provides a description when tailoring a 429  baseline) and a default value that replaces the $ODV variable. 430  https://github.com/usnistgov/macos_security/wiki/Rules  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  8  • tags – Tags are keywords used to categorize and identify related rules, and they can be 431  added to or modified as needed. Tags can also be used to make index-based searching of 432  the rules faster and easier. 433  • severity – The severity level specified in the DISA STIG, if applicable. 434  • mobileconfig – The mobileconfig and mobileconfig_info subsections are related. If 435  mobileconfig is set to true, the information required for creating the mobileconfig 436  configuration profile is required in the mobileconfig_info area. 437  The following code provides a notional example of a YAML rule file (with field names bolded): 438  id: sysprefs_screensaver_timeout_enforce 439  title: \"Enforce Screen Saver Timeout\" 440  discussion: | 441  The screen saver timeout _MUST_ be set to $ODV seconds or a shorter length 442  of time. 443  444  This rule ensures that a full session lock is triggered within no more than 445  $ODV seconds of inactivity. 446  check: | 447  /usr/bin/osascript -l JavaScript << EOS 448  function run() { 449  let timeout = 450  ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')451  \\ 452  .objectForKey('idleTime')) 453  if ( timeout <= $ODV ) { 454  return(\"true\") 455  } else { 456  return(\"false\") 457  } 458  } 459  EOS 460  result: 461  string: \"true\" 462  fix: | 463  This is implemented by a Configuration Profile. 464  references: 465  cce: 466  - CCE-91074-5 467  cci: 468  - CCI-000057 469  800-53r5: 470  - AC-11 471  - IA-11 472  800-53r4: 473  - AC-11 474  srg: 475  - SRG-OS-000029-GPOS-00010 476  disa_stig: 477  - APPL-12-000004 478  800-171r2: 479  - 3.1.10 480  cis: 481  benchmark: 482  - 2.3.1 (level 1) 483  controls v8: 484  - 4.3 485  macOS: 486  - \"12.0\" 487  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  9  odv: 488  hint: \"Number of seconds.\" 489  default: 1200 490  stig: 900 491  cis_lvl1: 1200 492  cis_lvl2: 1200 493  tags: 494  - 800-53r5_moderate 495  - 800-53r5_high 496  - 800-53r5_low 497  - 800-53r4_moderate 498  - 800-53r4_high 499  - 800-171 500  - cnssi-1253 501  - cis_lvl1 502  - cis_lvl2 503  - cisv8 504  - stig 505  severity: \"medium\" 506  mobileconfig: true 507  mobileconfig_info: 508  com.apple.screensaver: 509  idleTime: $ODV 510  Fig. 2. YAML Rule File 511  3.2.2. Rule File Categories 512  The mSCP organizes YAML files in the rules directory into the following subdirectories, each 513  of which corresponds to a category of settings: 514  • audit – OpenBSM3 515  • auth – Smartcard authentication 516  • icloud – Apple’s iCloud/Apple ID service 517  • os – Rules to configure the operating system that do not fit into the other categories 518  • pwpolicy – Password policy 519  • system_settings or sysprefs – Settings controlled within the System Settings or 520  System Preferences application 521  The rules directory also includes a supplemental subdirectory, which contains additional 522  information that supports the guidance provided by the baselines. Supplemental content contains 523  information for rules that are not part of an existing baseline but could be beneficial for certain 524  use cases. Supplemental content may not have mappings and may not contain the YAML rule 525  file check and fix sections mentioned in Section 3.2.1. Supplemental content can be added to 526  enhance baselines where organizational requirements are different than the system baseline 527  requirements. 528  3 See OpenBSM at https://github.com/openbsm/openbsm.  https://github.com/openbsm/openbsm  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  10  Configuration Profiles and Scripts 529  When an mSCP YAML file is processed, it yields a configuration script and/or configuration 530  profile (mobileconfig file) as outputs. Both are used to apply configuration settings to a system.  531  A configuration profile is an Extensible Markup Language (XML) formatted file with a 532  mobileconfig extension that contains a configuration payload. macOS can automatically 533  configure itself based on a mobileconfig file’s contents upon execution. Configuration profiles 534  offer a convenient, Apple-supported mechanism for applying security settings to a macOS 535  environment. Additionally, they can be cryptographically signed to ensure integrity and 536  authenticity. These factors make configuration profiles the preferred vehicle for configuration 537  delivery. However, mobileconfig files cannot modify all macOS settings, so a configuration 538  script is needed for those settings that are not supported. See the developer documentation page 539  for an example configuration profile and brief descriptions of its properties. 540  A configuration script is a shell script that directly manipulates operating system files. The script 541  content is derived from all YAML rule files that have a mobileconfig value of false and 542  belong to the specified baseline. The YAML rule file must contain the fix section in order to 543  generate its corresponding configuration script entry.  544  Content Generation Scripts 545  The mSCP provides several types of scripts for generating baselines, human-readable guidance, 546  baseline compliance checkers, and other types of content. Each script is described below. 547  3.4.1. Generate Baseline Script 548  The generate_baseline.py Python script compiles a list of security rules into a single baseline 549  YAML file. It can be used to modify an existing security baseline or create a new one. See the 550  wiki for additional information. 551  3.4.2. Generate Guidance Script 552  The generate_guidance.py script can produce human-readable guidance and generate the 553  macOS Security Compliance Tool, which is a Z shell script. 554  The generate_guidance.py script takes a baseline file and produces a human-readable guide 555  with information from the YAML rules files. The script can create documentation in several 556  formats but always generates an AsciiDoc file. AsciiDoc (.adoc) is a plain text format that uses 557  markup conventions for traditional document formatting and organization. AsciiDoc files are 558  easily transformable into many other formats via the generate_guidance.py script, including 559  HTML, PDF, and Excel. The Excel format is particularly useful for quickly viewing all of the 560  rules of a baseline, and it contains all of the data in the YAML rules files. 561  The generate_guidance.py script can also create configuration profiles (mobileconfig files) 562  and the macOS Security Compliance Tool. Using the -s argument, the generate_guidance.py 563  script will generate an org.{baseline}.audit.plist file and another script, the macOS 564  Security Compliance Tool, that can check and remediate compliance settings. The audit.plist 565  https://developer.apple.com/documentation/devicemanagement/loginwindow https://github.com/usnistgov/macos_security/wiki/Scripts#generate_baselinepy  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  11  file can be used to set an exemption to organizational rules for approved users so that compliance 566  checks can succeed without findings. To create an exemption for a rule, the exempt field should 567  be set to true and an exempt_reason should be added. 568  See the wiki for more information on the generate_guidance.py script. 569  3.4.3. macOS Security Compliance Tool 570  The {baseline}_compliance.sh script runs interactively by default. It can evaluate a system’s 571  conformance to a baseline or remediate any incorrectly configured settings. Alternatively, the 572  script can autonomously assess a system with the –check argument or automatically remediate 573  baseline settings with –fix. 574  The lines below provide an example of the results of running the script:  575  Thu Jan 21 15:09:41 UTC 2021 auth_pam_login_smartcard_enforce passed (Result: 576  2, Expected: {integer: 2}) 577  Thu Jan 21 15:09:41 UTC 2021 auth_smartcard_allow passed (Result: 1, 578  Expected: {integer: 1}) 579  Thu Jan 21 15:09:41 UTC 2021 auth_pam_sudo_smartcard_enforce passed (Result: 580  2, Expected: {integer: 2}) 581  Thu Jan 21 15:09:41 UTC 2021 582  auth_smartcard_certificate_trust_enforce_moderate passed (Result: 2, 583  Expected: {integer: 2}) 584  Thu Jan 21 15:09:41 UTC 2021 auth_smartcard_enforce has an exemption (Reason: 585  Broken Reader) 586  Fig. 3. Compliance Script Sample Output. 587  For more information on the macOS Security Compliance Tool script, see the wiki. 588  3.4.4. SCAP Generation Script 589  The SCAP generation script, generate_scap.py can generate an SCAP 1.3 document, XCCDF 590  document, or OVAL file. The script builds content from available tags within the YAML files 591  and does not need to be pointed to a baseline file. 592  For more information, see the wiki. 593  3.4.5. Generate Mapping Script 594  The generate_mapping.py script allows for the quick creation of custom rules and baselines for 595  a compliance framework not published by the mSCP. The script requires a user-created comma-596  separated values (CSV) file containing control identifiers that maps to a new framework (CSV 597  column 1) from another already defined by the project (CSV column 2). By default, the script is 598  designed to map a framework to the NIST SP 800-53, Revision 5 [4] set of controls. Adding the 599  -f argument allows for mapping to another supported framework. See the wiki for more 600  information on the generate_mapping.py script. 601  https://github.com/usnistgov/macos_security/wiki/Scripts#generate_guidancepy-script https://github.com/usnistgov/macos_security/wiki/Compliance-Script https://github.com/usnistgov/macos_security/wiki/Generate-SCAP https://github.com/usnistgov/macos_security/wiki/Generate-Mapping  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  12  Customization 602  Organizations should make the risk-based decision on what controls and rules to use and how to 603  apply them, as stated by NIST SP 800-53, Revision 5 controls PL-10 and PL-11. Customization 604  allows organizations to generate their own customized content outside of that provided by the 605  project. Additionally, it allows them to add content for internal-only controls, which are not 606  suitable for inclusion in a global baseline. Customization primarily takes place within the custom 607  folder. Here are examples of customizations supported by mSCP: 608  • Baselines: A baseline folder can be included within the custom folder to create 609  customized baselines that fit an organization’s needs. These baseline files may include 610  rule, section, and template customization (discussed below). An existing baseline can be 611  configured to create a custom benchmark. Additionally, it is possible to customize an 612  included benchmark, but in doing so, it may no longer be compliant with the original 613  requirements of that benchmark. 614  • Rules: Existing rules can have their setting values overridden via the custom folder 615  instead of modifying the mSCP-supplied rule file. New rules can be created and added to 616  existing baselines or to user-defined baselines. Organizations can create their own 617  discussions, checks, results, fixes, and mappings of rules to security frameworks not 618  included in the project. In order to override an existing rule, the custom rule file name 619  must match an existing rule so that the generate_guidance.py script will pick up the 620  new values. New rules not included in mSCP must be listed in the baseline YAML file 621  specified when running generate_guidance.py. Additional information on custom 622  rules can be found in an article written by mSCP contributor Allen Golbig [13].  623  • Sections: Custom sections can be used to organize existing or custom YAML rule files. 624  Sections defined in the custom folder must be included in a baseline YAML file in order 625  to be used by generate_guidance.py. 626  • Templates: Custom templates can be used to define new template structures for the 627  project and affect the organization and appearance of generated documentation. The 628  template files must match the name of an existing template and will override that 629  template when running generate_guidance.py. 630  • Logos: An organization can include a custom logo when running the 631  generate_guidance.py script by using the -l argument to point to an image file.  632  • Tailoring: The generate_baseline.py script allows for a baseline to be tailored using 633  the -t argument. During the tailoring process, the script will prompt for each control 634  containing an ODV to have its values customized. If a value is not supplied to a control 635  with an ODV, it will use the default value in the rule file. Refer to Appendix C for an 636  example of tailoring with ODVs. 637  Directories 638  mSCP source code releases available on the mSCP GitHub include the following directories: 639  • baselines – Contains the defined YAML baseline files 640  https://github.com/usnistgov/macos_security/releases  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  13  • build – Holds scripts, documents, and configuration profiles generated by running 641  scripts 642  • custom – Used for creating customized baselines, rules, sections, or templates to meet an 643  organization’s requirements 644  • includes – Contains the YAML-based libraries required for running the scripts 645  • rules – Contains YAML rule files with one rule per file 646  • scripts – Contains the content generation scripts and their required files 647  • sections – Defines the sections that correlate to the directories in the rules folder; each 648  section has its own YAML file that contains the section name and description as it will 649  appear in the generated guide, which is human-readable documentation 650  • templates – Includes AsciiDoc templates for generating an AsciiDoc guide 651  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  14  References 652  [1] macOS Security Compliance Project (2023) macOS Security Compliance Project. 653  Available at https://github.com/usnistgov/macos_security  654  [2] Quinn SD, Souppaya MP, Cook MR, Scarfone KA (2018) National Checklist Program for 655  IT Products: Guidelines for Checklist Users and Developers. (National Institute of 656  Standards and Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-70, 657  Rev. 4. https://doi.org/10.6028/NIST.SP.800-70r4  658  [3] Joint Task Force Transformation Initiative (2013) Security and Privacy Controls for 659  Federal Information Systems and Organizations. (National Institute of Standards and 660  Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-53, Rev. 4, Includes 661  updates as of January 22, 2015. https://doi.org/10.6028/NIST.SP.800-53r4  662  [4] Joint Task Force (2020) Security and Privacy Controls for Information Systems and 663  Organizations. (National Institute of Standards and Technology, Gaithersburg, MD), NIST 664  Special Publication (SP) 800-53, Rev. 5. Includes updates as of December 10, 2020. 665  https://doi.org/10.6028/NIST.SP.800-53r5  666  [5] Ross R, Pillitteri V, Dempsey K, Riddle M, Guissanie G (2020) Protecting Controlled 667  Unclassified Information in Nonfederal Systems and Organizations. (National Institute of 668  Standards and Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-171, 669  Rev. 2, Includes updates as of January 28, 2021. https://doi.org/10.6028/NIST.SP.800-670  171r2  671  [6] Department of Defense (2023) DISA STIG for macOS. Available at 672  https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=mac-os  673  [7] Committee on National Security Systems (2014) Security Categorization and Control 674  Selection for National Security Systems. (National Security Agency, Ft. Meade, MD), 675  Committee on National Security Systems Instruction (CNSSI) No. 1253. Available at 676  https://www.cnss.gov/CNSS/issuances/Instructions.cfm  677  [8] Center for Internet Security (2023) CIS Critical Security Controls Version 8. Available at 678  https://www.cisecurity.org/controls/v8/ 679  [9] National Institute of Standards and Technology (2004) Standards for Security 680  Categorization of Federal Information and Information Systems. (U.S. Department of 681  Commerce, Washington, DC), Federal Information Processing Standards Publication 682  (FIPS) 199. https://doi.org/10.6028/NIST.FIPS.199  683  [10] Waltermire DA, Quinn SD, Booth H, III, Scarfone KA, Prisaca D (2018) The Technical 684  Specification for the Security Content Automation Protocol (SCAP): SCAP Version 1.3. 685  (National Institute of Standards and Technology, Gaithersburg, MD), NIST Special 686  Publication (SP) 800-126, Rev. 3. https://doi.org/10.6028/NIST.SP.800-126r3  687  [11] National Institute of Standards and Technology (2023). Official Common Platform 688  Enumeration (CPE) dictionary. Available at https://nvd.nist.gov/products/cpe  689  [12] National Institute of Standards and Technology (2022) CCE Platform Listing. Available at 690  https://ncp.nist.gov/cce  691  [13] Golbig A (2021) Getting to Know: macOS Security Compliance Project – Part 2. Available 692  at https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-693  24131b60cdfb  694  https://github.com/usnistgov/macos_security https://doi.org/10.6028/NIST.SP.800-70r4 https://doi.org/10.6028/NIST.SP.800-53r4 https://doi.org/10.6028/NIST.SP.800-53r5 https://doi.org/10.6028/NIST.SP.800-171r2 https://doi.org/10.6028/NIST.SP.800-171r2 https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=mac-os https://www.cnss.gov/CNSS/issuances/Instructions.cfm https://www.cisecurity.org/controls/v8/ https://doi.org/10.6028/NIST.FIPS.199 https://doi.org/10.6028/NIST.SP.800-126r3 https://nvd.nist.gov/products/cpe https://ncp.nist.gov/cce https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-24131b60cdfb https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-24131b60cdfb  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  15  Appendix A. mSCP User Roles 695  The mSCP was designed to meet the needs of different security roles. These perspectives are 696  briefly examined below.  697  Security policy authors define the policies for their organizations. The customization and ease 698  of extensibility offered by the mSCP facilitate new content creation. Policy authors will need to 699  familiarize themselves with the YAML rule file format described in Section 3.2.1. Of particular 700  interest is the ability to map rules directly to references. Additionally, the generate mapping 701  script (Section 3.4.5) enhances portability between compliance frameworks. 702  System administrators and security professionals are responsible for configuring the systems 703  under their purview. They implement the guidance issued by security policy authors. Security 704  professionals may wish to generate baselines (Section 3.4.1), guidance (Section 3.4.2), and 705  configuration using the macOS Security Compliance Tool (Section 3.4.3). 706  Auditors approach macOS security compliance from a validator perspective, seeking proof that 707  a system is configured in the required way. They are more interested in system setting 708  documentation and compliance evidence than technical tools, such as configuration scripts. Both 709  of these needs can be met by mSCP tools. The generate guidance script (Section 3.4.2) provides 710  the necessary documentation in a variety of formats, including HTML, PDF, and Excel. The 711  macOS Security Compliance Tool (Section 3.4.3) assesses a system and produces a log of the 712  results. Additionally, some auditors may be interested in examining YAML rule content directly 713  (Section 3.2.1). 714  Information security officers have a variety of goals but are ultimately responsible for ensuring 715  that systems are configured according to their organizational requirements. To accomplish this, 716  they need policy documentation (Section 3.4.2) and the results of compliance scans (Section 717  3.4.3). Information security officers may also be responsible for reviewing the security rules 718  proposed by the policy authors. If this is the case, they may be interested in YAML rule file 719  components (Section 3.2.1). 720  Vendors of device management, security, configuration assessment, and compliance tools 721  can produce a series of audit files based on mSCP content to support different macOS versions 722  and associated security baselines. These audit files are maintained, tested, published, and 723  supported by the tool vendors. Tool customers can download and import the content into the tool 724  to assess the state of their system against a particular baseline in an automated way. 725  Specific audit files of the mSCP by tool vendors are described on the project wiki page. This 726  content will be updated as contributing tool vendors develop new audit content.  727  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  16  Appendix B. Example of mSCP Usage by a Security Professional 728  This appendix provides examples of how a security professional might use mSCP content. 729  People in other roles might perform some of the same actions. The examples illustrated below 730  were accurate at the time of publication, but see the mSCP wiki for up-to-date usage guidance. 731  Note that the mSCP scripts are not meant to replace enterprise-class configuration and 732  management tools. Configurations should be tested on development systems before being 733  deployed on end users’ systems. 734  Preparing to use mSCP 735  All project components are available from the mSCP GitHub page [1] by navigating to 736  Releases and downloading the latest source code revision for the desired macOS version. 737  Alternatively, the project source code can be downloaded via git, as the example below 738  illustrates.  739  740  Fig. 4. Downloading the mSCP code. 741  742  mSCP components rely on prerequisite software listed on the Getting Started page, and any 743  missing software must be installed.  744  Changing code branches and generating a baseline 745  After obtaining a copy of the source code, change the directory to the mSCP git folder, 746  macos_security.  747  748  Fig. 5. Changing the directory to the mSCP git folder. 749  750  Next, select the appropriate code branch that corresponds to the target OS version. Then choose a 751  baseline and use the generate_baseline.py script to create a baseline YAML file. The 752  https://github.com/usnistgov/macos_security/wiki https://github.com/usnistgov/macos_security/wiki/Getting-Started  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  17  example below illustrates these steps for the NIST SP 800-53, Revision 5 moderate baseline for 753  macOS Big Sur. 754  755  Fig. 6. Changing code branches and generating a baseline. 756  757  Creating the macOS Security Compliance Tool and configuration profiles 758  Using the generate_guidance.py script, create the macOS Security Compliance Tool and 759  configuration profiles. The example below illustrates this, continuing from the previous example. 760  761  Fig. 7. Generating the compliance checker script and configuration profiles. 762  763  Running a compliance scan 764  As the example below shows, the macOS Security Compliance Tool is typically run with 765  administrator privileges so that it can access all of the settings.  766  767  Fig. 8. Running the compliance checker script. 768  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  18  769  The example below shows the main menu presented by the macOS Security Compliance Tool. 770  771  Fig. 9. Selecting “Run New Compliance Scan” from the main menu. 772  773  Selecting option 2, “Run New Compliance Scan,” from the main menu launches the scan. The 774  example below shows output from the scan, which in this case reflects numerous rule failures, 775  each indicating a deviation from the expected configuration. 776  777  Fig. 10. Compliance scan output. 778  779  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  19  Selecting option 1, “View Last Compliance Report,” from the main menu displays a summary of 780  the compliance report results. The example below depicts results indicating that 30 tests passed 781  and 108 tests failed for an overall score of 21.74 % compliant. 782  783  Fig. 11. Viewing a compliance report. 784  785  Fixing non-compliant settings 786  Selecting option 3, “Run Commands to remediate non-compliant settings,” begins the process of 787  fixing non-compliant settings discovered during a previous compliance scan. The example below 788  illustrates the disclaimer to be reviewed and accepted before fixes are initiated. This disclaimer 789  indicates the potential risk in applying fixes. 790  791  Fig. 12. Disclaimer for non-compliant settings remediation. 792  793  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  20  After the disclaimer statement is accepted, the fixes are applied to the system, as the example 794  below illustrates.  795  796  Fig. 13. Interactively configuring settings. 797  798  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  21  Appendix C. Example of Creating a Benchmark Using ODVs 799  This appendix provides an example of tailoring a baseline to create a custom benchmark using 800  the generate_baseline.py script. The screenshot below illustrates the first step to creating a 801  benchmark. 802  803  Fig. 14. Generate baseline command. 804  805  The -t option for generate_baseline.py is used to customize the specified baseline. The 806  script prompts for a name for the benchmark being created, as the example below shows. 807  808  Fig. 15. Prompt for benchmark name. 809  810  Next, for each rule that exists in the specified starting baseline, the script asks if it should be 811  included in the custom benchmark. An example is shown below. 812  813  Fig. 16. Prompt for rule file inclusion. 814  815  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  22  Entering a “?” in response to a rule being included will display a description of that rule, as 816  illustrated below. 817  818  Fig. 17. Display rule description. 819  820  If a rule accepts an ODV, the script asks the user to enter their own value or use the default value 821  displayed. The example below illustrates this. 822  823  Fig. 18. Rule prompting for an ODV. 824  825  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  23  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor 826  This appendix provides an example of how an assessment tool vendor converted mSCP content 827  to their tool’s proprietary format so that their tool could perform compliance checks against 828  mSCP baselines and rules. Refer to the mSCP GitHub wiki page for the most current list of tool 829  vendors and associated content that will support the mSCP baselines. 830  This example is for Tenable, Inc. They automated the conversion of mSCP YAML rules into 831  their .audit format using Python and YAML libraries. Programmatically approaching this 832  conversion allows for faster future releases and greater consistency, and it also maintains the 833  integrity of the source content. Because the YAML content is all command-driven, it is 834  converted to Tenable’s CMD_EXEC check type for use with the Unix plugin. The YAML rules 835  have a “tags” section that was used to create unique audit profiles related to common 836  frameworks. An example of these profiles can be seen in the audit file naming convention: 837  • NIST_macOS_Big_Sur_800-171_v1.4.0.audit  838  • NIST_macOS_Catalina_800-53r5_high_v1.5.0.audit  839  See Tenable’s research highlight for more details. 840  The following example shows a YAML-to-audit-check conversion. The content has been 841  condensed and abbreviated for the purposes of comparison: 842  mSCP YAML 843  title: \"Limit SSHD to FIPS 140 Validated Ciphers\" 844  845  discussion: | 846  If SSHD is enabled, then it _MUST_ be configured to limit the ciphers to 847  algorithms that are FIPS 140-validated. 848  FIPS 140-2 is the current standard for validating that mechanisms used to 849  access cryptographic modules utilize authentication that meets federal 850  requirements. 851  Operating systems utilizing encryption _MUST_ use FIPS-validated mechanisms 852  for authenticating to cryptographic modules.  853  NOTE: /etc/ssh/sshd_config will be automatically modified to its original 854  state following any update or major upgrade to the operating system. 855  856  check: | 857  /usr/bin/grep -c \"^Ciphers aes256-ctr,aes192-ctr,aes128-ctr\" 858  /etc/ssh/sshd_config 859  860  result: 861  integer: 1 862  Tenable Audit Check 863  <custom_item> 864  system  : \"Darwin\" 865  type  : CMD_EXEC 866  description : \"Big Sur - Limit SSHD to FIPS 140 Validated Ciphers\" 867  info  : \"If SSHD is enabled, then it _MUST_ be configured to limit 868  the ciphers to algorithms that are FIPS 140-validated. 869  FIPS 140-2 is the current standard for validating that mechanisms used to 870  access cryptographic modules utilize authentication that meets federal 871  requirements. 872  873  https://github.com/usnistgov/macos_security/wiki/Vendor-Attribution https://community.tenable.com/s/feed/0D53a00008E0hgYCAR  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  24  Operating systems utilizing encryption _MUST_ use FIPS-validated mechanisms 874  for authenticating to cryptographic modules. 875  NOTE: /etc/ssh/sshd_config will be automatically modified to its original 876  state following any update or major upgrade to the operating system.\" 877  cmd  : \"/usr/bin/grep -c \\\"^Ciphers aes256-ctr,aes192-ctr,aes128-878  ctr\\\" /etc/ssh/sshd_config\" 879  expect  : \"1\" 880  </custom_item> 881  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  25  Appendix E. List of Symbols, Abbreviations, and Acronyms 882  Selected acronyms and abbreviations used in this paper are defined below.  883  CCE 884  Common Configuration Enumeration 885  CIS 886  Center for Internet Security 887  CNSS 888  Committee on National Security Systems  889  CNSSI 890  Committee on National Security Systems Instruction 891  DISA 892  Defense Information Systems Agency 893  FIPS 894  Federal Information Processing Standards 895  LANL 896  Los Alamos National Laboratory 897  mSCP 898  macOS Security Compliance Project 899  NASA 900  National Aeronautics and Space Administration 901  NIST 902  National Institute of Standards and Technology 903  ODV 904  Organization-Defined Value 905  OVAL 906  Open Vulnerability and Assessment Language 907  SCAP 908  Security Content Automation Protocol 909  SP 910  Special Publication 911  STIG 912  Security Technical Implementation Guide 913  XCCDF 914  Extensible Configuration Checklist Description Format 915  YAML 916  Yet Another Markup Language 917  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  26  Appendix F. Change Log 918  In March 2023, the following changes were made to this report: 919  • Made minor editorial changes throughout the report to improve clarity and usability  920  • Reformatted all content and revised front matter to follow the latest NIST technical report 921  template  922  • Merged the content of the Executive Summary into Section 1 and deleted the Executive 923  Summary section 924  • Section 1.1 – Summarized updates from the previous release 925  • Section 3.1 – Added a new subsection to define and discuss baselines and benchmarks 926  • Section 3.2.1 – Updated descriptions to match the project wiki and changed the example 927  rule file to one with an ODV 928  • Section 3.4.4 – Changed from OVAL generation script to SCAP generation script 929  • Section 3.5 – Added discussion on tailoring baselines and benchmarks using the 930  generate_baseline.py script and ODVs 931  • Appendix C – Created a new appendix showing an example of how to tailor a baseline to 932  create a custom benchmark 933  1. Introduction  1.1. Purpose and Scope  1.2. Audience  1.3. Relevance to NIST SP 800-70 and the National Checklist Program  1.4. Document Structure  2. Project Description  2.1. Project Goals  2.2. mSCP Content Use  3. mSCP Components  3.1. Baselines and Benchmarks  3.2. Security Baseline Files  3.2.1. Rule File Composition  3.2.2. Rule File Categories  3.3. Configuration Profiles and Scripts  3.4. Content Generation Scripts  3.4.1. Generate Baseline Script  3.4.2. Generate Guidance Script  3.4.3. macOS Security Compliance Tool  3.4.4. SCAP Generation Script  3.4.5. Generate Mapping Script  3.5. Customization  3.6. Directories  References  Appendix A. mSCP User Roles  Appendix B. Example of mSCP Usage by a Security Professional  Appendix C. Example of Creating a Benchmark Using ODVs  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor  Appendix E. List of Symbols, Abbreviations, and Acronyms  Appendix F. Change Log",
    "original document": "NIST SP 800-219r1 initial public draft, Automated Secure Configuration Guidance from the macOS Security Compliance Project (mSCP)  NIST Special Publication 1  NIST SP 800-219r1 ipd 2  Automated Secure Configuration 3  Guidance from the macOS 4  Security Compliance Project 5  (mSCP) 6  7  Initial Public Draft 8  9  Mark Trapnell 10  Eric Trapnell 11  Murugiah Souppaya 12  Bob Gendler 13  Karen Scarfone 14  This publication is available free of charge from: 15  https://doi.org/10.6028/NIST.SP.800-219r1.ipd 16  17  18  https://crossmark.crossref.org/dialog/?doi=10.6028/NIST.SP.800-219r1.ipd  NIST Special Publication  19  NIST SP 800-219r1 ipd 20  Automated Secure Configuration 21  Guidance from the macOS 22  Security Compliance Project 23  (mSCP) 24  25  Initial Public Draft 26  27  Mark Trapnell  Eric Trapnell  Murugiah Souppaya  Computer Security Division  Information Technology Laboratory  Bob Gendler  Customer Access and Support Division  Office of Information Systems Management  Karen Scarfone  Scarfone Cybersecurity  This publication is available free of charge from: 28  https://doi.org/10.6028/NIST.SP.800-219r1.ipd 29  March 2023 30  31  U.S. Department of Commerce 32  Gina M. Raimondo, Secretary 33  National Institute of Standards and Technology  34  Laurie E. Locascio, NIST Director and Undersecretary of Commerce for Standards and Technology35  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  Certain commercial equipment, instruments, software, or materials, commercial or non-commercial, are identified in 36  this paper in order to specify the experimental procedure adequately. Such identification does not imply 37  recommendation or endorsement of any product or service by NIST, nor does it imply that the materials or 38  equipment identified are necessarily the best available for the purpose. 39  There may be references in this publication to other publications currently under development by NIST in 40  accordance with its assigned statutory responsibilities. The information in this publication, including concepts and 41  methodologies, may be used by federal agencies even before the completion of such companion publications. Thus, 42  until each publication is completed, current requirements, guidelines, and procedures, where they exist, remain 43  operative. For planning and transition purposes, federal agencies may wish to closely follow the development of 44  these new publications by NIST.  45  Organizations are encouraged to review all draft publications during public comment periods and provide feedback 46  to NIST. Many NIST cybersecurity publications, other than the ones noted above, are available at 47  https://csrc.nist.gov/publications. 48  Authority 49  This publication has been developed by NIST in accordance with its statutory responsibilities under the Federal 50  Information Security Modernization Act (FISMA) of 2014, 44 U.S.C. § 3551 et seq., Public Law (P.L.) 113-283. 51  NIST is responsible for developing information security standards and guidelines, including minimum requirements 52  for federal information systems, but such standards and guidelines shall not apply to national security systems 53  without the express approval of appropriate federal officials exercising policy authority over such systems. This 54  guideline is consistent with the requirements of the Office of Management and Budget (OMB) Circular A-130. 55  56  Nothing in this publication should be taken to contradict the standards and guidelines made mandatory and binding 57  on federal agencies by the Secretary of Commerce under statutory authority. Nor should these guidelines be 58  interpreted as altering or superseding the existing authorities of the Secretary of Commerce, Director of the OMB, or 59  any other federal official.  This publication may be used by nongovernmental organizations on a voluntary basis and 60  is not subject to copyright in the United States. Attribution would, however, be appreciated by NIST.  61  NIST Technical Series Policies 62  Copyright, Use, and Licensing Statements 63  NIST Technical Series Publication Identifier Syntax 64  Publication History 65  Approved by the NIST Editorial Review Board on YYYY-MM-DD [will be added upon final completion] 66  Supersedes NIST Series XXX (Month Year) DOI [will be added upon final completion] 67  How to Cite this NIST Technical Series Publication:  68  Trapnell M, Trapnell E, Souppaya MP, Gendler B, Scarfone K (2023) Automated Secure Configuration Guidance 69  from the macOS Security Compliance Project (mSCP). (National Institute of Standards and Technology, 70  Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-219r1 ipd. https://doi.org/10.6028/NIST.SP.800-71  219r1.ipd  72  Author ORCID iDs 73  Mark Trapnell: 0000-0002-5266-3610 74  Eric Trapnell: 0000-0001-9315-3732 75  Murugiah Souppaya: 0000-0002-8055-8527 76  Bob Gendler: 0000-0002-8928-6492 77  https://csrc.nist.gov/publications https://doi.org/10.6028/NIST-TECHPUBS.CROSSMARK-POLICY https://www.nist.gov/document/publication-identifier-syntax-nist-technical-series-publications  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  Karen Scarfone: 0000-0001-6334-9486 78  Public Comment Period 79  March 13, 2023 – April 27, 2023 80  Contact Information 81  applesec@nist.gov 82  83  National Institute of Standards and Technology 84  Attn: Computer Security Division, Information Technology Laboratory 85  100 Bureau Drive (Mail Stop 8930) Gaithersburg, MD 20899-8930 86  All comments are subject to release under the Freedom of Information Act (FOIA).87  mailto:applesec@nist.gov  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  i  Abstract 88  The macOS Security Compliance Project (mSCP) provides resources that system administrators, 89  security professionals, security policy authors, information security officers, and auditors can 90  leverage to secure and assess macOS desktop and laptop system security in an automated way. 91  This publication introduces the mSCP and gives an overview of the resources available from the 92  project’s GitHub site, which is continuously curated and updated to support each new release of 93  macOS. The GitHub site provides practical, actionable recommendations in the form of secure 94  baselines and associated rules. This publication also describes use cases for leveraging the mSCP 95  content. Updates from the previous version of this publication mainly involve the new mSCP 96  capability to create a custom benchmark by tailoring a baseline. 97  Keywords 98  Apple; baseline; configuration management; endpoint device security; macOS; macOS Security 99  Compliance Project (mSCP); operating system security; security compliance. 100  Reports on Computer Systems Technology 101  The Information Technology Laboratory (ITL) at the National Institute of Standards and 102  Technology (NIST) promotes the U.S. economy and public welfare by providing technical 103  leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test 104  methods, reference data, proof of concept implementations, and technical analyses to advance 105  the development and productive use of information technology. ITL’s responsibilities include the 106  development of management, administrative, technical, and physical standards and guidelines for 107  the cost-effective security and privacy of other than national security-related information in 108  federal information systems. The Special Publication 800-series reports on ITL’s research, 109  guidelines, and outreach efforts in information system security, and its collaborative activities 110  with industry, government, and academic organizations. 111  112  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  ii  Supplemental Content 113  The mSCP’s GitHub site is at https://github.com/usnistgov/macos_security#readme, and the 114  project documentation wiki is at https://github.com/usnistgov/macos_security/wiki.  115  Trademark Information  116  All registered trademarks or trademarks belong to their respective organizations. 117  https://github.com/usnistgov/macos_security#readme https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  iii  Call for Patent Claims 118  This public review includes a call for information on essential patent claims (claims whose use 119  would be required for compliance with the guidance or requirements in this Information 120  Technology Laboratory (ITL) draft publication). Such guidance and/or requirements may be 121  directly stated in this ITL Publication or by reference to another publication. This call also 122  includes disclosure, where known, of the existence of pending U.S. or foreign patent applications 123  relating to this ITL draft publication and of any relevant unexpired U.S. or foreign patents. 124  ITL may require from the patent holder, or a party authorized to make assurances on its behalf, 125  in written or electronic form, either: 126  a) assurance in the form of a general disclaimer to the effect that such party does not hold 127  and does not currently intend holding any essential patent claim(s); or 128  b) assurance that a license to such essential patent claim(s) will be made available to 129  applicants desiring to utilize the license for the purpose of complying with the guidance 130  or requirements in this ITL draft publication either: 131  i. under reasonable terms and conditions that are demonstrably free of any unfair 132  discrimination; or 133  ii. without compensation and under reasonable terms and conditions that are 134  demonstrably free of any unfair discrimination. 135  Such assurance shall indicate that the patent holder (or third party authorized to make assurances 136  on its behalf) will include in any documents transferring ownership of patents subject to the 137  assurance, provisions sufficient to ensure that the commitments in the assurance are binding on 138  the transferee, and that the transferee will similarly include appropriate provisions in the event of 139  future transfers with the goal of binding each successor-in-interest. 140  The assurance shall also indicate that it is intended to be binding on successors-in-interest 141  regardless of whether such provisions are included in the relevant transfer documents. 142  Such statements should be addressed to: applesec@nist.gov  143  mailto:applesec@nist.gov  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  iv  Table of Contents 144  Introduction ...................................................................................................................... 1 145  Purpose and Scope .................................................................................................... 1 146  Audience .................................................................................................................... 1 147  Relevance to NIST SP 800-70 and the National Checklist Program ........................... 2 148  Document Structure .................................................................................................... 2 149  Project Description .......................................................................................................... 3 150  Project Goals .............................................................................................................. 3 151  mSCP Content Use .................................................................................................... 4 152  mSCP Components .......................................................................................................... 6 153  Baselines and Benchmarks ........................................................................................ 6 154  Security Baseline Files ............................................................................................... 6 155  3.2.1. Rule File Composition ............................................................................................. 7 156  3.2.2. Rule File Categories ............................................................................................... 9 157  Configuration Profiles and Scripts ..............................................................................10 158  Content Generation Scripts ........................................................................................10 159  3.4.1. Generate Baseline Script .......................................................................................10 160  3.4.2. Generate Guidance Script .....................................................................................10 161  3.4.3. macOS Security Compliance Tool .........................................................................11 162  3.4.4. SCAP Generation Script ........................................................................................11 163  3.4.5. Generate Mapping Script .......................................................................................11 164  Customization ............................................................................................................12 165  Directories .................................................................................................................12 166  References ..............................................................................................................................14 167  Appendix A. mSCP User Roles .........................................................................................15 168  Appendix B. Example of mSCP Usage by a Security Professional ................................16 169  Appendix C. Example of Creating a Benchmark Using ODVs ........................................21 170  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor .......................23 171  Appendix E. List of Symbols, Abbreviations, and Acronyms ........................................25 172  Appendix F. Change Log ..................................................................................................26 173  Table of Figures 174  Fig. 1. Security Baseline YAML File ........................................................................................... 7 175  Fig. 2. YAML Rule File ............................................................................................................... 9 176  Fig. 3. Compliance Script Sample Output ..................................................................................11 177  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  v  Fig. 4. Downloading the mSCP code .........................................................................................16 178  Fig. 5. Changing the directory to the mSCP git folder ................................................................16 179  Fig. 6. Changing code branches and generating a baseline ......................................................17 180  Fig. 7. Generating the compliance checker script and configuration profiles .............................17 181  Fig. 8. Running the compliance checker script ..........................................................................17 182  Fig. 9. Selecting run new compliance scan from the main menu ...............................................18 183  Fig. 10. Compliance scan output ...............................................................................................18 184  Fig. 11. Compliance report ........................................................................................................19 185  Fig. 12. Disclaimer for non-compliant settings remediation .......................................................19 186  Fig. 13. Interactive application of compliant settings .................................................................20 187  Fig. 14. Generate Baseline Command ......................................................................................21 188  Fig. 15. Prompt for Bencbmark Name .......................................................................................21 189  Fig. 16. Prompts for Rule File Inclusion .....................................................................................21 190  Fig. 17. Display Rule Description ..............................................................................................22 191  Fig. 18. Rule Prompting for an ODV ..........................................................................................22 192  193  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  vi  Acknowledgments 194  The authors wish to thank Jason Blake, Blair Heiserman, and Stephanie Roberts from NIST; 195  Allen Golbig from Jamf; Dan Brodjieski, Gary Gapinski, Elyse Anderson, and Joshua Glemza 196  from NASA; and Jamie Richardson and Chris Stone from Apple for their contributions to the 197  mSCP. The authors appreciate Bob McSulla and Ryan Jaynes from Tenable for developing audit 198  files based on the mSCP, testing the baselines for different macOS versions, and contributing to 199  Appendix C. The authors also thank Isabel Van Wyk from NIST for editing the document. 200  Finally, portions of this document are based on content from the mSCP Wiki, so the work of all 201  Wiki contributors is appreciated. 202  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  1  Introduction 203  The National Institute of Standards and Technology (NIST) has traditionally published secure 204  configuration guides for Apple desktop/laptop operating system versions as prose-based Special 205  Publications (SPs), such as NIST SP 800-179, Revision 1, Guide to Securing Apple macOS 10.12 206  Systems for IT Professionals: A NIST Security Configuration Checklist. In order to provide 207  security configuration guidance to organizations more quickly and in a machine-consumable 208  format, NIST established the open-source macOS Security Compliance Project (mSCP). NIST 209  no longer produces SP guidance documents for each macOS release; instead, the mSCP 210  continuously curates and updates machine-consumable macOS guidance. The latest macOS 211  security baseline content is maintained and updated on the mSCP GitHub page [1].  212  Security baselines are groups of settings used to configure a system to meet a target level or set 213  of requirements or to verify that a system complies with requirements. The mSCP seeks to 214  simplify the macOS security development cycle by reducing the amount of effort required to 215  implement security baselines. This collaboration between federal agencies minimizes duplicate 216  effort that would otherwise be needed for these agencies to administer individual security 217  baselines. Additionally, the secure baseline content provided is easily extensible by other parties 218  to implement their own security requirements.  219  Organizations using mSCP content, particularly security baseline examples, should take a risk-220  based approach for selecting the appropriate settings and defining values that consider the 221  context under which the baseline will be utilized. 222  Purpose and Scope 223  The purpose of this document is to introduce the mSCP to broader audiences. This document 224  provides a high-level overview of the mSCP, its components, and some common use cases. It 225  refers readers to the online project documentation for in-depth technical information and use 226  instructions. This document is intended to be independent of macOS version releases; updates 227  will be released as needed when there are substantial changes to the mSCP.  Updates from the 228  previous release of this document mainly involve the new mSCP capability to create a custom 229  benchmark by tailoring a baseline. 230  The information in this document regarding the details of the mSCP GitHub site is accurate as of 231  the time of publication. Readers seeking the latest detailed information on mSCP content or the 232  content itself should visit the mSCP GitHub page and wiki. 233  Organizations that need to reference a NIST SP to demonstrate how they are complying with 234  United States Government mandates for adopting secure configurations for their macOS devices 235  may reference this SP instead of its deprecated predecessors, such as SP 800-179 or SP 800-179, 236  Revision 1. 237  Audience 238  This document and the mSCP GitHub site are intended for system administrators, security 239  professionals, policy authors, privacy officers, and auditors who have responsibilities involving 240  https://github.com/usnistgov/macos_security https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  2  macOS security. Additionally, vendors of device management, security, configuration 241  assessment, and compliance tools that support macOS may find this document and the GitHub 242  site to be helpful. 243  Relevance to NIST SP 800-70 and the National Checklist Program 244  The security baselines from the mSCP GitHub page are included in the National Checklist 245  Program. NIST SP 800-70, Revision 4 [2], explains that federal agencies are required to use 246  appropriate security configuration checklists from the National Checklist Program when 247  available. Part 39 of the Federal Acquisition Regulations, Section 39.101 paragraph (c) states,  248  In acquiring information technology, agencies shall include the 249  appropriate information technology security policies and requirements, 250  including use of common security configurations available from the 251  National Institute of Standards and Technology’s website at 252  https://checklists.nist.gov. Agency contracting officers should consult 253  with the requiring official to ensure the appropriate standards are 254  incorporated. 255  Document Structure 256  The remaining sections and appendices of this document are as follows: 257  • Section 2 provides an overview of the project, including what its goals are and how its 258  content can be used. 259  • Section 3 explains the major components of the mSCP and provides pointers to additional 260  information on component usage. 261  • The References section lists the references for the document. 262  • Appendix A briefly discusses how mSCP can help meet the needs of people in several 263  roles. 264  • Appendix B provides examples of how a security professional might use mSCP content. 265  • Appendix C contains an example of how an assessment tool vendor could leverage mSCP 266  content. 267  • Appendix D lists selected acronyms and abbreviations used in this document. 268  269  https://checklists.nist.gov/  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  3  Project Description 270  The mSCP is an open-source project that provides a programmatic approach to generating and 271  using macOS security configuration baselines. The project’s content can be used to create 272  customized security baselines of technical security controls by leveraging a library of rules, with 273  each rule mapped to requirements in one or more existing security standards, regulations, or 274  frameworks. This approach provides versioning and consistency of the content. Unifying and 275  standardizing macOS baseline efforts via the mSCP means that updating security guidance is 276  simplified and radically accelerated, even as new versions of macOS are introduced annually. 277  The mSCP started in August 2019 as a collaboration among operational IT security staff from 278  NIST, the National Aeronautics and Space Administration (NASA), the Defense Information 279  Systems Agency (DISA), and the Department of Energy’s (DOE) Los Alamos National 280  Laboratory (LANL).1 The mSCP sought to map macOS settings to NIST SP 800-53, Revision 4 281  [3] with an extensible, modern approach to security guidance that could be used by any 282  organization (e.g., government, enterprise, education) that needs to adhere to security compliance 283  frameworks and policy.  284  As of this writing, the configuration settings represent guidance and best practices from NIST SP 285  800-53, Revision 5 [4]; NIST SP 800-171, Revision 2 [5]; the macOS DISA Security Technical 286  Implementation Guide (STIG) [6]; the Committee on National Security Systems (CNSS) 287  Instruction (CNSSI) Number 1253 [7]; the Center for Internet Security (CIS) Critical Security 288  Controls Version 8 [8]; and internal organizational security guidance from NIST, NASA, and 289  LANL. 290  Project Goals 291  Apple releases a new macOS version every year, and generally, agencies and organizations must 292  wait for guidance or accept risk before deploying the new macOS version. Most agencies or 293  organizations must create their own internal security configuration, which delays the deployment 294  of the new macOS version or new hardware that only supports the new macOS version. The 295  mSCP assists organizations in upgrading sooner. Generally, the technical security settings in 296  macOS do not drastically change from release to release, with only a handful of new settings 297  being introduced. By pursuing a rules-based approach, mSCP rules that remain applicable can be 298  reused and incorporated into guidance for the latest macOS version. This enables quicker 299  adoption of new security features that are not offered in prior versions of macOS. 300  The goals of the mSCP are to:  301  • Develop recommended security baselines using a risk-based approach 302  • Normalize and accelerate annual adoption of the new operating system and hardware by 303  providing guidance to meet the security needs of new operating systems at the earliest 304  availability 305  • Reduce worldwide efforts in creating annual guidance by unifying and consolidating 306  compliance efforts into a single project 307  1 See https://github.com/usnistgov/macos_security#authors for a current list of project contributors.  https://github.com/usnistgov/macos_security#authors  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  4  • Develop a methodology to foster collaboration between baseline authors, reducing 308  overhead and redundancy 309  • Establish a unified approach for the configuration and assessment of controls across 310  multiple sources and tools 311  • Enable the customization of existing content and the creation of new content, including 312  creating custom baselines in order to meet organization-specific security requirements 313  • Provide device management and security tool vendors, auditors, and Apple insight into 314  customer security configuration needs 315  mSCP Content Use 316  mSCP content can be used by any organization to assist in setting and assessing the security 317  configuration of macOS systems. Security baselines can map to existing guidance or controls, 318  such as those in NIST SP 800-53, Revision 5 [4], or they can be customized to meet an 319  organization’s specific needs. In mSCP terminology, a security baseline is represented as a 320  baseline file that designates the rules for meeting a specific set of requirements. The mSCP 321  provides a library of rules that are macOS settings. Each rule is mapped to a requirement within 322  a security standard or framework. Baseline files and rules comprise much of the mSCP’s content. 323  The mSCP offers several example baselines with descriptions adapted from Federal Information 324  Processing Standards (FIPS) 199 [9], such as: 325  • The SP 800-53, Revision 5 low baseline is a defined map of controls to secure a system 326  defined as a low-impact information system. The loss of confidentiality, integrity, or 327  availability could be expected to have a limited adverse effect on organizational 328  operations, organizational assets, or individuals. 329  • The SP 800-53, Revision 5 moderate baseline is a defined map of controls to secure a 330  system defined as a moderate-impact information system. The loss of confidentiality, 331  integrity, or availability could be expected to have a serious adverse effect on 332  organizational operations, organizational assets, or individuals. 333  • The SP 800-53, Revision 5 high baseline is a defined map of controls to secure a system 334  defined as a high-impact information system. The loss of confidentiality, integrity, or 335  availability could be expected to have a severe or catastrophic adverse effect on 336  organizational operations, organizational assets, or individuals. 337  Organizations using any baseline example should take a risk-based approach for selecting the 338  appropriate settings and organizationally defined values depending on the context under which 339  the baseline will be applied. Organizations can tailor any of the baselines to include controls 340  specific to their needs and to produce evidence of control enforcement. Additional information 341  on baseline customization can be found in SP 800-70 [2], which discusses the importance of 342  customizing and testing baselines before applying them to a production system. 343  The mSCP provides scripts that can be used with baselines for several purposes, including the 344  following: 345  • Creating scripts and profiles for configuring macOS 346  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  5  • Generating a mapping between security standards, regulations, frameworks, etc. 347  • Producing human-readable documentation in a variety of formats 348  • Customizing existing baselines 349  mSCP content can also be used to generate Security Content Automation Protocol (SCAP) 350  content for automated security compliance scans. The SCAP generated follows the SCAP 1.3 351  specification [10]. The generation of SCAP content uses an Extensible Stylesheet Language 352  Transformations (XSLT) file to create an Extensible Configuration Checklist Description Format 353  (XCCDF) checklist document with an accompanying Open Vulnerability and Assessment 354  Language (OVAL) document.  355  The XCCDF and OVAL documents are bundled into an SCAP data stream collection document 356  with accompanying files that include Common Platform Enumeration (CPE) dictionary [11] 357  information and an Open Checklist Interactive Language (OCIL) document. This creates an 358  SCAP 1.3 document that validates using the NIST SCAP Content Validation Tool2 and can be 359  used by SCAP tools on macOS. More information on SCAP content generation is available at the 360  project wiki.  361  362  2 See https://csrc.nist.gov/projects/security-content-automation-protocol/scap-releases/scap-1-3.  https://github.com/usnistgov/macos_security/wiki/SCAP-Content-Generation https://csrc.nist.gov/projects/security-content-automation-protocol/scap-releases/scap-1-3  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  6  mSCP Components 363  This section provides an overview of several components of the mSCP: security baseline files, 364  configuration profiles and scripts, content generation scripts, customization capabilities, and 365  directories. More information about all of these is available at the GitHub wiki. 366  Baselines and Benchmarks 367  The mSCP includes both baselines and benchmarks. A baseline is a catalog of recommended 368  configuration settings, not a checklist or benchmark, and should be customized based on the 369  organization’s risk profile. Implementing every item is not likely to be possible or sensible in 370  many operational scenarios. Baselines can be used to assist in the creation of security 371  benchmarks. A benchmark differs from a baseline in that it defines values in addition to a set of 372  controls. Benchmarks are published by organizations that have made risk-based decisions, such 373  as DISA and CIS. Organizations can also define their own benchmark. These values are called 374  Organization-Defined Values (ODVs), and they exist throughout the baselines and can be set 375  during customization. 376  Security Baseline Files 377  In the mSCP, a security baseline is defined in a Yet Another Markup Language (YAML) file. A 378  YAML file is a human-readable file format commonly used by configuration files where data are 379  stored and/or transmitted. A baseline YAML file consists of the following required fields: 380  • title – A human-readable name for the baseline 381  • description – A short description of the baseline, including its use case and target 382  operating system (OS) version 383  • authors – Developers of the baseline 384  • profile – The security content portion of the baseline 385  o section – A keyword for organizing settings 386  o rules – The names of the rule files that are a part of this baseline 387  The following code provides a partial example of a YAML file that illustrates the use of these 388  fields (with field names bolded): 389  https://github.com/usnistgov/macos_security/wiki  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  7  title: \"Apple macOS 11 (Big Sur) Test Baseline\" 390  description: | 391  This guide describes the prudent actions to take when securing a macOS 11 392  system against the Test Baseline. 393  authors: | 394  |=== 395  |Joe Doe|NIST 396  |=== 397  profile: 398  - section: \"Authentication\" 399  rules: 400  - auth_pam_login_smartcard_enforce 401  - auth_pam_su_smartcard_enforce 402  - auth_pam_sudo_smartcard_enforce 403  - auth_smartcard_allow 404  - section: \"Auditing\" 405  rules: 406  - audit_acls_files_configure 407  - audit_acls_files_mode_configure 408  - audit_acls_folder_wheel_configure 409  Fig. 1. Security Baseline YAML File. 410  3.2.1. Rule File Composition 411  A YAML rule file is broken down into the following subsections. This list and the following 412  example are from the Rules section of the mSCP wiki. 413  • id – The id should match the file name without the yaml file extension. 414  • title – The title is a human-readable title of the rule. 415  • discussion – The discussion should provide a concise description of the intended use 416  of the rule. 417  • check – Every rule will have a check. A shell-based check should be able to validate and 418  check most rules. 419  • result – Expected results from the check. 420  • fix – The fix will appear in a document when generated. If a fix includes 421  [source,bash], the fix will be used for generating the script to enforce the rule. 422  • references –  The references include a Common Configuration Enumeration (CCE) 423  identifier and a mapping of the security frameworks, guidance, and individual controls 424  that have been mapped to the rule. See the official repository of NIST CCEs [12] for 425  more information. 426  • macOS – The validated macOS version for this rule. 427  • odv – If a rule supports the ODV functionality, then the odv section should be present. At 428  a minimum, this field should contain a hint (provides a description when tailoring a 429  baseline) and a default value that replaces the $ODV variable. 430  https://github.com/usnistgov/macos_security/wiki/Rules  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  8  • tags – Tags are keywords used to categorize and identify related rules, and they can be 431  added to or modified as needed. Tags can also be used to make index-based searching of 432  the rules faster and easier. 433  • severity – The severity level specified in the DISA STIG, if applicable. 434  • mobileconfig – The mobileconfig and mobileconfig_info subsections are related. If 435  mobileconfig is set to true, the information required for creating the mobileconfig 436  configuration profile is required in the mobileconfig_info area. 437  The following code provides a notional example of a YAML rule file (with field names bolded): 438  id: sysprefs_screensaver_timeout_enforce 439  title: \"Enforce Screen Saver Timeout\" 440  discussion: | 441  The screen saver timeout _MUST_ be set to $ODV seconds or a shorter length 442  of time. 443  444  This rule ensures that a full session lock is triggered within no more than 445  $ODV seconds of inactivity. 446  check: | 447  /usr/bin/osascript -l JavaScript << EOS 448  function run() { 449  let timeout = 450  ObjC.unwrap($.NSUserDefaults.alloc.initWithSuiteName('com.apple.screensaver')451  \\ 452  .objectForKey('idleTime')) 453  if ( timeout <= $ODV ) { 454  return(\"true\") 455  } else { 456  return(\"false\") 457  } 458  } 459  EOS 460  result: 461  string: \"true\" 462  fix: | 463  This is implemented by a Configuration Profile. 464  references: 465  cce: 466  - CCE-91074-5 467  cci: 468  - CCI-000057 469  800-53r5: 470  - AC-11 471  - IA-11 472  800-53r4: 473  - AC-11 474  srg: 475  - SRG-OS-000029-GPOS-00010 476  disa_stig: 477  - APPL-12-000004 478  800-171r2: 479  - 3.1.10 480  cis: 481  benchmark: 482  - 2.3.1 (level 1) 483  controls v8: 484  - 4.3 485  macOS: 486  - \"12.0\" 487  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  9  odv: 488  hint: \"Number of seconds.\" 489  default: 1200 490  stig: 900 491  cis_lvl1: 1200 492  cis_lvl2: 1200 493  tags: 494  - 800-53r5_moderate 495  - 800-53r5_high 496  - 800-53r5_low 497  - 800-53r4_moderate 498  - 800-53r4_high 499  - 800-171 500  - cnssi-1253 501  - cis_lvl1 502  - cis_lvl2 503  - cisv8 504  - stig 505  severity: \"medium\" 506  mobileconfig: true 507  mobileconfig_info: 508  com.apple.screensaver: 509  idleTime: $ODV 510  Fig. 2. YAML Rule File 511  3.2.2. Rule File Categories 512  The mSCP organizes YAML files in the rules directory into the following subdirectories, each 513  of which corresponds to a category of settings: 514  • audit – OpenBSM3 515  • auth – Smartcard authentication 516  • icloud – Apple’s iCloud/Apple ID service 517  • os – Rules to configure the operating system that do not fit into the other categories 518  • pwpolicy – Password policy 519  • system_settings or sysprefs – Settings controlled within the System Settings or 520  System Preferences application 521  The rules directory also includes a supplemental subdirectory, which contains additional 522  information that supports the guidance provided by the baselines. Supplemental content contains 523  information for rules that are not part of an existing baseline but could be beneficial for certain 524  use cases. Supplemental content may not have mappings and may not contain the YAML rule 525  file check and fix sections mentioned in Section 3.2.1. Supplemental content can be added to 526  enhance baselines where organizational requirements are different than the system baseline 527  requirements. 528  3 See OpenBSM at https://github.com/openbsm/openbsm.  https://github.com/openbsm/openbsm  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  10  Configuration Profiles and Scripts 529  When an mSCP YAML file is processed, it yields a configuration script and/or configuration 530  profile (mobileconfig file) as outputs. Both are used to apply configuration settings to a system.  531  A configuration profile is an Extensible Markup Language (XML) formatted file with a 532  mobileconfig extension that contains a configuration payload. macOS can automatically 533  configure itself based on a mobileconfig file’s contents upon execution. Configuration profiles 534  offer a convenient, Apple-supported mechanism for applying security settings to a macOS 535  environment. Additionally, they can be cryptographically signed to ensure integrity and 536  authenticity. These factors make configuration profiles the preferred vehicle for configuration 537  delivery. However, mobileconfig files cannot modify all macOS settings, so a configuration 538  script is needed for those settings that are not supported. See the developer documentation page 539  for an example configuration profile and brief descriptions of its properties. 540  A configuration script is a shell script that directly manipulates operating system files. The script 541  content is derived from all YAML rule files that have a mobileconfig value of false and 542  belong to the specified baseline. The YAML rule file must contain the fix section in order to 543  generate its corresponding configuration script entry.  544  Content Generation Scripts 545  The mSCP provides several types of scripts for generating baselines, human-readable guidance, 546  baseline compliance checkers, and other types of content. Each script is described below. 547  3.4.1. Generate Baseline Script 548  The generate_baseline.py Python script compiles a list of security rules into a single baseline 549  YAML file. It can be used to modify an existing security baseline or create a new one. See the 550  wiki for additional information. 551  3.4.2. Generate Guidance Script 552  The generate_guidance.py script can produce human-readable guidance and generate the 553  macOS Security Compliance Tool, which is a Z shell script. 554  The generate_guidance.py script takes a baseline file and produces a human-readable guide 555  with information from the YAML rules files. The script can create documentation in several 556  formats but always generates an AsciiDoc file. AsciiDoc (.adoc) is a plain text format that uses 557  markup conventions for traditional document formatting and organization. AsciiDoc files are 558  easily transformable into many other formats via the generate_guidance.py script, including 559  HTML, PDF, and Excel. The Excel format is particularly useful for quickly viewing all of the 560  rules of a baseline, and it contains all of the data in the YAML rules files. 561  The generate_guidance.py script can also create configuration profiles (mobileconfig files) 562  and the macOS Security Compliance Tool. Using the -s argument, the generate_guidance.py 563  script will generate an org.{baseline}.audit.plist file and another script, the macOS 564  Security Compliance Tool, that can check and remediate compliance settings. The audit.plist 565  https://developer.apple.com/documentation/devicemanagement/loginwindow https://github.com/usnistgov/macos_security/wiki/Scripts#generate_baselinepy  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  11  file can be used to set an exemption to organizational rules for approved users so that compliance 566  checks can succeed without findings. To create an exemption for a rule, the exempt field should 567  be set to true and an exempt_reason should be added. 568  See the wiki for more information on the generate_guidance.py script. 569  3.4.3. macOS Security Compliance Tool 570  The {baseline}_compliance.sh script runs interactively by default. It can evaluate a system’s 571  conformance to a baseline or remediate any incorrectly configured settings. Alternatively, the 572  script can autonomously assess a system with the –check argument or automatically remediate 573  baseline settings with –fix. 574  The lines below provide an example of the results of running the script:  575  Thu Jan 21 15:09:41 UTC 2021 auth_pam_login_smartcard_enforce passed (Result: 576  2, Expected: {integer: 2}) 577  Thu Jan 21 15:09:41 UTC 2021 auth_smartcard_allow passed (Result: 1, 578  Expected: {integer: 1}) 579  Thu Jan 21 15:09:41 UTC 2021 auth_pam_sudo_smartcard_enforce passed (Result: 580  2, Expected: {integer: 2}) 581  Thu Jan 21 15:09:41 UTC 2021 582  auth_smartcard_certificate_trust_enforce_moderate passed (Result: 2, 583  Expected: {integer: 2}) 584  Thu Jan 21 15:09:41 UTC 2021 auth_smartcard_enforce has an exemption (Reason: 585  Broken Reader) 586  Fig. 3. Compliance Script Sample Output. 587  For more information on the macOS Security Compliance Tool script, see the wiki. 588  3.4.4. SCAP Generation Script 589  The SCAP generation script, generate_scap.py can generate an SCAP 1.3 document, XCCDF 590  document, or OVAL file. The script builds content from available tags within the YAML files 591  and does not need to be pointed to a baseline file. 592  For more information, see the wiki. 593  3.4.5. Generate Mapping Script 594  The generate_mapping.py script allows for the quick creation of custom rules and baselines for 595  a compliance framework not published by the mSCP. The script requires a user-created comma-596  separated values (CSV) file containing control identifiers that maps to a new framework (CSV 597  column 1) from another already defined by the project (CSV column 2). By default, the script is 598  designed to map a framework to the NIST SP 800-53, Revision 5 [4] set of controls. Adding the 599  -f argument allows for mapping to another supported framework. See the wiki for more 600  information on the generate_mapping.py script. 601  https://github.com/usnistgov/macos_security/wiki/Scripts#generate_guidancepy-script https://github.com/usnistgov/macos_security/wiki/Compliance-Script https://github.com/usnistgov/macos_security/wiki/Generate-SCAP https://github.com/usnistgov/macos_security/wiki/Generate-Mapping  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  12  Customization 602  Organizations should make the risk-based decision on what controls and rules to use and how to 603  apply them, as stated by NIST SP 800-53, Revision 5 controls PL-10 and PL-11. Customization 604  allows organizations to generate their own customized content outside of that provided by the 605  project. Additionally, it allows them to add content for internal-only controls, which are not 606  suitable for inclusion in a global baseline. Customization primarily takes place within the custom 607  folder. Here are examples of customizations supported by mSCP: 608  • Baselines: A baseline folder can be included within the custom folder to create 609  customized baselines that fit an organization’s needs. These baseline files may include 610  rule, section, and template customization (discussed below). An existing baseline can be 611  configured to create a custom benchmark. Additionally, it is possible to customize an 612  included benchmark, but in doing so, it may no longer be compliant with the original 613  requirements of that benchmark. 614  • Rules: Existing rules can have their setting values overridden via the custom folder 615  instead of modifying the mSCP-supplied rule file. New rules can be created and added to 616  existing baselines or to user-defined baselines. Organizations can create their own 617  discussions, checks, results, fixes, and mappings of rules to security frameworks not 618  included in the project. In order to override an existing rule, the custom rule file name 619  must match an existing rule so that the generate_guidance.py script will pick up the 620  new values. New rules not included in mSCP must be listed in the baseline YAML file 621  specified when running generate_guidance.py. Additional information on custom 622  rules can be found in an article written by mSCP contributor Allen Golbig [13].  623  • Sections: Custom sections can be used to organize existing or custom YAML rule files. 624  Sections defined in the custom folder must be included in a baseline YAML file in order 625  to be used by generate_guidance.py. 626  • Templates: Custom templates can be used to define new template structures for the 627  project and affect the organization and appearance of generated documentation. The 628  template files must match the name of an existing template and will override that 629  template when running generate_guidance.py. 630  • Logos: An organization can include a custom logo when running the 631  generate_guidance.py script by using the -l argument to point to an image file.  632  • Tailoring: The generate_baseline.py script allows for a baseline to be tailored using 633  the -t argument. During the tailoring process, the script will prompt for each control 634  containing an ODV to have its values customized. If a value is not supplied to a control 635  with an ODV, it will use the default value in the rule file. Refer to Appendix C for an 636  example of tailoring with ODVs. 637  Directories 638  mSCP source code releases available on the mSCP GitHub include the following directories: 639  • baselines – Contains the defined YAML baseline files 640  https://github.com/usnistgov/macos_security/releases  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  13  • build – Holds scripts, documents, and configuration profiles generated by running 641  scripts 642  • custom – Used for creating customized baselines, rules, sections, or templates to meet an 643  organization’s requirements 644  • includes – Contains the YAML-based libraries required for running the scripts 645  • rules – Contains YAML rule files with one rule per file 646  • scripts – Contains the content generation scripts and their required files 647  • sections – Defines the sections that correlate to the directories in the rules folder; each 648  section has its own YAML file that contains the section name and description as it will 649  appear in the generated guide, which is human-readable documentation 650  • templates – Includes AsciiDoc templates for generating an AsciiDoc guide 651  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  14  References 652  [1] macOS Security Compliance Project (2023) macOS Security Compliance Project. 653  Available at https://github.com/usnistgov/macos_security  654  [2] Quinn SD, Souppaya MP, Cook MR, Scarfone KA (2018) National Checklist Program for 655  IT Products: Guidelines for Checklist Users and Developers. (National Institute of 656  Standards and Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-70, 657  Rev. 4. https://doi.org/10.6028/NIST.SP.800-70r4  658  [3] Joint Task Force Transformation Initiative (2013) Security and Privacy Controls for 659  Federal Information Systems and Organizations. (National Institute of Standards and 660  Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-53, Rev. 4, Includes 661  updates as of January 22, 2015. https://doi.org/10.6028/NIST.SP.800-53r4  662  [4] Joint Task Force (2020) Security and Privacy Controls for Information Systems and 663  Organizations. (National Institute of Standards and Technology, Gaithersburg, MD), NIST 664  Special Publication (SP) 800-53, Rev. 5. Includes updates as of December 10, 2020. 665  https://doi.org/10.6028/NIST.SP.800-53r5  666  [5] Ross R, Pillitteri V, Dempsey K, Riddle M, Guissanie G (2020) Protecting Controlled 667  Unclassified Information in Nonfederal Systems and Organizations. (National Institute of 668  Standards and Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-171, 669  Rev. 2, Includes updates as of January 28, 2021. https://doi.org/10.6028/NIST.SP.800-670  171r2  671  [6] Department of Defense (2023) DISA STIG for macOS. Available at 672  https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=mac-os  673  [7] Committee on National Security Systems (2014) Security Categorization and Control 674  Selection for National Security Systems. (National Security Agency, Ft. Meade, MD), 675  Committee on National Security Systems Instruction (CNSSI) No. 1253. Available at 676  https://www.cnss.gov/CNSS/issuances/Instructions.cfm  677  [8] Center for Internet Security (2023) CIS Critical Security Controls Version 8. Available at 678  https://www.cisecurity.org/controls/v8/ 679  [9] National Institute of Standards and Technology (2004) Standards for Security 680  Categorization of Federal Information and Information Systems. (U.S. Department of 681  Commerce, Washington, DC), Federal Information Processing Standards Publication 682  (FIPS) 199. https://doi.org/10.6028/NIST.FIPS.199  683  [10] Waltermire DA, Quinn SD, Booth H, III, Scarfone KA, Prisaca D (2018) The Technical 684  Specification for the Security Content Automation Protocol (SCAP): SCAP Version 1.3. 685  (National Institute of Standards and Technology, Gaithersburg, MD), NIST Special 686  Publication (SP) 800-126, Rev. 3. https://doi.org/10.6028/NIST.SP.800-126r3  687  [11] National Institute of Standards and Technology (2023). Official Common Platform 688  Enumeration (CPE) dictionary. Available at https://nvd.nist.gov/products/cpe  689  [12] National Institute of Standards and Technology (2022) CCE Platform Listing. Available at 690  https://ncp.nist.gov/cce  691  [13] Golbig A (2021) Getting to Know: macOS Security Compliance Project – Part 2. Available 692  at https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-693  24131b60cdfb  694  https://github.com/usnistgov/macos_security https://doi.org/10.6028/NIST.SP.800-70r4 https://doi.org/10.6028/NIST.SP.800-53r4 https://doi.org/10.6028/NIST.SP.800-53r5 https://doi.org/10.6028/NIST.SP.800-171r2 https://doi.org/10.6028/NIST.SP.800-171r2 https://public.cyber.mil/stigs/downloads/?_dl_facet_stigs=mac-os https://www.cnss.gov/CNSS/issuances/Instructions.cfm https://www.cisecurity.org/controls/v8/ https://doi.org/10.6028/NIST.FIPS.199 https://doi.org/10.6028/NIST.SP.800-126r3 https://nvd.nist.gov/products/cpe https://ncp.nist.gov/cce https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-24131b60cdfb https://golbiga.medium.com/getting-to-know-macos-security-compliance-project-part-2-24131b60cdfb  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  15  Appendix A. mSCP User Roles 695  The mSCP was designed to meet the needs of different security roles. These perspectives are 696  briefly examined below.  697  Security policy authors define the policies for their organizations. The customization and ease 698  of extensibility offered by the mSCP facilitate new content creation. Policy authors will need to 699  familiarize themselves with the YAML rule file format described in Section 3.2.1. Of particular 700  interest is the ability to map rules directly to references. Additionally, the generate mapping 701  script (Section 3.4.5) enhances portability between compliance frameworks. 702  System administrators and security professionals are responsible for configuring the systems 703  under their purview. They implement the guidance issued by security policy authors. Security 704  professionals may wish to generate baselines (Section 3.4.1), guidance (Section 3.4.2), and 705  configuration using the macOS Security Compliance Tool (Section 3.4.3). 706  Auditors approach macOS security compliance from a validator perspective, seeking proof that 707  a system is configured in the required way. They are more interested in system setting 708  documentation and compliance evidence than technical tools, such as configuration scripts. Both 709  of these needs can be met by mSCP tools. The generate guidance script (Section 3.4.2) provides 710  the necessary documentation in a variety of formats, including HTML, PDF, and Excel. The 711  macOS Security Compliance Tool (Section 3.4.3) assesses a system and produces a log of the 712  results. Additionally, some auditors may be interested in examining YAML rule content directly 713  (Section 3.2.1). 714  Information security officers have a variety of goals but are ultimately responsible for ensuring 715  that systems are configured according to their organizational requirements. To accomplish this, 716  they need policy documentation (Section 3.4.2) and the results of compliance scans (Section 717  3.4.3). Information security officers may also be responsible for reviewing the security rules 718  proposed by the policy authors. If this is the case, they may be interested in YAML rule file 719  components (Section 3.2.1). 720  Vendors of device management, security, configuration assessment, and compliance tools 721  can produce a series of audit files based on mSCP content to support different macOS versions 722  and associated security baselines. These audit files are maintained, tested, published, and 723  supported by the tool vendors. Tool customers can download and import the content into the tool 724  to assess the state of their system against a particular baseline in an automated way. 725  Specific audit files of the mSCP by tool vendors are described on the project wiki page. This 726  content will be updated as contributing tool vendors develop new audit content.  727  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  16  Appendix B. Example of mSCP Usage by a Security Professional 728  This appendix provides examples of how a security professional might use mSCP content. 729  People in other roles might perform some of the same actions. The examples illustrated below 730  were accurate at the time of publication, but see the mSCP wiki for up-to-date usage guidance. 731  Note that the mSCP scripts are not meant to replace enterprise-class configuration and 732  management tools. Configurations should be tested on development systems before being 733  deployed on end users’ systems. 734  Preparing to use mSCP 735  All project components are available from the mSCP GitHub page [1] by navigating to 736  Releases and downloading the latest source code revision for the desired macOS version. 737  Alternatively, the project source code can be downloaded via git, as the example below 738  illustrates.  739  740  Fig. 4. Downloading the mSCP code. 741  742  mSCP components rely on prerequisite software listed on the Getting Started page, and any 743  missing software must be installed.  744  Changing code branches and generating a baseline 745  After obtaining a copy of the source code, change the directory to the mSCP git folder, 746  macos_security.  747  748  Fig. 5. Changing the directory to the mSCP git folder. 749  750  Next, select the appropriate code branch that corresponds to the target OS version. Then choose a 751  baseline and use the generate_baseline.py script to create a baseline YAML file. The 752  https://github.com/usnistgov/macos_security/wiki https://github.com/usnistgov/macos_security/wiki/Getting-Started  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  17  example below illustrates these steps for the NIST SP 800-53, Revision 5 moderate baseline for 753  macOS Big Sur. 754  755  Fig. 6. Changing code branches and generating a baseline. 756  757  Creating the macOS Security Compliance Tool and configuration profiles 758  Using the generate_guidance.py script, create the macOS Security Compliance Tool and 759  configuration profiles. The example below illustrates this, continuing from the previous example. 760  761  Fig. 7. Generating the compliance checker script and configuration profiles. 762  763  Running a compliance scan 764  As the example below shows, the macOS Security Compliance Tool is typically run with 765  administrator privileges so that it can access all of the settings.  766  767  Fig. 8. Running the compliance checker script. 768  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  18  769  The example below shows the main menu presented by the macOS Security Compliance Tool. 770  771  Fig. 9. Selecting “Run New Compliance Scan” from the main menu. 772  773  Selecting option 2, “Run New Compliance Scan,” from the main menu launches the scan. The 774  example below shows output from the scan, which in this case reflects numerous rule failures, 775  each indicating a deviation from the expected configuration. 776  777  Fig. 10. Compliance scan output. 778  779  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  19  Selecting option 1, “View Last Compliance Report,” from the main menu displays a summary of 780  the compliance report results. The example below depicts results indicating that 30 tests passed 781  and 108 tests failed for an overall score of 21.74 % compliant. 782  783  Fig. 11. Viewing a compliance report. 784  785  Fixing non-compliant settings 786  Selecting option 3, “Run Commands to remediate non-compliant settings,” begins the process of 787  fixing non-compliant settings discovered during a previous compliance scan. The example below 788  illustrates the disclaimer to be reviewed and accepted before fixes are initiated. This disclaimer 789  indicates the potential risk in applying fixes. 790  791  Fig. 12. Disclaimer for non-compliant settings remediation. 792  793  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  20  After the disclaimer statement is accepted, the fixes are applied to the system, as the example 794  below illustrates.  795  796  Fig. 13. Interactively configuring settings. 797  798  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  21  Appendix C. Example of Creating a Benchmark Using ODVs 799  This appendix provides an example of tailoring a baseline to create a custom benchmark using 800  the generate_baseline.py script. The screenshot below illustrates the first step to creating a 801  benchmark. 802  803  Fig. 14. Generate baseline command. 804  805  The -t option for generate_baseline.py is used to customize the specified baseline. The 806  script prompts for a name for the benchmark being created, as the example below shows. 807  808  Fig. 15. Prompt for benchmark name. 809  810  Next, for each rule that exists in the specified starting baseline, the script asks if it should be 811  included in the custom benchmark. An example is shown below. 812  813  Fig. 16. Prompt for rule file inclusion. 814  815  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  22  Entering a “?” in response to a rule being included will display a description of that rule, as 816  illustrated below. 817  818  Fig. 17. Display rule description. 819  820  If a rule accepts an ODV, the script asks the user to enter their own value or use the default value 821  displayed. The example below illustrates this. 822  823  Fig. 18. Rule prompting for an ODV. 824  825  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  23  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor 826  This appendix provides an example of how an assessment tool vendor converted mSCP content 827  to their tool’s proprietary format so that their tool could perform compliance checks against 828  mSCP baselines and rules. Refer to the mSCP GitHub wiki page for the most current list of tool 829  vendors and associated content that will support the mSCP baselines. 830  This example is for Tenable, Inc. They automated the conversion of mSCP YAML rules into 831  their .audit format using Python and YAML libraries. Programmatically approaching this 832  conversion allows for faster future releases and greater consistency, and it also maintains the 833  integrity of the source content. Because the YAML content is all command-driven, it is 834  converted to Tenable’s CMD_EXEC check type for use with the Unix plugin. The YAML rules 835  have a “tags” section that was used to create unique audit profiles related to common 836  frameworks. An example of these profiles can be seen in the audit file naming convention: 837  • NIST_macOS_Big_Sur_800-171_v1.4.0.audit  838  • NIST_macOS_Catalina_800-53r5_high_v1.5.0.audit  839  See Tenable’s research highlight for more details. 840  The following example shows a YAML-to-audit-check conversion. The content has been 841  condensed and abbreviated for the purposes of comparison: 842  mSCP YAML 843  title: \"Limit SSHD to FIPS 140 Validated Ciphers\" 844  845  discussion: | 846  If SSHD is enabled, then it _MUST_ be configured to limit the ciphers to 847  algorithms that are FIPS 140-validated. 848  FIPS 140-2 is the current standard for validating that mechanisms used to 849  access cryptographic modules utilize authentication that meets federal 850  requirements. 851  Operating systems utilizing encryption _MUST_ use FIPS-validated mechanisms 852  for authenticating to cryptographic modules.  853  NOTE: /etc/ssh/sshd_config will be automatically modified to its original 854  state following any update or major upgrade to the operating system. 855  856  check: | 857  /usr/bin/grep -c \"^Ciphers aes256-ctr,aes192-ctr,aes128-ctr\" 858  /etc/ssh/sshd_config 859  860  result: 861  integer: 1 862  Tenable Audit Check 863  <custom_item> 864  system  : \"Darwin\" 865  type  : CMD_EXEC 866  description : \"Big Sur - Limit SSHD to FIPS 140 Validated Ciphers\" 867  info  : \"If SSHD is enabled, then it _MUST_ be configured to limit 868  the ciphers to algorithms that are FIPS 140-validated. 869  FIPS 140-2 is the current standard for validating that mechanisms used to 870  access cryptographic modules utilize authentication that meets federal 871  requirements. 872  873  https://github.com/usnistgov/macos_security/wiki/Vendor-Attribution https://community.tenable.com/s/feed/0D53a00008E0hgYCAR  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  24  Operating systems utilizing encryption _MUST_ use FIPS-validated mechanisms 874  for authenticating to cryptographic modules. 875  NOTE: /etc/ssh/sshd_config will be automatically modified to its original 876  state following any update or major upgrade to the operating system.\" 877  cmd  : \"/usr/bin/grep -c \\\"^Ciphers aes256-ctr,aes192-ctr,aes128-878  ctr\\\" /etc/ssh/sshd_config\" 879  expect  : \"1\" 880  </custom_item> 881  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  25  Appendix E. List of Symbols, Abbreviations, and Acronyms 882  Selected acronyms and abbreviations used in this paper are defined below.  883  CCE 884  Common Configuration Enumeration 885  CIS 886  Center for Internet Security 887  CNSS 888  Committee on National Security Systems  889  CNSSI 890  Committee on National Security Systems Instruction 891  DISA 892  Defense Information Systems Agency 893  FIPS 894  Federal Information Processing Standards 895  LANL 896  Los Alamos National Laboratory 897  mSCP 898  macOS Security Compliance Project 899  NASA 900  National Aeronautics and Space Administration 901  NIST 902  National Institute of Standards and Technology 903  ODV 904  Organization-Defined Value 905  OVAL 906  Open Vulnerability and Assessment Language 907  SCAP 908  Security Content Automation Protocol 909  SP 910  Special Publication 911  STIG 912  Security Technical Implementation Guide 913  XCCDF 914  Extensible Configuration Checklist Description Format 915  YAML 916  Yet Another Markup Language 917  NIST SP 800-219r1 ipd (Initial Public Draft)  Automated Secure Configuration  March 2023  Guidance from the mSCP  26  Appendix F. Change Log 918  In March 2023, the following changes were made to this report: 919  • Made minor editorial changes throughout the report to improve clarity and usability  920  • Reformatted all content and revised front matter to follow the latest NIST technical report 921  template  922  • Merged the content of the Executive Summary into Section 1 and deleted the Executive 923  Summary section 924  • Section 1.1 – Summarized updates from the previous release 925  • Section 3.1 – Added a new subsection to define and discuss baselines and benchmarks 926  • Section 3.2.1 – Updated descriptions to match the project wiki and changed the example 927  rule file to one with an ODV 928  • Section 3.4.4 – Changed from OVAL generation script to SCAP generation script 929  • Section 3.5 – Added discussion on tailoring baselines and benchmarks using the 930  generate_baseline.py script and ODVs 931  • Appendix C – Created a new appendix showing an example of how to tailor a baseline to 932  create a custom benchmark 933  1. Introduction  1.1. Purpose and Scope  1.2. Audience  1.3. Relevance to NIST SP 800-70 and the National Checklist Program  1.4. Document Structure  2. Project Description  2.1. Project Goals  2.2. mSCP Content Use  3. mSCP Components  3.1. Baselines and Benchmarks  3.2. Security Baseline Files  3.2.1. Rule File Composition  3.2.2. Rule File Categories  3.3. Configuration Profiles and Scripts  3.4. Content Generation Scripts  3.4.1. Generate Baseline Script  3.4.2. Generate Guidance Script  3.4.3. macOS Security Compliance Tool  3.4.4. SCAP Generation Script  3.4.5. Generate Mapping Script  3.5. Customization  3.6. Directories  References  Appendix A. mSCP User Roles  Appendix B. Example of mSCP Usage by a Security Professional  Appendix C. Example of Creating a Benchmark Using ODVs  Appendix D. Example of mSCP Usage by an Assessment Tool Vendor  Appendix E. List of Symbols, Abbreviations, and Acronyms  Appendix F. Change Log",
    "abstract": ""
}